<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Control Flow Unflattening</title>
      <link href="/Control-Flow-Unflattening/"/>
      <url>/Control-Flow-Unflattening/</url>
      <content type="html"><![CDATA[<p><img src="/Control-Flow-Unflattening/compare.png"></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><p>Recently I have analyzed a RASP solution called <code>Approov</code>. Although there are some novel detection techniques, overall it‚Äôs not that interesting. Instead, I will focus on the obfuscation part of the native library, control flow flattening. You can find a host app with a little googling :)</p><h2 id="CFF"><a href="#CFF" class="headerlink" title="CFF"></a>CFF</h2><p>Control flow flattening (CFF) in a nutshell is a technique to obfuscate code flow by rearranging code blocks (+create new basic blocks) into switch cases. Visualizing it is more straightforward:</p><p><img src="/Control-Flow-Unflattening/cff_example.jpg"></p><p>If you think about the dynamic analysis perspective, the execution flow is the same as in the first case. The dispatcher (gray block) should execute blocks in the order of normal execution. Since you need to follow the state variable after each ‚Äúcase‚Äù execution, static analysis is harder for a reverse engineer and sometimes state variable is also obfuscated.</p><p>After seeing the cff‚Äôed binary I looked up earlier research about cff. I tried to work with <a href="https://github.com/eset/stadeo">stadeo</a>, then found  <a href="https://eshard.com/posts/D810-a-journey-into-control-flow-unflattening">eShard d810</a>. Stadeo uses miasm to lift binary and then analyze the cff whereas d810 uses HexRays microcode (intermediate representation of IDA). D810 can backward track variables, emulate microcode, and have very easy-to-extend config&#x2F;rule sets for opaque predicates, etc. So I sticked to d810. Make sure to read their blogs about d810<a href="https://eshard.com/posts/D810-a-journey-into-control-flow-unflattening">[1]</a><a href="https://eshard.com/posts/d810-deobfuscation-ida-pro">[2]</a></p><h2 id="Microcode"><a href="#Microcode" class="headerlink" title="Microcode"></a>Microcode</h2><p>D-810 hooks the decompilation process of IDA and makes changes. Micro instructions(minsnt_t), micro-operations (mop_t), blocks (mblocks_t) in microcode. Before giving execution back to IDA final mba needs to be verified.</p><p>Oh, boi.. Before realizing all internal errors of (INTERR) microcode was documented in <code>hexrays_sdk/verifier/verify.cpp</code> I tried to find the meaning of all INTERR‚Äôs by dumping microcode. I used d810‚Äôs dump_microcode_for_debug function to dump microcode which helped a lot for debugging. To debug D810 (or any IDA Pro plugin) I followed this <a href="https://0xd0cf11e.github.io/post/debug_idapython_plugin_vscode/">blog post</a></p><h2 id="Unflatten"><a href="#Unflatten" class="headerlink" title="Unflatten"></a>Unflatten</h2><p>To unflatten, we need to find state variables in dispatcher fathers. The Dispatcher father is a block that goes into the dispatcher directly. If we know the state variable in dispatcher father, we can calculate the next dispatched block from dispatcher and replace the dispatcher father‚Äôs next location with found block.</p><p>Let‚Äôs give a example from the sample. Each switch case body and initial state variable assignments are a dispatcher father.</p><p><img src="/Control-Flow-Unflattening/example_jmptable.png"></p><p>Switch case starts with initial state variable 1010106. Knowing if state is 1010106 (X), dispatcher(Y) will go into code block(Z): <code>v1 = (qword_470e8 == 0) + 1010107</code>, We can directly go into block(Z) from assignment of 1010106(X). Meaning instead of <code>X-&gt;Y-&gt;Z</code> we will have <code>X-&gt;Z</code></p><p>In d810 there is a rule for cff with a switch table called <code>default_unflattening_switch_case.json</code>. Unfortunately, it does not work for this case. But why? Because of the <code>v1 = (qword_470e8 == 0) + 1010107</code>. It can generate two different variables from single block. </p><p>Actually, they tried to solve this problem. If a block can have more than one state variable value (think about two if cases with different state assignments), they ‚Äúduplicate any block which appears in (at least) 2 paths with (at least) 2 different predecessors.‚Äù But there is no predecessor in this case. So how I solved it ? By creating jz condition with <a href="https://github.com/eybisi/d810/blob/master/d810/optimizers/flow/flattening/generic.py#L491">two new blocks</a>.</p><p>Let‚Äôs look at the microcode representation of these blocks to understand easier. To show microcode I used a plugin called <a href="https://github.com/gaasedelen/lucid">lucid</a> </p><p><img src="/Control-Flow-Unflattening/microcode.png"></p><ul><li>Take comparison part of block 5 </li><li>make it jz condition with comparison</li><li>Create two new blocks with calculated state variable</li><li>fix in&#x2F;out bounds of blocks</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">block 5:</span><br><span class="line">    jz qword_470e8 == 0 @7</span><br><span class="line"></span><br><span class="line">block 6:</span><br><span class="line">    mov 1010107,eax</span><br><span class="line">    goto @4</span><br><span class="line"></span><br><span class="line">block 7:</span><br><span class="line">    mov 1010108,eax</span><br><span class="line">    goto @4</span><br><span class="line"></span><br><span class="line">block 4:</span><br><span class="line">    jtbl eax ..</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>After finding dispatcher fathers, I used the mop tracker history feature of d810 to find all father histories and fixed instructions that can create two state variables before executing generic unflattening of d810.</p><p>After the changes, all dispatcher fathers have constant state variables. Then we can use d810‚Äôs cff solver part and continue.</p><p><img src="/Control-Flow-Unflattening/decompile_0.png"></p><h2 id="Bad-While-Loops"><a href="#Bad-While-Loops" class="headerlink" title="Bad While Loops"></a>Bad While Loops</h2><p>After solving jump tables I saw bad while loops. Not that important but we can simplify these too.</p><p><img src="/Control-Flow-Unflattening/badwhile.png"></p><p>Microcode represantation is as following</p><p><img src="/Control-Flow-Unflattening/microcode_2.png"></p><p>Block 14 is a dispatcher and exit blocks (like jtbl) are 16, 19, 21 (outbounds of jump conditions). Dispatcher fathers can be calculated from inbounds of block 14: 13 and 18. I created new flattening <a href="https://github.com/eybisi/d810/blob/master/d810/optimizers/flow/flattening/unflattener_badwhile_loop.py">optimizer class</a> in d810 and used it to clear bad while loops.</p><p><img src="/Control-Flow-Unflattening/goodwhile.png"></p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Hexrays Microcode is a powerful beast and playing with it was fun. And the feeling of seeing 2k line of code unflattened is üëå. If you have any questions you can ping me at <a href="https://twitter.com/0xabc0">@0xabc0</a></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://blog.jscrambler.com/jscrambler-101-control-flow-flattening">CFF Example image taken from jscrambler.com</a><br><a href="https://hex-rays.com/blog/hex-rays-microcode-api-vs-obfuscating-compiler/">Rolf Rolles blog post</a><br><a href="https://news.sophos.com/en-us/2022/05/04/attacking-emotets-control-flow-flattening/">Sophos Attacking Emotet‚Äôs Control Flow Flattening</a><br><a href="https://eshard.com/posts/D810-a-journey-into-control-flow-unflattening">eShard d810 cff post</a><br><a href="https://eshard.com/posts/d810-deobfuscation-ida-pro">eShard d810 deobf post</a><br><a href="https://blogs.vmware.com/security/2019/02/defeating-compiler-level-obfuscations-used-in-apt10-malware.html">TAU Defeating Compiler-Level Obfuscations</a><br><a href="https://blog.quarkslab.com/deobfuscation-recovering-an-ollvm-protected-program.html">Quarkslab Deobfuscation: recovering an OLLVM-protected program</a><br><a href="https://github.com/RolfRolles/HexRaysDeob">HexRaysDeob</a><br><a href="https://github.com/gaasedelen/lucid">IDA Plugin: lucid</a><br><a href="https://gitlab.com/eshard/d810/">IDA Plugin: d810</a><br><a href="https://0xd0cf11e.github.io/post/debug_idapython_plugin_vscode/">Debugging IDA Pro plugins</a></p>]]></content>
      
      
        <tags>
            
            <tag> Obfuscation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mobile Malware Analysis : Overlay and How to Counter It (Partly)</title>
      <link href="/Mobile-Malware-Analysis-Overlay-and-How-to-Counter-it/"/>
      <url>/Mobile-Malware-Analysis-Overlay-and-How-to-Counter-it/</url>
      <content type="html"><![CDATA[<h2 id="Defeating-Overlay"><a href="#Defeating-Overlay" class="headerlink" title="Defeating Overlay"></a>Defeating Overlay</h2><p>In my last <a href="https://eybisi.run/Mobile-Malware-Analysis-Tricks-used-in-Anubis/">anubis</a> post I touched on overlay and how malware use process scanning to get top process. If somehow we can bypass those techniques, in a way overlay can be defeated. In this<br>post I will try to explain my way of finding a protection for some android versions. </p><h2 id="TLDR"><a href="#TLDR" class="headerlink" title="TLDR;"></a>TLDR;</h2><p>You can use </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line">    <span class="type">Method</span> <span class="variable">setter</span> <span class="operator">=</span> android.os.Process.class.getMethod(<span class="string">&quot;setArgV0&quot;</span>, String.class); </span><br><span class="line">    setter.invoke(android.os.Process.class, text); &#125; </span><br><span class="line">    <span class="keyword">catch</span> (NoSuchMethodException e) &#123; e.printStackTrace(); &#125; </span><br><span class="line">    <span class="keyword">catch</span> (IllegalAccessException e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">    <span class="keyword">catch</span> (InvocationTargetException e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>to change your application‚Äôs name to protect users that have android 5.1 and 6.0 </p><h2 id="What-is-process-scanning-and-why-malware-use-it"><a href="#What-is-process-scanning-and-why-malware-use-it" class="headerlink" title="What is process scanning and why malware use it?"></a>What is process scanning and why malware use it?</h2><p>Process scanning is a way for getting list of running processes. Most of the android malware use process scanning to get top activity currenlty running. Then they use this information for deploying overlay attacks. Knowing which processes is currenly top active, helps to select which phishing overlay page malware will use and make attack more believable. Android was aware of this attack vector and take some steps to disable these functions. Here is a <a href="https://jaredrummler.com/2017/09/13/android-processes/">blogpost</a> cover overall situtation. </p><p>Generally android is secure environment for processes. Each application have different userid and none of application&#x2F;process have rights to read&#x2F;write of other processes data. But up until API 23, there was always a way to read process list without any permission. After API 23, applications need to get PACKAGE_USAGE_STATS (system permission) or Accessibility permissions to read process list.</p><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Lets say <code>com.x.bank</code> is targeted application by malware. Malware infected the device and overlays <code>com.x.bank</code>. Mechanism of overlaying itself can be divided in two elements. First one is triggering when <code>com.x.bank</code> started (achieved via process scanning) and second one is how an app can overlay itself on top of another app. Second element is functionality of android applications. Any app can open itself with the help of services&#x2F;receivers&#x2F;intents. We can‚Äôt interfere that functionality. What about first element of overlay mechanism ? Is there a way for an application to defend itself by not being in process list or giving randomized name to process list ? This was in my head for a long time. </p><h2 id="Thoughts"><a href="#Thoughts" class="headerlink" title="Thoughts"></a>Thoughts</h2><p>Randomize package name<br>Change process name<br>Hide from usage stats service ? :)</p><h2 id="Android-Version-vs-Technique"><a href="#Android-Version-vs-Technique" class="headerlink" title="Android Version vs Technique"></a>Android Version vs Technique</h2><p>Each android version invervals malware use different techniques to list process&#x2F;package names. </p><table><thead><tr><th align="center">API</th><th align="center">Technique</th></tr></thead><tbody><tr><td align="center">&lt;&#x3D; 19</td><td align="center">runningTask.get(0).topActivity</td></tr><tr><td align="center">20,21</td><td align="center">getRunningAppProcesses().get(0).processName</td></tr><tr><td align="center">22 23</td><td align="center">&#x2F;proc&#x2F;pid&#x2F;cmdline, &#x2F;proc&#x2F;pid&#x2F;stat</td></tr></tbody></table><blockquote><p>23 |  UsageStats (anubis) or Accessibility (hydra)</p></blockquote><p>According to <a href="https://developer.android.com/about/dashboards">Android</a> usage distrubition chart of android versions as follows :</p><table><thead><tr><th align="center">Version</th><th align="center">Codename</th><th align="center">API</th><th align="center">Usage Percent</th></tr></thead><tbody><tr><td align="center">4.4</td><td align="center">Kitkat</td><td align="center">19</td><td align="center">%7.6</td></tr><tr><td align="center">5.0</td><td align="center">Lollipop</td><td align="center">21</td><td align="center">%3.5</td></tr><tr><td align="center">5.1</td><td align="center"></td><td align="center">22</td><td align="center">%14.4</td></tr><tr><td align="center">6.0</td><td align="center">Marshmallow</td><td align="center">23</td><td align="center">%21.3</td></tr><tr><td align="center">7.0</td><td align="center">Nougat</td><td align="center">24</td><td align="center">%18.1</td></tr><tr><td align="center">7.1</td><td align="center"></td><td align="center">25</td><td align="center">%10.1</td></tr><tr><td align="center">8.0</td><td align="center">Oreo</td><td align="center">26</td><td align="center">%14.0</td></tr><tr><td align="center">8.1</td><td align="center"></td><td align="center">27</td><td align="center">%7.5</td></tr></tbody></table><h2 id="Processes-in-Android"><a href="#Processes-in-Android" class="headerlink" title="Processes in Android"></a>Processes in Android</h2><p>If I can change process name of the application, since malware checks static package names, I can avoid being detected. </p><p>Sadly I can only do something for <code>/proc/pid</code> listing techniques. (which is %35.7 of android users tho) To get information about process there are several places. You can try yourself also.</p><ul><li>&#x2F;proc&#x2F;pid&#x2F;cmdline</li><li>&#x2F;proc&#x2F;pid&#x2F;stat</li><li>&#x2F;proc&#x2F;pid&#x2F;status</li></ul><p>To change process name I came across to prctl system call. Using PR_SET_NAME and New name as argument one can change current process‚Äô name. Maybe I could call prctl from native side of application and change process name. But before writing code I tried it with frida. I hooked prctl and checked if its called with PR_SET_NAME (15). Then I replaced called string with another string. </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> prctlPtr = <span class="title class_">Module</span>.<span class="title function_">findExportByName</span>(<span class="literal">null</span>, <span class="string">&#x27;prctl&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> prctlOri = <span class="keyword">new</span> <span class="title class_">NativeFunction</span>(prctlPtr,<span class="string">&#x27;int&#x27;</span>,[<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>])</span><br><span class="line"><span class="title class_">Interceptor</span>.<span class="title function_">replace</span>(prctlPtr, <span class="keyword">new</span> <span class="title class_">NativeCallback</span>( <span class="keyword">function</span> (<span class="params">a,b,c,d,e</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">15</span>)&#123;</span><br><span class="line">        pname = <span class="title class_">Memory</span>.<span class="title function_">readUtf8String</span>(<span class="title function_">ptr</span>(b))</span><br><span class="line">        <span class="keyword">if</span> (pname.<span class="title function_">includes</span>(<span class="string">&quot;cbunlkwsqtz&quot;</span>))&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(a,b,c,d,e)</span><br><span class="line">            <span class="keyword">for</span> ( i=<span class="number">0</span>; i&lt; <span class="number">9</span> ;i++)&#123;</span><br><span class="line">                pname = <span class="title class_">Memory</span>.<span class="title function_">readUtf8String</span>(<span class="title function_">ptr</span>(b-i))</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Brute: &quot;</span>+i+ <span class="string">&quot; &quot;</span>+pname)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title class_">Memory</span>.<span class="title function_">writeS64</span>(<span class="title function_">ptr</span>(b-<span class="number">9</span>),<span class="number">0x306362617830</span>)</span><br><span class="line">            pname = <span class="title class_">Memory</span>.<span class="title function_">readUtf8String</span>(<span class="title function_">ptr</span>(b-<span class="number">9</span>))</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;YAY ! new process name : &quot;</span>,pname)</span><br><span class="line">            <span class="keyword">var</span> fd = <span class="title function_">prctlOri</span>(a,b-<span class="number">9</span>,c,d,e)</span><br><span class="line">            <span class="keyword">return</span> fd</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">var</span> fd = <span class="title function_">prctlOri</span>(a,b,c,d,e)</span><br><span class="line">    <span class="keyword">return</span> fd</span><br><span class="line">    &#125;, <span class="string">&#x27;int&#x27;</span>, [<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>]));</span><br></pre></td></tr></table></figure><p>And <code>voila</code></p><p><img src="/Mobile-Malware-Analysis-Overlay-and-How-to-Counter-it/frida.jpg" alt="frida"></p><p>Ps commands shows new process name but malware doesn‚Äôt get changed name. Because proc&#x2F;pid&#x2F;cmdline didn‚Äôt change. Also why prctl even called ? Since I didnt know much about how android processes get their names I searched up again. <code>How can process change its cmdline or stat value ?</code> <a href="https://unix.stackexchange.com/questions/302948/change-proc-pid-environ-after-process-start">Stackoverflow</a>. But does Android application have argc or argv ? So I searched aosp project and come across to <a href="https://github.com/aosp-mirror/platform_frameworks_base/blob/6bebb8418ceecf44d2af40033870f3aabacfe36e/cmds/app_process/app_main.cpp#L332">this</a> :) See the comment </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Also note that this is a constant for &quot;normal&quot; android apps.</span><br><span class="line">// Since they&#x27;re forked from zygote, the size of their command line</span><br><span class="line">// is the size of the zygote command line.</span><br><span class="line">//</span><br><span class="line">// We change the process name of the process by over-writing</span><br><span class="line">// the start of the argument block (argv[0]) with the new name of</span><br><span class="line">// the process, so we&#x27;d mysteriously start getting truncated process</span><br><span class="line">// names if the zygote command line decreases in size.  </span><br></pre></td></tr></table></figure><p>In android there is a process called Zygote. Zygote is the ancestor of all processes like init0. Every process is fork of zygote.<br>After being forked from zygote, application‚Äôs process name changes within app_main.cpp. Knowing that I looked up which function I could used and saw <a href="https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/os/Process.java"><code>setArgv0</code></a> which sound right. Then I tried with application. Opened up android studio.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os.Process</span><br><span class="line">Process.setArgv0(<span class="string">&quot;0xabc0&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>But android studio didn‚Äôt resolve setArgv0. If I go to declartion of Process class I can see setArgv0 there.</p><p><img src="/Mobile-Malware-Analysis-Overlay-and-How-to-Counter-it/huh.jpg" alt="huh"></p><p>So whats happenning ?<br>See <code>@hide</code> tag. That tag means its hidden from developer because they are internally used and can be changed in future APIs. Also these methods can be classified in four list  after <a href="https://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces">Android 9</a>. But we are trying to protect users that use Android 6. So there is no problem. </p><p>You can‚Äôt directly call these hidden methods but you can use reflection (big thanks to <a href="https://twitter.com/ibrahimsn98">@ibrahimsn98</a>!) </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line">    <span class="type">Method</span> <span class="variable">setter</span> <span class="operator">=</span> android.os.Process.class.getMethod(<span class="string">&quot;setArgV0&quot;</span>, String.class); </span><br><span class="line">    setter.invoke(android.os.Process.class, text); &#125; </span><br><span class="line">    <span class="keyword">catch</span> (NoSuchMethodException e) &#123; e.printStackTrace(); &#125; </span><br><span class="line">    <span class="keyword">catch</span> (IllegalAccessException e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">    <span class="keyword">catch</span> (InvocationTargetException e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>With this, process name is changed everywhere cmdline,stat,status. YAY!</p><p>I created 2 apk to test this. One apk is getting processes. I used this <a href="https://github.com/jaredrummler/AndroidProcesses">project</a> which is used in Anubis. And other app is changing its process name with <code>setArgv0</code>. </p><p><img src="/Mobile-Malware-Analysis-Overlay-and-How-to-Counter-it/hide.gif" alt="gif"></p><p>The reason why app is not in process list is scanner app tries to access &#x2F;data&#x2F;app&#x2F;package-name folder. Since we changed the name, it tries to access &#x2F;data&#x2F;app&#x2F;0xabc0 which is not there. So it doesn‚Äôt display it.</p><h2 id="Thoughts-1"><a href="#Thoughts-1" class="headerlink" title="Thoughts"></a>Thoughts</h2><p>For other methods I couldn‚Äôt find anything. Android can give rights&#x2F;permissions to applications for not being in stats menu to avoid being detected by <code>USAGE_STATS</code> or  by <code>Accessibility</code> maybe . Targeted apps can be saved from overlaying attacks with these rights. </p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>With little code you can change your application‚Äôs process name in certain API versions. It can be used to protect users from malware :)</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://www.geeksonsecurity.com/android-overlay-malware/2016/07/27/android-overlay-malware-analysis/">https://www.geeksonsecurity.com/android-overlay-malware/2016/07/27/android-overlay-malware-analysis/</a></p><p><a href="https://www.symantec.com/connect/blogs/android-malware-finds-new-ways-derive-current-running-tasks">https://www.symantec.com/connect/blogs/android-malware-finds-new-ways-derive-current-running-tasks</a></p><p><a href="https://www.nowsecure.com/blog/2017/05/25/android-overlay-malware-system-alert-window-permission/">https://www.nowsecure.com/blog/2017/05/25/android-overlay-malware-system-alert-window-permission/</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>DEF CON Quals 2019 : Vitor</title>
      <link href="/DEF-CON-Quals-2019-Vitor/"/>
      <url>/DEF-CON-Quals-2019-Vitor/</url>
      <content type="html"><![CDATA[<h2 id="Vitor"><a href="#Vitor" class="headerlink" title="Vitor"></a>Vitor</h2><p><img src="/DEF-CON-Quals-2019-Vitor/mm.jpg" alt="mm"></p><p>Defcon 2019 qualifiersda sorulmu≈ü android reverse kategorisine ait bir ctf sorusu. Matru≈üka misali birka√ß b√∂l√ºmden olu≈üuyor. Soruda bize bir <a href="https://github.com/o-o-overflow/dc2019q-vitor-public/blob/master/vitor.apk">apk</a> veriliyor. Uygulama bizden input olarak flagi istiyor ve doƒüruluƒüunu kontrol ediyor. </p><h2 id="Asama-1-Dex"><a href="#Asama-1-Dex" class="headerlink" title="A≈üama 1 : Dex"></a>A≈üama 1 : Dex</h2><p>Verilen apkyƒ± <code>jadx</code> gibi ara√ßlarla decompile edip java kodunu inceleyebiliyoruz. Classlara g√∂z attƒ±ƒüƒ±mƒ±zda <code>fc</code> class‚Äôƒ±nƒ± g√∂r√ºyoruz. Genel olarak her a≈üamada yapƒ±lacak olanlar birbirine benzer. Sadece ilk a≈üama i√ßin detaylƒ± bir a√ßƒ±klama yapacaƒüƒ±m. Flagi kontrol eden fonksiyonumuz ≈üu ≈üekilde:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">cf</span><span class="params">(MainActivity mainActivity, String str)</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">z</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        cfa(mainActivity, p1EncFn);</span><br><span class="line">        cfa(mainActivity, p5EncFn);</span><br><span class="line">        cfa(mainActivity, randEncFn);</span><br><span class="line">        cfa(mainActivity, rand2EncFn);</span><br><span class="line">        <span class="keyword">if</span> (str.startsWith(<span class="string">&quot;OOO&#123;&quot;</span>) &amp;&amp; str.endsWith(<span class="string">&quot;&#125;&quot;</span>) &amp;&amp; str.length() == <span class="number">45</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cf(mainActivity, dp1(mainActivity, <span class="keyword">new</span> <span class="title class_">File</span>(mainActivity.getFilesDir(), p1EncFn), g0(str.substring(<span class="number">4</span>, <span class="number">44</span>))), str)) &#123;</span><br><span class="line">                <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(mainActivity.getFilesDir(), <span class="string">&quot;bam.html&quot;</span>);</span><br><span class="line">                <span class="type">WebView</span> <span class="variable">webView</span> <span class="operator">=</span> mainActivity.mWebView;</span><br><span class="line">                <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">                stringBuilder.append(<span class="string">&quot;file:///&quot;</span>);</span><br><span class="line">                stringBuilder.append(file.getAbsolutePath());</span><br><span class="line">                stringBuilder.append(<span class="string">&quot;?flag=&quot;</span>);</span><br><span class="line">                stringBuilder.append(Uri.encode(str));</span><br><span class="line">                webView.loadUrl(stringBuilder.toString());</span><br><span class="line">                z = mValid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ƒ∞lk kontrolden anlƒ±yoruzki Flag <code>OOO&#123;</code> ile ba≈ülayƒ±p <code>&#125;</code> ile bitiyor. Uzunluƒüu 45. Ardƒ±ndan sƒ±rasƒ±yla incelersek:</p><p><code>g0(str.substring(4, 44)))</code> : g0 fonksiyonuna flagimizin s√ºsl√º parantezler i√ßerisinde kalan input yollanƒ±yor. g0 fonksiyonu :</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] g0(String str) &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">byte</span>[] bArr = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    <span class="type">byte</span>[] bytes = str.getBytes();</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        bArr[i] = (<span class="type">byte</span>) <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">0</span>; i2 &lt; <span class="number">10</span>; i2++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            bArr[i] = (<span class="type">byte</span>) ((<span class="type">byte</span>) (bArr[i] ^ bytes[(i2 * <span class="number">4</span>) + i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Fonksiyon 4 bytelƒ±k bir array d√∂nd√ºr√ºyor. Bu 4 byte‚Äôƒ± da ≈üu ≈üekilde hesaplƒ±yor:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">byte[<span class="number">0</span>] = flag[<span class="number">0</span>]^flag[<span class="number">8</span>]^flag[<span class="number">16</span>]^flag[<span class="number">24</span>]^flag[<span class="number">32</span>]</span><br><span class="line">byte[<span class="number">1</span>] = flag[<span class="number">1</span>]^flag[<span class="number">9</span>]^flag[<span class="number">17</span>]^flag[<span class="number">25</span>]^flag[<span class="number">33</span>]</span><br><span class="line">byte[<span class="number">2</span>] = flag[<span class="number">2</span>]^flag[<span class="number">10</span>]^flag[<span class="number">18</span>]^flag[<span class="number">26</span>]^flag[<span class="number">34</span>]</span><br><span class="line">byte[<span class="number">3</span>] = flag[<span class="number">3</span>]^flag[<span class="number">11</span>]^flag[<span class="number">19</span>]^flag[<span class="number">27</span>]^flag[<span class="number">35</span>]</span><br></pre></td></tr></table></figure><p>g0 fonksiyonundan d√∂nen 4byte, dp1 fonksiyonuna 3. parametre olarak gidiyor.</p><p><code>dp1(mainActivity, new File(mainActivity.getFilesDir(), p1EncFn), g0(str.substring(4, 44)))</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> File <span class="title function_">dp1</span><span class="params">(Context context, File file, <span class="type">byte</span>[] bArr)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">byte</span>[] hash = hash(bArr);</span><br><span class="line">    <span class="type">byte</span>[] readAllBytes = Files.readAllBytes(file.toPath());</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">AlgorithmParameterSpec</span> <span class="variable">ivParameterSpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IvParameterSpec</span>(initVector);</span><br><span class="line">        <span class="type">Key</span> <span class="variable">secretKeySpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(hash, <span class="string">&quot;AES&quot;</span>);</span><br><span class="line">        <span class="type">Cipher</span> <span class="variable">instance</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;AES/CBC/PKCS5PADDING&quot;</span>);</span><br><span class="line">        instance.init(<span class="number">2</span>, secretKeySpec, ivParameterSpec);</span><br><span class="line">        readAllBytes = instance.doFinal(readAllBytes);</span><br><span class="line">        <span class="type">File</span> <span class="variable">file2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(context.getFilesDir(), p1Fn);</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file2);</span><br><span class="line">        fileOutputStream.write(readAllBytes, <span class="number">0</span>, readAllBytes.length);</span><br><span class="line">        fileOutputStream.flush();</span><br><span class="line">        fileOutputStream.close();</span><br><span class="line">        <span class="keyword">return</span> file2;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bu fonksiyonda √∂nce 4byte‚Äôƒ±n md5ini alƒ±yor. Bu digest deƒüerini aes keyi olarak kullanƒ±yor ve input olarak verilen dosyayƒ± decrypt ediyor. dp1‚Äôi √ßaƒüƒ±rƒ±ken class‚Äôƒ±n ba≈üƒ±nda tanƒ±mlanmƒ±≈ü<br><code> public static String p1EncFn = &quot;ckxalskuaewlkszdva&quot;;</code> deƒüeri kullanƒ±lƒ±yor. Apk‚Äôƒ±mƒ±zƒ±n i√ßerisindeki asset klasorune bakarsak bu dosyayƒ± g√∂rebiliyoruz. Peki bu dosyayƒ± decrypt edip ne yapƒ±yor ?</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">cf</span><span class="params">(Context context, File file, String str)</span> &#123;</span><br><span class="line">    <span class="type">File</span> <span class="variable">file2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(context.getFilesDir().getAbsolutePath());</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">loadClass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DexClassLoader</span>(file.getAbsolutePath(), file2.getAbsolutePath(), file2.getAbsolutePath(), ClassLoader.getSystemClassLoader()).loadClass(<span class="string">&quot;ooo.p1.P1&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ((Boolean) loadClass.getDeclaredMethod(<span class="string">&quot;cf&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Context.class, String.class&#125;).invoke(loadClass, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;context, str&#125;)).booleanValue();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Decrypt edilen dosya DexClassLoader APIsi ile contexte y√ºkleniyor. Bu olayƒ± android malwarelerinde √ßok g√∂r√ºyoruz. Tersine m√ºhendisliƒüi zorla≈ütƒ±rmak i√ßin ‚Äúpacking‚Äù y√∂ntemini sƒ±klƒ±kla kullanƒ±yorlar. </p><p>ooo.p1.P1 class‚Äôƒ± invoke edilip o class i√ßerisinden bir fonksiyon √ßaƒüƒ±rƒ±lƒ±yor. Bu fonksiyon boolean bir deƒüer d√∂nd√ºr√ºyor ( O fonksiyonda baska fonksiyonlar cagiriyor tabi ). Ve flagin doƒüruluƒüu kontrol edilmi≈ü oluyor .</p><p>A≈üama 1‚Äôi toparlasak:</p><ul><li>Flagin belli indexlerini XORla ve 4byte‚Äôƒ± al</li><li>md5</li><li>ckxalskuaewlkszdva dosyasƒ±nƒ± bu keyle decrypt et</li><li>decrypt edilen dosya i√ßerisinden ooo.p1.P1 classƒ±nƒ± load et.</li></ul><p>Peki biz bu 4byte‚Äôƒ± nasƒ±l bulabiliriz ?</p><p>Biliyoruzki decrypt edilen dosyanƒ±n bir jar dosyasƒ± olmasƒ± lazƒ±m. Neden ? √á√ºnk√º kullanƒ±lan DexClassLoader fonksiyonu dosya formatƒ± olarak jar kabul ediyor. Jar dosyalarƒ± da bir nevi zip ve zip dosyalarƒ±nƒ±n Magic Byte‚Äôƒ±nƒ± yani dosya tipini anladƒ±ƒüƒ±mƒ±z header kƒ±smƒ±nƒ± biliyoruz. <code>\x50\x4b\x03\x04</code> dosya headerƒ± olarak bu bytelarƒ± arayacaƒüƒ±z.</p><p>≈ûimdi brute i√ßin ≈üu ≈üekilde bir python scripti yazalƒ±m:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">IV = <span class="built_in">bytes</span>([<span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>])</span><br><span class="line">N_BIT = <span class="number">4</span></span><br><span class="line">S_BIT = <span class="number">2</span>**<span class="number">7</span> + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">DATA = <span class="built_in">open</span>(<span class="string">&#x27;ckxalskuaewlkszdva&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read(<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key_1 <span class="keyword">in</span> <span class="built_in">range</span>(S_BIT):</span><br><span class="line">    <span class="keyword">for</span> key_2 <span class="keyword">in</span> <span class="built_in">range</span>(S_BIT):</span><br><span class="line">        <span class="built_in">print</span>(key_1, key_2, end=<span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> key_3 <span class="keyword">in</span> <span class="built_in">range</span>(S_BIT):</span><br><span class="line">            <span class="keyword">for</span> key_4 <span class="keyword">in</span> <span class="built_in">range</span>(S_BIT):</span><br><span class="line">                key = hashlib.md5(</span><br><span class="line">                    <span class="built_in">bytes</span>([key_1, key_2, key_3, key_4])).digest()</span><br><span class="line">                aes = AES.new(key, AES.MODE_CBC, IV)</span><br><span class="line">                decrypted_data = aes.decrypt(DATA)</span><br><span class="line">                <span class="keyword">if</span> decrypted_data.startswith(<span class="string">b&#x27;\x50\x4b\x03\x04&#x27;</span>):</span><br><span class="line">                     <span class="built_in">print</span>(key_1, key_2, key_3, key_4)</span><br><span class="line">                     IV = <span class="built_in">bytes</span>([<span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>, <span class="number">19</span>, <span class="number">55</span>])</span><br><span class="line">                     f= <span class="built_in">open</span>(<span class="string">&quot;ckxalskuaewlkszdva&quot;</span>,<span class="string">&quot;rb&quot;</span>)</span><br><span class="line">                     DATA = f.read()</span><br><span class="line">                     f.close()</span><br><span class="line">                     key = hashlib.md5(</span><br><span class="line">                        <span class="built_in">bytes</span>([key_1, key_2, key_3, key_4])).digest()</span><br><span class="line">                     aes = AES.new(key, AES.MODE_CBC, IV)</span><br><span class="line">                     decrypted_data = aes.decrypt(DATA)</span><br><span class="line">                     f = <span class="built_in">open</span>(<span class="string">&quot;out.zip&quot;</span>,<span class="string">&quot;wb&quot;</span>)</span><br><span class="line">                     f.write(decrypted_data)</span><br><span class="line">                     f.close()</span><br></pre></td></tr></table></figure><p>Girdiƒüimiz stringler sonu√ßta ASCII yani 7bitlik aralƒ±kta olduƒüu i√ßin XOR sonucu elde edilecek byte aralƒ±ƒüƒ±da bu aralƒ±ƒüa sahip olmak zorunda. </p><p>Burda dikkatinizi <code>DATA = open(&#39;ckxalskuaewlkszdva&#39;, &#39;rb&#39;).read(32)</code> satƒ±rƒ±na vermenizi rica ediyorum. Neden 32 byte okuyorum burada ? </p><p><a href="aes.png">aes</a></p><p>AES CBC encryption ≈üemasƒ±nda sizin dosyanƒ±z ne kadar b√ºy√ºse de ilk bloƒüun son halini ilgilendiren bir olay ger√ßekle≈ümiyor. Yani biz sadece ilk blok i√ßin deneme yaparak keyi bulabiliriz. Bu √ßok b√ºy√ºk √∂l√ß√ºde i≈üimizi kolayla≈ütƒ±rƒ±yor. 1.6 MB dosyanƒ±n boyutunu 32byte‚Äôa d√º≈ü√ºrm√º≈ü oluyoruz. </p><p>Bu scripti √ßalƒ±≈ütƒ±rdƒ±ƒüƒ±mƒ±zda birka√ß dakika i√ßerisinde ilk keyimizi alƒ±yoruz.</p><p>Key 1 : <code>\x17\x01\x2f\x03</code></p><p>Her a≈üamamƒ±zda flagin belirli bytelarƒ±na dair bilgi ede ede ilerliyoruz. </p><h2 id="Asama-2-SO"><a href="#Asama-2-SO" class="headerlink" title="A≈üama 2 : SO"></a>A≈üama 2 : SO</h2><p>ƒ∞lk a≈üamaya benzer bir dex dosyasƒ± ile kar≈üƒ±la≈üƒ±yoruz.</p><p>Bu sefer jar dosyasƒ± yerine bir adet <code>.so</code> dosyasƒ± olu≈üturulmasƒ± gerekiyor ve XORlanan indexler deƒüi≈üik.</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i2 = <span class="number">0</span>; i2 &lt; <span class="number">10</span>; i2 += <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        bArr[i] = (byte) ((byte) (bArr[i] ^ bytes[((i2 + <span class="number">1</span>) * <span class="number">4</span>) + i]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">byte[<span class="number">0</span>] = flag[<span class="number">4</span>]^flag[<span class="number">12</span>]^flag[<span class="number">20</span>]^flag[<span class="number">28</span>]^flag[<span class="number">36</span>]</span><br><span class="line">byte[<span class="number">1</span>] = flag[<span class="number">5</span>]^flag[<span class="number">13</span>]^flag[<span class="number">21</span>]^flag[<span class="number">29</span>]^flag[<span class="number">37</span>]</span><br><span class="line">byte[<span class="number">2</span>] = flag[<span class="number">6</span>]^flag[<span class="number">14</span>]^flag[<span class="number">22</span>]^flag[<span class="number">30</span>]^flag[<span class="number">38</span>]</span><br><span class="line">byte[<span class="number">3</span>] = flag[<span class="number">7</span>]^flag[<span class="number">15</span>]^flag[<span class="number">23</span>]^flag[<span class="number">31</span>]^flag[<span class="number">39</span>]</span><br></pre></td></tr></table></figure><p>Aynƒ± scripti kullanarak zip headeri yerine .so dosyanƒ±n yani ELF headerini <code>\x73\x45\x4c\x46</code> yazƒ±yoruz, input dosyasƒ±nƒ± <code>mmdffuoscjdamcnssn</code> olarak deƒüi≈ütirip ikinici keyimizi de alƒ±yoruz.</p><p>Key2 : <code>\x3c\x27\x43\x60</code></p><h2 id="Asama-3-Shellkod"><a href="#Asama-3-Shellkod" class="headerlink" title="A≈üama 3 Shellkod:"></a>A≈üama 3 Shellkod:</h2><p>Bu sefer i≈üler deƒüi≈üiyor. Biliyoruzki so dosyasƒ±ndan xxx fonksiyonu √ßaƒüƒ±rƒ±lƒ±yor. </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">native</span> String <span class="title function_">xxx</span><span class="params">(String str, String str2)</span>;</span><br></pre></td></tr></table></figure><p>So dosyanƒ± IDA ile a√ßƒ±p incelediƒüimizde bu fonksiyonu g√∂rebiliyoruz.</p><p><img src="/DEF-CON-Quals-2019-Vitor/ida1.png" alt="ida1.png"></p><p>Daha kolay anla≈üƒ±lmasƒ± i√ßin deƒüi≈üken ve fonksiyonlari isimlendirdim.</p><p>√ñnce asset klasorunden <code>xtszswemcwohpluqmi</code> dosyasƒ± okunuyor ve key hesaplandƒ±ktan sonra bu dosya decrypt ediliyor. Bu sefer biraz olaylar farklƒ±. Keyi hesaplamak i√ßin fonksiyon ≈üu ≈üekilde:</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">K2_0 = <span class="number">0</span>;</span><br><span class="line">flaga = flag + <span class="number">4</span>;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">3</span>; i &lt; <span class="number">10</span>; i += <span class="number">3</span> )</span><br><span class="line">  K2_0 ^= *&amp;flaga[<span class="number">4</span> * (i - <span class="number">1</span>)];</span><br><span class="line"><span class="keyword">return</span> K2_0;</span><br></pre></td></tr></table></figure><p>yani : </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">byte[<span class="number">0</span>] = flag[<span class="number">8</span>]^flag[<span class="number">20</span>]^flag[<span class="number">32</span>]</span><br><span class="line">byte[<span class="number">1</span>] = flag[<span class="number">9</span>]^flag[<span class="number">21</span>]^flag[<span class="number">33</span>]</span><br><span class="line">byte[<span class="number">2</span>] = flag[<span class="number">10</span>]^flag[<span class="number">22</span>]^flag[<span class="number">34</span>]</span><br><span class="line">byte[<span class="number">3</span>] = flag[<span class="number">11</span>]^flag[<span class="number">23</span>]^flag[<span class="number">35</span>]</span><br></pre></td></tr></table></figure><p>Key hesaplandiktan sonra: </p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">100</span>; ++i )</span><br><span class="line"> &#123;</span><br><span class="line">   *&amp;p3enc[<span class="number">4</span> * i] ^= K2_0;</span><br><span class="line">   K2_0 += <span class="number">0x31333337</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p> fonksiyonuna veriliyor ve dosya bu ≈üekilde decrypt ediliyor. Peki bu sefer neye g√∂re decrypt edicez ? Decrypt edildikten sonra bir assembly kodu elde ediceƒüimiz belli. √á√ºnk√º fonksiyonun devamƒ±nda bu alani fonksiyon ≈üeklinde √ßaƒürƒ±lƒ±yor. </p><p><img src="/DEF-CON-Quals-2019-Vitor/ida2.png" alt="ida2"></p><p> Bu cepte. Fonksiyon √ßaƒüƒ±rƒ±lmadan √∂nceki android log‚Äôunun bastƒ±ƒüƒ± deƒüere baktƒ±ƒüƒ±mƒ±zda </p><p> <code>Jumping to nopsled in 3, 2, 1, ...</code> stringini g√∂r√ºyoruz. Nop sled ne demekti shellkod demekti. NOP instructionunƒ± shellkod yazan herkes illaki kullanmƒ±≈ütƒ±r. Instruction‚Äôƒ±n byte kar≈üƒ±lƒ±ƒüƒ± <code>0x90</code>. Sled olunca da bundan bir s√ºr√º demek. Decrypt ederken 4byte 4byte gidildiƒüi i√ßin encrypted dosyanƒ±n ilk 4 byteƒ±nƒ± <code>0x90909090</code> ile XORlarsak keyimizi elde ederiz. </p><p><code>hex(0x90909090^0xfef3b7de)</code> :  <code>\x6e\x63\x27\x4e</code> keyini veriyor. Bu key ile dosyayi decrypt etmek istersek :</p><p>Key3: <code>\x6e\x63\x27\x4e</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;xtszswemcwohpluqmi&quot;</span>,<span class="string">&quot;rb&quot;</span>)</span><br><span class="line">data = f.read()</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#K2_0 = hex(0x90909090^0xfef3b7de)</span></span><br><span class="line"><span class="comment">#endianess</span></span><br><span class="line">K2_0 = <span class="number">0x4e27636e</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;shell_out.dat&quot;</span>,<span class="string">&quot;wb&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line"></span><br><span class="line">    f.write(xor(data[<span class="number">4</span>*i:<span class="number">4</span>*i+<span class="number">4</span>],p32(K2_0)))</span><br><span class="line">    K2_0 += <span class="number">0x31333337</span></span><br><span class="line">    K2_0 = K2_0 &amp; <span class="number">0xffffffff</span></span><br><span class="line"></span><br><span class="line">f.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Olu≈üan dosyayƒ± <code>ndisasm -b 32 shell_out.dat</code> ≈üeklinde kontrol edebilirsiniz.</p><h2 id="Asama-4-ROP"><a href="#Asama-4-ROP" class="headerlink" title="A≈üama 4 : ROP"></a>A≈üama 4 : ROP</h2><p>En zor kƒ±sƒ±m burasƒ±. Shellkodun ne yaptƒ±ƒüƒ±nƒ± anlamamƒ±z gerek.</p><p>Fonksiyona girmeden √∂nce stackteki deƒüerlerimize bakalƒ±m:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.text:00008C8F                 mov     edx, [ebp+flag?]</span><br><span class="line">.text:00008C92                 mov     ebx, [ebp+cx_data]</span><br><span class="line">.text:00008C98                 mov     esi, [ebp+size]</span><br><span class="line">.text:00008C9E                 mov     [esp], edx      ; s</span><br><span class="line">.text:00008CA1                 mov     [esp+4], ebx    ; src</span><br><span class="line">.text:00008CA5                 mov     [esp+8], esi    ; n</span><br><span class="line">.text:00008CB5                 call    ecx</span><br></pre></td></tr></table></figure><p>Shellkod √ßaƒüƒ±rƒ±lƒ±rken ret adresi de pushlanacaƒüƒ± i√ßin stack deƒüerlerimiz 4 artƒ±yor.</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="number">90</span>                nop</span><br><span class="line">E800000000        call <span class="number">0x25</span>           <span class="comment">// 0x25i stacke pushla</span></span><br><span class="line"><span class="number">5B</span>                pop ebx             <span class="comment">// ebx = 0x25</span></span><br><span class="line"><span class="number">83</span>EB05            sub ebx,byte +<span class="number">0x5</span>   <span class="comment">// ebx = 0x20</span></span><br><span class="line"><span class="number">83</span>EB20            sub ebx,byte +<span class="number">0x20</span>  <span class="comment">// ebx = 0x0 + (Shellkodun y√ºklendiƒüi base)</span></span><br><span class="line"><span class="number">8B</span>7C2404          mov edi,[esp+<span class="number">0x4</span>]   <span class="comment">//flag</span></span><br><span class="line"><span class="number">31</span>C9              <span class="keyword">xor</span> ecx,ecx         </span><br><span class="line"><span class="number">83</span>C710            add edi,byte +<span class="number">0x10</span>  <span class="comment">//4byte kaydƒ±r = flag[0]</span></span><br><span class="line">BA02000000        mov edx,<span class="number">0x2</span>         </span><br><span class="line"><span class="number">330F</span>              <span class="keyword">xor</span> ecx,[edi]       <span class="comment">//flag[i:i+4] ^ ecx</span></span><br><span class="line"><span class="number">83</span>C710            add edi,byte +<span class="number">0x10</span>  <span class="comment">//4byte kaydƒ±r</span></span><br><span class="line"><span class="number">83</span>EA01            sub edx,byte +<span class="number">0x1</span>   <span class="comment">//edxi azalt</span></span><br><span class="line"><span class="number">75F</span>6              jnz <span class="number">0x3a</span>            <span class="comment">//loop 2 yapƒ±cak yani flag[0:4] ^ flag[16:20]</span></span><br><span class="line"><span class="number">83</span>EF20            sub edi,byte +<span class="number">0x20</span>  <span class="comment">//flagƒ±n basƒ±na geri d√∂n</span></span><br><span class="line"><span class="number">89</span>D8              mov eax,ebx         <span class="comment">//eax = 0</span></span><br><span class="line"><span class="number">05</span>C8000000        add eax,<span class="number">0xc8</span>        <span class="comment">//eax = 200;</span></span><br><span class="line">BA32000000        mov edx,<span class="number">0x32</span>        <span class="comment">//edx = 50;</span></span><br><span class="line"><span class="number">3108</span>              <span class="keyword">xor</span> [eax],ecx       <span class="comment">//ecxte key vardƒ±; 200 ofsetindeki deƒüerler anlamsƒ±z</span></span><br><span class="line"><span class="number">83</span>C004            add eax,byte +<span class="number">0x4</span>   <span class="comment">//4byte ilerle</span></span><br><span class="line"><span class="number">83</span>EA01            sub edx,byte +<span class="number">0x1</span>   <span class="comment">//edx-1 ; 50 kez xorlanƒ±cak; 50*4 =200; 200+200=400 tam dosya boyu</span></span><br><span class="line"><span class="number">75F</span>6              jnz <span class="number">0x53</span>            <span class="comment">//loop; yine bir decryption </span></span><br><span class="line"><span class="number">89</span>D8              mov eax,ebx         <span class="comment">//eax = 0</span></span><br><span class="line"><span class="number">052</span>C010000        add eax,<span class="number">0x12c</span>       <span class="comment">//eax = 300</span></span><br><span class="line">BA19000000        mov edx,<span class="number">0x19</span>        <span class="comment">//edx = 25</span></span><br><span class="line"><span class="number">0118</span>              add [eax],ebx       <span class="comment">//[eax]taki deƒüerlere base&#x27;i ekle </span></span><br><span class="line"><span class="number">83</span>C004            add eax,byte +<span class="number">0x4</span>   <span class="comment">//4byte ilerle</span></span><br><span class="line"><span class="number">83</span>EA01            sub edx,byte +<span class="number">0x1</span>   <span class="comment">//dec</span></span><br><span class="line"><span class="number">75F</span>6              jnz <span class="number">0x69</span>            <span class="comment">//loop</span></span><br><span class="line"><span class="number">89</span>D8              mov eax,ebx         <span class="comment">//eax = base</span></span><br><span class="line"><span class="number">052</span>C010000        add eax,<span class="number">0x12c</span>       <span class="comment">//eax = 300</span></span><br><span class="line"><span class="number">89E2</span>              mov edx,esp         <span class="comment">//save esp</span></span><br><span class="line"><span class="number">8B</span>7C2404          mov edi,[esp+<span class="number">0x4</span>]   <span class="comment">//edi = flag</span></span><br><span class="line"><span class="number">8B</span>742408          mov esi,[esp+<span class="number">0x8</span>]   <span class="comment">//esi = data</span></span><br><span class="line"><span class="number">8B</span>5C240C          mov ebx,[esp+<span class="number">0xc</span>]   <span class="comment">//ebx = size</span></span><br><span class="line"><span class="number">89</span>C4              mov esp,eax         <span class="comment">//esp = 300</span></span><br><span class="line">C3                ret</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Simdi kodumuz ne yapƒ±yor kabaca bahsedersek:</p><ul><li>Key hesapla</li><li>200-400 arasƒ±nƒ± bu key ile xorla</li><li>300den sonrasƒ± i√ßin shellkodun y√ºklendiƒüi base‚Äôi ekle</li><li>esp‚Äôye 300un offsetini ata</li><li>ret</li><li>ret‚Äôten sonra kod executionu 300den devam edicek</li></ul><p>≈ûimdi bizim if‚Äôi ge√ßebilmemiz i√ßin bu fonksiyondan d√∂nen deƒüerin 0x31337 olmasƒ± lazƒ±m. ≈ûuan g√∂r√ºn√ºrde bu deƒüer yok. 300‚Äôe gittikten sonra bu i≈üi yapmasƒ± lazƒ±m.</p><p>200-400 arasƒ±nƒ± XORlayacak keyi bulmak i√ßin bu aralƒ±ƒüa bir bakalƒ±m.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">000000c0: 9090 9090 9090 9090 fa18 3313 42db b0d3  ..........3.B...</span><br><span class="line">000000d0: 46db f09a b2db b815 8129 3dd0 c1de 37d0  F........)=...7.</span><br><span class="line">000000e0: c1f3 37d0 3c19 f04b 819b df0b 81a0 3a13  ..7.&lt;..K......:.</span><br><span class="line">000000f0: 4218 f0ab 750b 3013 8191 ebd0 cbd3 f09a  B...u.0.........</span><br><span class="line">00000100: 8adb f2d2 4adb 02da 812b 7c07 812b 7c3b  ....J....+|..+|;</span><br><span class="line">00000110: 8188 a383 d288 a383 d288 a383 d288 a383  ................</span><br><span class="line">00000120: d288 a383 d288 a383 d288 a383 4419 3313  ............D.3.</span><br><span class="line">00000130: 4b19 3313 4f19 3313 9b18 3313 9e18 3313  K.3.O.3...3...3.</span><br><span class="line">00000140: 4019 3313 a218 3313 a618 3313 ab18 3313  @.3...3...3...3.</span><br><span class="line">00000150: b118 3313 c918 3313 4218 3313 4218 3313  ..3...3.B.3.B.3.</span><br><span class="line">00000160: 4218 3313 4218 3313 4218 3313 4218 3313  B.3.B.3.B.3.B.3.</span><br><span class="line">00000170: 4218 3313 4218 3313 4218 3313 4218 3313  B.3.B.3.B.3.B.3.</span><br><span class="line">00000180: 4218 3313 4218 3313 4218 3313 4218 3313  B.3.B.3.B.3.B.3.</span><br></pre></td></tr></table></figure><p>Bloƒüun sonuna bakarsanƒ±z hep tekrar eden deƒüerler g√∂r√ºyoruz. Bloƒüun ba≈üƒ± i≈üe anlamsƒ±z datalardan olu≈üuyor. Burda bloƒüun sonunun 0x0 lerle bittiƒüini d√º≈ü√ºnerek XOR keyi olarak 0x42183313 kullandƒ±m. </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00000000  B800000000        mov eax,0x0</span><br><span class="line">00000005  C3                ret</span><br><span class="line">00000006  83C004            add eax,byte +0x4</span><br><span class="line">00000009  C3                ret</span><br><span class="line">0000000A  C3                ret</span><br><span class="line">0000000B  89F0              mov eax,esi</span><br><span class="line">0000000D  C3                ret</span><br><span class="line">0000000E  8B06              mov eax,[esi]</span><br><span class="line">00000010  C3                ret</span><br><span class="line">00000011  310E              xor [esi],ecx</span><br><span class="line">00000013  C3                ret</span><br><span class="line">00000014  83C604            add esi,byte +0x4</span><br><span class="line">00000017  C3                ret</span><br><span class="line">00000018  83EB04            sub ebx,byte +0x4</span><br><span class="line">0000001B  C3                ret</span><br><span class="line">0000001C  7E01              jng 0x1f</span><br><span class="line">0000001E  C3                ret</span><br><span class="line">0000001F  58                pop eax</span><br><span class="line">00000020  C3                ret</span><br><span class="line">00000021  83EC18            sub esp,byte +0x18</span><br><span class="line">00000024  C3                ret</span><br><span class="line">00000025  B809000000        mov eax,0x9</span><br><span class="line">0000002A  C3                ret</span><br><span class="line">0000002B  B837130300        mov eax,0x31337</span><br><span class="line">00000030  C3                ret</span><br><span class="line">00000031  89D8              mov eax,ebx</span><br><span class="line">00000033  C3                ret</span><br><span class="line">00000034  89CB              mov ebx,ecx</span><br><span class="line">00000036  C3                ret</span><br><span class="line">00000037  89C8              mov eax,ecx</span><br><span class="line">00000039  C3                ret</span><br><span class="line">0000003A  C1C108            rol ecx,byte 0x8</span><br><span class="line">0000003D  C3                ret</span><br><span class="line">0000003E  31C9              xor ecx,ecx</span><br><span class="line">00000040  C3                ret</span><br><span class="line">00000041  334F14            xor ecx,[edi+0x14]</span><br><span class="line">00000044  C3                ret</span><br><span class="line">00000045  334F28            xor ecx,[edi+0x28]</span><br><span class="line">00000048  C3                ret</span><br><span class="line">...</span><br><span class="line">00000063  90                nop</span><br><span class="line">00000064  06                push es</span><br><span class="line">00000065  0100              add [eax],eax</span><br><span class="line">00000067  0009              add [ecx],cl</span><br><span class="line">00000069  0100              add [eax],eax</span><br><span class="line">0000006B  000D010000D9      add [dword 0xd9000001],cl</span><br><span class="line">00000071  0000              add [eax],al</span><br><span class="line">00000073  00DC              add ah,bl</span><br><span class="line">00000075  0000              add [eax],al</span><br><span class="line">00000077  0002              add [edx],al</span><br><span class="line">00000079  0100              add [eax],eax</span><br><span class="line">0000007B  00E0              add al,ah</span><br><span class="line">0000007D  0000              add [eax],al</span><br><span class="line">0000007F  00E4              add ah,ah</span><br><span class="line">00000081  0000              add [eax],al</span><br><span class="line">00000083  00E9              add cl,ch</span><br><span class="line">00000085  0000              add [eax],al</span><br><span class="line">00000087  00F3              add bl,dh</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Bloƒüumuzun ba≈üƒ± rop gadgetleri. Altƒ± ise bu gadgetlarƒ±n adresleri. Disasm bozuk g√∂stersede ≈üu ≈üekilde :</p><p>0x0106 0x0109 0x010d 0x00d9 .. 0x00f3 </p><p>Bu deƒüerler espye atanmƒ±≈ütƒ±. ret yapƒ±ldƒ±k√ßa bu deƒüerler poplana poplana gidicek. Yani bu bizim √ßalƒ±≈üacak kodumuz. ≈ûimdi fonksiyonun 0x31337 d√∂nmesini istiyorduk. Bakalƒ±m rop chain d√∂nd√ºr√ºyormu. Son offset 0xf3</p><p>200‚Äôu 0 kabul edip hesaplarsak : <code>hex(0xf3-200)</code> : 0x2b . ≈ûimdi yukarƒ±dan 0x2bye bakalƒ±m.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0000002B  B837130300        mov eax,0x31337</span><br><span class="line">00000030  C3                ret</span><br></pre></td></tr></table></figure><p>evet istediƒüimiz deƒüer d√∂n√ºyor. Rop i√ßin key:</p><p>Bu a≈üamadaki key ≈üu ≈üekilde hesaplanƒ±yor : </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">byte[<span class="number">0</span>] = flag[<span class="number">16</span>]^flag[<span class="number">32</span>]</span><br><span class="line">byte[<span class="number">1</span>] = flag[<span class="number">17</span>]^flag[<span class="number">33</span>]</span><br><span class="line">byte[<span class="number">2</span>] = flag[<span class="number">18</span>]^flag[<span class="number">34</span>]</span><br><span class="line">byte[<span class="number">3</span>] = flag[<span class="number">19</span>]^flag[<span class="number">35</span>]</span><br></pre></td></tr></table></figure><p>Bulduƒüumuz xor keyi :</p><p>Key4 : <code>\x42\x18\x33\x13</code></p><h2 id="Asama-5-JS"><a href="#Asama-5-JS" class="headerlink" title="A≈üama 5 : JS"></a>A≈üama 5 : JS</h2><p>Tabi rop chain sadece 0x31337 d√∂nd√ºrm√ºyor ondan √∂ncesinde fonksiyona verilen ba≈üka bir encrypted datayƒ± decrypt ediyor. </p><p><img src="/DEF-CON-Quals-2019-Vitor/ida3.png" alt="ida3"></p><p>Bir html dosyasƒ±. Html dosyasini rop chain olu≈üturuyor. Caƒüƒ±rƒ±lan gadgetlara bakalim:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xor_ecx_ecx         </span><br><span class="line">xor_ecx_[edi+20]    //flag[20:24]</span><br><span class="line">xor_ecx_[edi+40]    //flag[40:44] ^ flag[20:24]</span><br><span class="line">xor_[esi]_ecx       //eside encrypted data var</span><br><span class="line">add_esi_4           //esi_4</span><br><span class="line">rol_ecx_8           //rotate left ecx</span><br><span class="line">sub_ebx_4           //size - 4</span><br><span class="line">loop</span><br><span class="line">mov_eax_31337</span><br></pre></td></tr></table></figure><p>Rotate left yapmadan √∂nce ilk a≈üamada direk gelen xorkeyi kullaniliyor. Bu y√ºzden yine xor keyini hesaplayabiliriz. Headerin html olduƒüunu biliyoruz. Encrypted dosyanƒ±n ilk 4byte‚Äôƒ± ile xorlarsak</p><p>Key5: &#x3D; hex(0x3c68746d^0x6a452630): <code>\x56\x2d\x52\x5d</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">byte[<span class="number">0</span>] = flag[<span class="number">20</span>]^flag[<span class="number">40</span>]</span><br><span class="line">byte[<span class="number">1</span>] = flag[<span class="number">21</span>]^flag[<span class="number">41</span>]</span><br><span class="line">byte[<span class="number">2</span>] = flag[<span class="number">22</span>]^flag[<span class="number">42</span>]</span><br><span class="line">byte[<span class="number">3</span>] = flag[<span class="number">23</span>]^flag[<span class="number">43</span>]</span><br></pre></td></tr></table></figure><p>Decryption routinini implemente edicek python scripti yazalim: </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;assets/cxnvhaekljlkjxxqkq&quot;</span>,<span class="string">&quot;rb&quot;</span>)</span><br><span class="line">data = f.read()</span><br><span class="line">f.close()</span><br><span class="line"><span class="comment">#rol8 4 iterasyondan sonra kendisine geri d√∂n√ºcek</span></span><br><span class="line">a = [<span class="number">0x562d525d</span>,<span class="number">0x5d562d52</span>,<span class="number">0x525d562d</span>,<span class="number">0x2d525d56</span>]</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;bam.html&quot;</span>,<span class="string">&quot;wb&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(<span class="built_in">len</span>(data)/<span class="number">4</span>)):</span><br><span class="line"></span><br><span class="line">    f.write(xor(data[<span class="number">4</span>*i:<span class="number">4</span>*i+<span class="number">4</span>],p32(a[i%<span class="number">4</span>])))</span><br><span class="line"></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>Bam.htmli ilk a√ßtƒ±ƒüƒ±mƒ±z apk dosyasƒ±ndan hatƒ±rlarsak : </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(mainActivity.getFilesDir(), <span class="string">&quot;bam.html&quot;</span>);</span><br><span class="line"><span class="type">WebView</span> <span class="variable">webView</span> <span class="operator">=</span> mainActivity.mWebView;</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">stringBuilder.append(<span class="string">&quot;file:///&quot;</span>);</span><br><span class="line">stringBuilder.append(file.getAbsolutePath());</span><br><span class="line">stringBuilder.append(<span class="string">&quot;?flag=&quot;</span>);</span><br><span class="line">stringBuilder.append(Uri.encode(str));</span><br><span class="line">webView.loadUrl(stringBuilder.toString());</span><br><span class="line">z = mValid;</span><br></pre></td></tr></table></figure><p>Son a≈üama olarak flag stringi bu html dosyasƒ±na parametre olarak gidiyor. Html dosyasƒ±nƒ± a√ßtƒ±ƒüƒ±mƒ±zda obfuscated bir javascriptle kar≈üƒ±la≈üƒ±yoruz. <a href="https://twitter.com/theempire_h">theempire_</a> saolsun bu adƒ±mƒ± tak diye √ß√∂zd√º. Flagin 24. karakterinden sornasinƒ±n <code> =&gt; pHd_1w_e4rL13r;)&#125;</code> ‚Äòa e≈üit olmasƒ± gerektiƒüini anlƒ±yoruz.</p><p>Elimizde 5 key ve flagin 24-44 arasƒ± karakterleri var. </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">key0_0 = <span class="string">&quot;4 ^ 12 ^ 20 ^ 28 ^ 36&quot;</span></span><br><span class="line">key0_1 = <span class="string">&quot;5 ^ 13 ^ 21 ^ 29 ^ 37&quot;</span></span><br><span class="line">key0_2 = <span class="string">&quot;6 ^ 14 ^ 22 ^ 30 ^ 38&quot;</span></span><br><span class="line">key0_3 = <span class="string">&quot;7 ^ 15 ^ 23 ^ 31 ^ 39&quot;</span></span><br><span class="line"></span><br><span class="line">key1_0 = <span class="string">&quot;8 ^ 16 ^ 24 ^ 32 ^ 40&quot;</span></span><br><span class="line">key1_1 = <span class="string">&quot;9 ^ 17 ^ 25 ^ 33 ^ 41&quot;</span></span><br><span class="line">key1_0 = <span class="string">&quot;10 ^ 18 ^ 26 ^ 34 ^ 42&quot;</span></span><br><span class="line">key1_1 = <span class="string">&quot;11 ^ 19 ^ 27 ^ 35 ^ 43&quot;</span></span><br><span class="line"></span><br><span class="line">key2_0 = <span class="string">&quot;12 ^ 24 ^ 36&quot;</span></span><br><span class="line">key2_1 = <span class="string">&quot;13 ^ 25 ^ 37&quot;</span></span><br><span class="line">key2_2 = <span class="string">&quot;14 ^ 26 ^ 38&quot;</span></span><br><span class="line">key2_3 = <span class="string">&quot;15 ^ 27 ^ 39&quot;</span></span><br><span class="line"></span><br><span class="line">key3_0 = <span class="string">&quot;16 ^ 32&quot;</span></span><br><span class="line">key3_1 = <span class="string">&quot;17 ^ 33&quot;</span></span><br><span class="line">key3_2 = <span class="string">&quot;18 ^ 34&quot;</span></span><br><span class="line">key3_3 = <span class="string">&quot;19 ^ 35&quot;</span></span><br><span class="line"></span><br><span class="line">key4_0 = <span class="string">&quot;20 ^ 40&quot;</span></span><br><span class="line">key4_1 = <span class="string">&quot;21 ^ 41&quot;</span></span><br><span class="line">key4_2 = <span class="string">&quot;22 ^ 42&quot;</span></span><br><span class="line">key4_3 = <span class="string">&quot;23 ^ 43&quot;</span></span><br></pre></td></tr></table></figure><p>Biraz kopya cekerek script yazarsak.</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">key0 = <span class="string">b&#x27;\x17\x01\x2f\x03&#x27;</span></span><br><span class="line">key1 = <span class="string">b&#x27;\x3c\x27\x43\x60&#x27;</span></span><br><span class="line">key2 = <span class="string">b&#x27;\x6e\x63\x27\x4e&#x27;</span></span><br><span class="line">key3 = <span class="string">b&#x27;\x42\x18\x33\x13&#x27;</span></span><br><span class="line">key4 = <span class="string">b&#x27;\x56\x2d\x52\x5d&#x27;</span></span><br><span class="line"></span><br><span class="line">f6, f7, f8, f9, f10 = group(<span class="number">4</span>, <span class="string">&#x27; =&gt; pHd_1w_e4rL13r;)&#x27;</span>)</span><br><span class="line">f5 = xor(key4, f10)</span><br><span class="line">f4 = xor(key3, f8)</span><br><span class="line">f3 = xor(xor(key2, f6), f9)</span><br><span class="line">f2 = xor(xor(xor(xor(key1, f4), f6), f8), f10)</span><br><span class="line">f1 = xor(xor(xor(xor(xor(key0, key1), f3), f5), f7), f9)</span><br><span class="line"></span><br><span class="line">theflag = <span class="string">&#x27;OOO&#123;&#x27;</span> + f1 + f2 + f3 + f4 + f5 + f6 + f7 + f8 + f9 + f10 + <span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span> theflag</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag : <code>OOO&#123;pox&amp;mpuzz,U_solve_it =&gt; pHd_1w_e4rL13r;)&#125;</code></p>]]></content>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Android </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>DEF CON Quals 2019 : VERYANDROIDOSO</title>
      <link href="/DEF-CON-Quals-2019-Veryandroidoso/"/>
      <url>/DEF-CON-Quals-2019-Veryandroidoso/</url>
      <content type="html"><![CDATA[<p>Here is my writeup for <code>VERYANDROIDOSO</code> <a href="ooo.defcon2019.quals.veryandroidoso.apk">task</a>. Ofcourse with frida :D<br><img src="/DEF-CON-Quals-2019-Veryandroidoso/33.png"></p><p>App takes input from us and checks if it is correct flag. Length of flag should be 23 enclosed with OOO{..}. Also inside of brackets only hex [0-9a-f].<br>18(23-5) divided into 9 part with each part length of 2. </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Button</span> <span class="variable">button</span> <span class="operator">=</span> (Button) findViewById(R.id.button);</span><br><span class="line"><span class="keyword">final</span> <span class="type">EditText</span> <span class="variable">editText</span> <span class="operator">=</span> (EditText) findViewById(R.id.editText);</span><br><span class="line">button.setOnClickListener(<span class="keyword">new</span> <span class="title class_">OnClickListener</span>() &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        view = MainActivity.<span class="built_in">this</span>.parse(editText.getText().toString());</span><br><span class="line">        <span class="keyword">if</span> (view != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Solver.solve(view[<span class="number">0</span>], view[<span class="number">1</span>], view[<span class="number">2</span>], view[<span class="number">3</span>], view[<span class="number">4</span>], view[<span class="number">5</span>], view[<span class="number">6</span>], view[<span class="number">7</span>], view[<span class="number">8</span>]) != <span class="literal">null</span>) &#123;</span><br><span class="line">                MainActivity.<span class="built_in">this</span>.win();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                MainActivity.<span class="built_in">this</span>.fail();</span><br><span class="line">            &#125;</span><br><span class="line">            MainActivity.<span class="built_in">this</span>.finish();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        MainActivity.<span class="built_in">this</span>.fail();</span><br><span class="line">        MainActivity.<span class="built_in">this</span>.finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="Solverrr"><a href="#Solverrr" class="headerlink" title="Solverrr"></a>Solverrr</h2><p>In solver class there are <code>solver</code>, <code>getSecretNumber</code>, <code>scramble</code>(not really), <code>sleep (!)</code>:<br>and exported functions from native-lib:</p><p><code>m0, m1, m2, m3, m4, m6, m7, m8, m9</code></p><ul><li><p><code>getSecretNumber</code> gets one byte from hash of certificate of application. So its always returns same value to same input.</p></li><li><p><code>sleep</code> function takes input, and sleep nanosecond*input and returns how much nanosecond is passed (which can be vary).</p></li><li><p><code>scramble</code> does following :</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">scramble</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">sleep</span> <span class="operator">=</span> ((<span class="type">int</span>) sleep(<span class="number">500</span>)) - <span class="number">499</span>;</span><br><span class="line">    <span class="keyword">return</span> ((i + ((<span class="type">int</span>) Math.round(Math.sqrt((<span class="type">double</span>) ((sleep * <span class="number">4</span>) * sleep)) / ((<span class="type">double</span>) sleep)))) + <span class="number">321</span>) % <span class="number">256</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Looks like it depends on output of sleep function ? </p><p>Nope :D because sqrt(4sleep^2)&#x2F;sleep always returns 2. So overall scramble is same as <code>return (i+2+321)%256</code><br>Same as <code>getSecretNumber</code> this function is always returns same value to same input.</p><ul><li>If you open up ghidra and <a href="dec.c">decompile</a> you can see that m0-m1-m2-m3-m4-m6 doesn‚Äôt depend on any value other than its inputs. But<br> m7 depends on s1 and s2. m8 depends on s3 and s4. If you look at offset of s4, you can see it is not defined. m9 takes one input and <code>CREATES</code> s4 data.<br> So m9 is very important to m8‚Äôs operations and output. s1, s2 and s3 is already defined in binary and never changed with any other function.</li></ul><p>Now comes fun part.</p><h2 id="Fridaa"><a href="#Fridaa" class="headerlink" title="Fridaa"></a>Fridaa</h2><p>in solve function there are huge if blocks for each input part.</p><p>For i1 code is as follows :</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">scramble</span> <span class="operator">=</span> scramble(<span class="number">13</span>);</span><br><span class="line">        <span class="keyword">if</span> (i1 == <span class="number">0</span>) &#123;</span><br><span class="line">            m0 = m0(<span class="number">100</span>, getSecretNumber(scramble));</span><br><span class="line">            i10 = <span class="number">255</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i1 == <span class="number">1</span>) &#123;</span><br><span class="line">            m0 = m0(<span class="number">190</span>, getSecretNumber(scramble));</span><br><span class="line">            i10 = <span class="number">255</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i1 == <span class="number">2</span>) &#123;</span><br><span class="line">            m0 = m0(<span class="number">88</span>, getSecretNumber(scramble));</span><br><span class="line">            i10 = <span class="number">255</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i1 == <span class="number">3</span>) &#123;</span><br><span class="line">        .</span><br><span class="line">        .</span><br><span class="line">        .</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((m0 &amp; i10) != <span class="number">172</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>To not return false, we need to find correct m0 value . which is <code>m0 &amp; 255 == 172</code> . iff m0 &#x3D; 172 . As you can see m0 set with output of m0 function.<br>So we need to find correct first parameter to m0. How ? frida :D</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Java.perform(function()&#123;</span><br><span class="line"></span><br><span class="line">    b = Java.use(<span class="string">&quot;ooo.defcon2019.quals.veryandroidoso.Solver&quot;</span>)</span><br><span class="line"></span><br><span class="line">    b.sleep.implementation = function(a)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">501</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    b.getSecretNumber.implementation = function(a)&#123;</span><br><span class="line">        r = <span class="built_in">this</span>.getSecretNumber(a)</span><br><span class="line">        console.log(<span class="string">&quot;Secret  &quot;</span> + r + <span class="string">&quot; &quot;</span> + a)</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    &#125;</span><br><span class="line">    b.scramble.implementation = function(a)&#123;</span><br><span class="line">        r = <span class="built_in">this</span>.scramble(a)</span><br><span class="line">        console.log(<span class="string">&quot;Scramble  &quot;</span> + r + <span class="string">&quot; &quot;</span> + a)</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i &lt; <span class="number">255</span>;i++)&#123;</span><br><span class="line">        jj = parseInt(b.m0(i,<span class="number">113</span>))&amp;<span class="number">255</span></span><br><span class="line">        <span class="keyword">if</span>(jj == <span class="number">172</span>)&#123;</span><br><span class="line">            console.log(<span class="string">&quot;m0 = &quot;</span> + i)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>How did I know second parameter of m0 ?. Lets just give random input : <code>OOO&#123;123456789012345678&#125;</code></p><p>Attach with <code>frida -U --no-pause  -f ooo.defcon2019.quals.veryandroidoso -l 1.txt</code></p><p>Then frida outputs : </p><p><code>Scramble  80 13 Secret  113 80</code></p><p>secret function output is 113.</p><p>Then I bruteforced all values for m0 in for loop. Frida says m0 should be 53. 53 is input to m0. And we have just 1 option since we ANDed with 255.<br>If you search <code>m0(53,</code> in jadx you can find i1 &#x3D;&#x3D; 250. Our first byte is 0xfa . If it is correct then We must see second scramble output in frida.</p><p>Try <code>OOO&#123;fa3456789012345678&#125;</code></p><p>Same script gives:</p><p><code>Scramble  80 13 Secret  113 80 Scramble  147 80 Secret  201 147 </code></p><p>So it is correct !</p><p>For i2 AND </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i2 == <span class="number">254</span>) &#123;</span><br><span class="line">          m0 = m1(<span class="number">198</span>, getSecretNumber(scramble));</span><br><span class="line">          i10 = <span class="number">255</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          i10 = <span class="number">255</span>;</span><br><span class="line">          m0 = i2 == <span class="number">255</span> ? m1(<span class="number">220</span>, getSecretNumber(scramble)) : <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ((m0 &amp; i10) != <span class="number">6</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Our condition is m0 &amp; 255 &#x3D;&#x3D; 6, m0 should be 6. You can find correct secret value same as in step 1. So our for new for loop is :</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i &lt; <span class="number">255</span>;i++)&#123;</span><br><span class="line">    jj = <span class="built_in">parseInt</span>(b.<span class="title function_">m1</span>(i,<span class="number">201</span>))&amp;<span class="number">255</span></span><br><span class="line">    <span class="keyword">if</span>(jj == <span class="number">6</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;m1 = &quot;</span> + i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Add it to frida script. Then output is :<br><code>m0 = 53,m1 = 35</code>  &#x3D;&gt; i2 &#x3D; 180</p><p>[250,180] </p><p>So far so good.</p><p>For i3 :</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span> (i3 == <span class="number">254</span>) &#123;</span><br><span class="line">    i10 = m2(<span class="number">7</span>, getSecretNumber(scramble));</span><br><span class="line">    m0 = <span class="number">251</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    i10 = i3 == <span class="number">255</span> ? m2(<span class="number">161</span>, getSecretNumber(scramble)) : <span class="number">0</span>;</span><br><span class="line">    m0 = <span class="number">251</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((i10 &amp; m0) != <span class="number">146</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This time output is ANDed with 251. i10 &amp; 251 &#x3D;&#x3D; 146 gives two option.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i &lt; <span class="number">255</span>;i++)&#123;</span><br><span class="line">    jj = <span class="built_in">parseInt</span>(b.<span class="title function_">m2</span>(i,<span class="number">132</span>))&amp;<span class="number">251</span></span><br><span class="line">    <span class="keyword">if</span>(jj == <span class="number">146</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;m2 = &quot;</span> + i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>m2 &#x3D; 7 and m2 &#x3D; 11 &#x3D;&#x3D;&gt; 254 and 52</p><p>.<br>.<br>.</p><p>Overall <a href="dc.txt">dc.txt</a> gives :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">m0 = 53</span><br><span class="line">m1 = 35</span><br><span class="line">m2 = 7,m2 = 11</span><br><span class="line">m3 = 132,m3 = 140</span><br><span class="line">m4 = 13,m4 = 14,m4 = 17,m4 = 18,m4 = 29,m4 = 30,m4 = 33,m4 = 34,m4 = 45,m4 = 46,m4 = 49,m4 = 50,m4 = 61,m4 = 62,m4 = 65,m4 = 66</span><br><span class="line">m5 = 65,m5 = 67,m5 = 69,m5 = 71,m5 = 73,m5 = 75,m5 = 77,m5 = 79,m5 = 81,m5 = 83,m5 = 85,m5 = 87,m5 = 89,m5 = 91,m5 = 93,m5 = 95,m5 = 97,m5 = 99,m5 = 101,m5 = 103,m5 = 105,m5 = 107,m5 = 109,m5 = 111,m5 = 113,m5 = 115,m5 = 117,m5 = 119,m5 = 121,m5 = 123,m5 = 125,m5 = 127,m5 = 193,m5 = 195,m5 = 197,m5 = 199,m5 = 201,m5 = 203,m5 = 205,m5 = 207,m5 = 209,m5 = 211,m5 = 213,m5 = 215,m5 = 217,m5 = 219,m5 = 221,m5 = 223,m5 = 225,m5 = 227,m5 = 229,m5 = 231,m5 = 233,m5 = 235,m5 = 237,m5 = 239,m5 = 241,m5 = 243,m5 = 245,m5 = 247,m5 = 249,m5 = 251,m5 = 253</span><br><span class="line">m6 = 205</span><br><span class="line">m7 = 129</span><br></pre></td></tr></table></figure><p>(Careful here, you should find correct i1 for m0) But since there is no m5 and it just checks over itself you can assign it as correct input.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">i1 = 250</span><br><span class="line">i2 = 180</span><br><span class="line">i3 = [254,52]</span><br><span class="line">i4 = [176,22]</span><br><span class="line">i5 = [254, 145, 136, 72, 203, 118, 74, 120 ,244 ,221, 102, 147, 63, 238, 49, 247]</span><br><span class="line">i6 = [65, 67, 69, 71, 73,75, 77, 79, 81, 83,85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253]</span><br><span class="line">i7 = 68</span><br><span class="line">i8 = 190</span><br></pre></td></tr></table></figure><p>We have 2*2*16*64 different combination for now. </p><h2 id="Bigger-plan"><a href="#Bigger-plan" class="headerlink" title="Bigger plan"></a>Bigger plan</h2><p>After m7 if block, m9(i1+..+i7*i8) is called. This will change s4. Then ONE more if block comes for last hex. Since m8 is dependent on s4 we CANNOT bruteforce like before.</p><p>If block :</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ((i10 &amp; <span class="number">255</span>) != <span class="number">103</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>i10 must be 103.</p><p>To find last hex : frida script: </p><pre><code>Iterate over possible inputsClear s4.Calculate input for m9Call m9Find correct value for m8Store solution</code></pre><p>Frida can easily handle memory. Calculate all possible values : <a href="calc.py">calc.py</a></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">nulls = []</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">0x100</span>;i++)&#123;</span><br><span class="line">nulls.<span class="title function_">push</span>(<span class="number">0x0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; t.<span class="property">length</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line">i9 = t[i][<span class="number">0</span>] + t[i][<span class="number">1</span>] + t[i][<span class="number">2</span>] + t[i][<span class="number">3</span>] + t[i][<span class="number">4</span>] + t[i][<span class="number">5</span>] + t[i][<span class="number">6</span>] * t[i][<span class="number">7</span>]</span><br><span class="line"><span class="comment">//call m9</span></span><br><span class="line">b.<span class="title function_">m9</span>(i9)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">255</span>;j++)&#123;</span><br><span class="line"></span><br><span class="line">aa = b.<span class="title function_">m8</span>(j,<span class="number">23</span>)</span><br><span class="line">res = <span class="built_in">parseInt</span>(aa)&amp;<span class="number">255</span></span><br><span class="line"><span class="keyword">if</span>( res== <span class="number">103</span>)&#123;</span><br><span class="line"><span class="comment">//console.log(&quot;Found last digit for : &quot; + i9+ &quot; &quot;+ j)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([t[i][<span class="number">0</span>],t[i][<span class="number">1</span>],t[i][<span class="number">2</span>],t[i][<span class="number">3</span>],t[i][<span class="number">4</span>],t[i][<span class="number">5</span>],t[i][<span class="number">6</span>],t[i][<span class="number">7</span>],j])</span><br><span class="line"><span class="comment">//clear s4 maybe one more digit will be found</span></span><br><span class="line"><span class="title class_">Memory</span>.<span class="title function_">writeByteArray</span>(<span class="title function_">ptr</span>(s4),nulls)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Memory</span>.<span class="title function_">writeByteArray</span>(<span class="title function_">ptr</span>(s4),nulls)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Here t is possible values. <a href="sol1.txt">Script</a> will find correct input to m8 function. Then you will need to find correct i8. I found older inputs with manual search, but for this case I used <a href="calc3.py">python</a></p><p>Now there is just last check !</p><p>This time we have all inputs lets just give it to solve function.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">b.<span class="property">solve</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a,o,c,d,e,f,g,h,i</span>)&#123;</span><br><span class="line">solutions = []</span><br><span class="line">nulls = []</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">0x1000</span>;i++)&#123;</span><br><span class="line">nulls.<span class="title function_">push</span>(<span class="number">0x0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; t.<span class="property">length</span>;i++)&#123;</span><br><span class="line">t2 = <span class="variable language_">this</span>.<span class="title function_">solve</span>(t[i][<span class="number">0</span>],t[i][<span class="number">1</span>],t[i][<span class="number">2</span>],t[i][<span class="number">3</span>],t[i][<span class="number">4</span>],t[i][<span class="number">5</span>],t[i][<span class="number">6</span>],t[i][<span class="number">7</span>],inputs[i])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i + <span class="string">&quot; &quot;</span> + t2)</span><br><span class="line"><span class="keyword">if</span>(t2)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(t[i][<span class="number">0</span>],t[i][<span class="number">1</span>],t[i][<span class="number">2</span>],t[i][<span class="number">3</span>],t[i][<span class="number">4</span>],t[i][<span class="number">5</span>],t[i][<span class="number">6</span>],t[i][<span class="number">7</span>],inputs[i])</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title class_">Memory</span>.<span class="title function_">writeByteArray</span>(<span class="title function_">ptr</span>(s4),nulls)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">b.<span class="property">sleep</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">502</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Last <a href="so2.txt">script</a></p><p>Bypass sleep function so we wont wait.</p><h2 id="Fl4g"><a href="#Fl4g" class="headerlink" title="Fl4g"></a>Fl4g</h2><p>Now enter something like <code>OOO&#123;123456789012345678&#125;</code> and wait until frida finds correct value ! :D</p><p><img src="/DEF-CON-Quals-2019-Veryandroidoso/sol.gif"></p><p>Flag is hex values of those integers:<br><code>OOO&#123;fab43416484944beba&#125;</code></p>]]></content>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Android </tag>
            
            <tag> Reverse </tag>
            
            <tag> Frida </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mobile Malware Analysis : Tricks Used in Anubis</title>
      <link href="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/"/>
      <url>/Mobile-Malware-Analysis-Tricks-used-in-Anubis/</url>
      <content type="html"><![CDATA[<h2 id="Anubis"><a href="#Anubis" class="headerlink" title="Anubis"></a>Anubis</h2><img src="anubis.jpg" width="250"><p>Anubis is my first case of <code>complicated</code> android malware and taught me so much about android malware. I want to share these learnings in this post. Anubis is almost one year old but its impact is much higher than older banker families and campaign is <a href="https://twitter.com/0xabc0/status/1113698644442656773">still going on</a>. Small section of anubis downloader samples found in play store in between July 2018 and March 2019 :</p><p><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/gplay.png"></p><p>Anubis is full of tricks. List of capabilities: </p><ul><li>Steal information with overlay attacks from banking apps</li><li>Ransomware</li><li>SMS interception &#x2F; Call forwarding</li><li>RAT</li><li>Keylogger</li></ul><p>To spread malware generally google play store is used.   </p><h2 id="Downloaders"><a href="#Downloaders" class="headerlink" title="Downloaders"></a>Downloaders</h2><p>Anubis generally consist of two part. I‚Äôll call them downloader and payload. If malware spreads over third party sites, such as <code>flash updates</code> it only downloads payload of anubis. But if malware spreads over google play store, it uses downloader. Because it needs to. If payload of anubis is used it will be detected by play protect easily. So to download payload, fake applications deployed on play store. But how an application downloads and installs another application ?<br>Easy, with <code>REQUEST_INSTALL_PACKAGES</code> permission. I think in the current state of Play Store this permission is dangerous than any other one. Because Play Protect can catch malware and rats if published on play store. Spread of malware generally comes from this permission. Users need to check if this permission is in permission list.</p><h2 id="Social-Engineering"><a href="#Social-Engineering" class="headerlink" title="Social Engineering"></a>Social Engineering</h2><p>Malware needs to lower suspicion of user after installation. Anubis downloaders use little but strong steps to make user believe it is legitimate app. Since threat actors want to catch valuable victims, generally these fake applications will be finance related apps. Such as <code>Currency Converter</code>. </p><table><thead><tr><th align="center">Curreny - Gold - Euro</th><th align="center">Currency Center</th></tr></thead><tbody><tr><td align="center"><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/m1.jpg"></td><td align="center"><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/m22.png"></td></tr></tbody></table><p>( notice #1 trending )</p><p>But these apps will imitate legitimate ones. Here is how earlier fake apps worked. After installing, app will remove itself from homescreen. Why ? Lets say you downloaded an app. But it didn‚Äôt worked like you wanted. What you do ? Go back to homescreen and delete that app right ? Now you need to go to settings. Also after opening fake app, generally app will prompt <code>App needs to be updated</code> and forward user to legitimate app that have same app icon, app name and almost same developer name. So you downloaded an app, it forwarded to real one and you installed it. When you go back to your homescreen, you will see only one app which is legitimate one. With this, suspicion of user is lowered. But when you go to settings and list application, you will see 2 of them.</p><img src="downloader.gif" width="350" height="200"><p>Also ! if you try to remove malware from settings an system error(!) will show up.</p><h2 id="System-Update"><a href="#System-Update" class="headerlink" title="System Update ?"></a>System Update ?</h2><p>After user installs downloader, app will download second stage of attack, payload. Generally name of downloaded apk will be either <code>Sistem Guncellemesi, Operator Guncellemesi, Flash Update, Yazilim Guncellemesi</code>. Names are in Turkish, meaning System Update, Operator Update, Software Update. Icons of these apps:</p><table><thead><tr><th align="center">Flash Player Update</th><th align="center">Update</th><th align="center">Operator Update</th><th align="center">Service Update</th><th align="center">System Update</th></tr></thead><tbody><tr><td align="center"><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/flash.png"></td><td align="center"><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/gunc.png"></td><td align="center"><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/ope.png"></td><td align="center"><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/servis.png"></td><td align="center"><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/sys.png"></td></tr></tbody></table><p>With these icons threat actors want user to believe these are legitimate apps. After downloader gets payload app from command and control server, prompt will shown to user. User needs to activate <code>third-party installation</code> and press yes to prompt screen. Then app will installed. After user opens up, app will ask for permissions then nothing will shown and app will dissepear from app list.</p><img src="dropped.gif" width="350" height="200"><p>Did you see flickering after giving Accessibility permission ? We will come to that.</p><h2 id="Persistence"><a href="#Persistence" class="headerlink" title="Persistence"></a>Persistence</h2><p>In desktop malware generally malware will write itself to <code>Startup</code> folder to get persistence and open itself each boot. What about Android malware ? Let me introduce you to <code>RECEIVE_BOOT_COMPLETED</code>. With this receiver, app can open itself in background when device is booted. Cool right ?</p><h2 id="You-cant-delete-me"><a href="#You-cant-delete-me" class="headerlink" title="You cant delete me !"></a>You cant delete me !</h2><p>Lets say user gave all permission to application and installed it. But you want to remove app. When you go to settings and try to delete app, you click the app icon. It says <code>System apps cannot be deleted</code> and you are forwarded to user to Home Screen.<br>What ?</p><img src="pikachu.jpg" width="250" height="250"> <p>App didn‚Äôt take device admin permissions. How it can do that ? Lets find out.</p><h2 id="Accessibility"><a href="#Accessibility" class="headerlink" title="Accessibility"></a>Accessibility</h2><p>From <a href="https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent">official android page</a> :‚ÄôAccessibility Services run in the background and receive callbacks by the system when AccessibilityEvents are fired. Such events denote some state transition in the user interface, for example, the <strong>focus has changed</strong>, a <strong>button has been clicked</strong>, etc. Such a service can optionally <strong>request</strong> the capability for querying the content of the <strong>active window</strong>‚Äò.</p><p>What can go wrong right ?</p><p>It can track user activities and have ability to <strong>query</strong> certain things such as message boxes. Each accessibility event have source component that defines which application triggered current event. There are different event types anubis use : </p><ul><li>TYPE_VIEW_CLICKED</li><li>TYPE_VIEW_FOCUSED</li><li>TYPE_VIEW_TEXT_CHANGED</li><li>TYPE_WINDOW_STATE_CHANGED</li></ul><p>To see what all Accessibility Event types are take a look at :  <a href="https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent">AccessibilityEvent</a></p><p>Anubis tracks all accessibility events and checks event types. So if you open new app window state will change and event will trigger. Event type of <code>TYPE_WINDOW_STATE_CHANGED</code> is first check. To remove malware you probably go to Settings. Settings is also an android application called <code>com.android.settings</code>. Second check is if triggered event comes from <code>com.android.settings</code>. Then malware checks if certain strings in Event description.</p><p><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/check.png" alt="check"></p><p> First check is for name of the app you clicked :</p><ul><li>Servis Guncellemesi (this.a.i(this))</li></ul><p>Then below strings:</p><ul><li>uninstall (this.f)</li><li>to remove (this.g)</li></ul><p>If all conditions hold, an Activity is triggered <code>a()</code> . This activity just opens AlertDialog which says <code>System apps cannot be deleted</code>. Since Application doesnt have any Launchable content, android opens alert box in the Homescreen. So whenever you try to open Malware‚Äôs details in Settings you forwarded to homescreen with alert box and you can‚Äôt delete app.</p><img src="hata.gif" width="350" height="200"><p>Maybe if I remove Accessibility permission from app, I should able to remove it right ? No. Lets say you removed permission. All‚Äôs fine. But when you open Settings again, malware will constantly ask you to give permission. You cant navigate to Apps section of Settings to remove app. Fine, maybe If I reboot then I can remove app ? Remember <code>RECEIVE_BOOT_COMPLETED</code> permission ? App will start again and ask for Accessibility permission. But you have other ways to remove the app. If you have application manager apps with package name other than <code>com.android.settings</code> you can delete malware. Or by booting in safe mode. Also if you have adb enabled and you know packagename you can delete it with : <code>adb uninstall packagename</code>. To learn package names you can list all packages with <code>adb shell pm list packages</code></p><h2 id="Keylogger"><a href="#Keylogger" class="headerlink" title="Keylogger"></a>Keylogger</h2><p>Now we covered <code>TYPE_WINDOW_STATE_CHANGED</code> event. Lets look at other 3 event.</p><ul><li>TYPE_VIEW_CLICKED</li><li>TYPE_VIEW_FOCUSED</li><li>TYPE_VIEW_TEXT_CHANGED</li></ul><p>EVERY input box you click&#x2F;focus and write text into it, will trigger one the three event. No matter what app you are in. So lets say TYPE_VIEW_TEXT_CHANGED event triggered and malware caught it. With just <code>obj = accessibilityEvent.getText().toString();</code> it can get changed text and send back to its command and control server. Event type 16 &#x3D; <code>TYPE_VIEW_TEXT_CHANGED</code><br><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/text.png" alt="text"></p><p>Remember flickering after giving the accessibility permission to malware ? With accessibility, app can press buttons (yes literally). Malware press <code>yes</code> without user interaction.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( node : source.findAccessibilityNodeInfosByText(<span class="built_in">this</span>.e)) &#123;</span><br><span class="line">                node.performAction(<span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>You guessed right, action 16 is <code>ACTION_CLICK</code> and this.e holds <code>StringYes</code>.</p><h2 id="Play-Protect"><a href="#Play-Protect" class="headerlink" title="Play Protect"></a>Play Protect</h2><p>Even though malware installed on the device from downloader without being flagged, Play Protect will constantly scan the device if its enabled and will flag anubis app as a malware. To overcome this malware tries to disable Play protect. </p><p><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/playprotect.png"></p><h2 id="Package-List"><a href="#Package-List" class="headerlink" title="Package List"></a>Package List</h2><p>When malware installed, first thing it does is listing installed packages and sending it to command and control server. These application names are sometimes used for another purpose. For example when threat actor knows you have, lets say ‚Äòcom.x.bank‚Äô app, threat actor sends sms that crafted for that app to lure user to open <code>com.x.bank</code> application. <code>You have received 10.000$. Login in to your X account</code> With this technique user will open that app and fake overlay will shown. This can be taught as backup plan for phishing user.</p><p>How can android app list installed packages ? Easy <code>getInstalledApplications</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">pman = context.getPackageManager()</span><br><span class="line"><span class="keyword">for</span> ( ApplicationInfo appInf : pman.getInstalledApplications(<span class="number">128</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(appInf.packageName.equals(<span class="string">&quot;com.x.bank&quot;</span>))&#123;</span><br><span class="line">        arrayList.add(<span class="string">&quot;com.x.bank&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Overlay-Attack"><a href="#Overlay-Attack" class="headerlink" title="Overlay Attack"></a>Overlay Attack</h2><p>Malware authors always try to find creative ways to fool victims to get their information. Overlay attack is one of them. Since early 2016 (<a href="https://lukasstefanko.com/2016/02/android-mazarbot-stealing-credit-card-information-in-italy-with-certified-issued-by-putin.html">MazarBot</a> ) a lot of android malware used this technique for collecting user information. When targeted apps opened, malware triggers and pulls phishing page that generated for that targeted app from command and control server and <code>overlays</code> over targeted app. Showing it is easier.</p><img src="overlay.gif" width="350" height="200"><p>(random banking app is chosen. There are 100+ targeted apps)</p><p>Since overlayed screen is similar to original app and process of overlaying is done in very short time, user probably dont get suspicious. But how malware detects opened apps and overlays itself on top of another process ? Lets find out !</p><h2 id="Process-Scanning"><a href="#Process-Scanning" class="headerlink" title="Process Scanning"></a>Process Scanning</h2><p>Getting package list is not enough for overlay attack. Malware needs to know that user just opened ‚Äúcom.x.bank‚Äù app to make believable overlay scenerio. Or user wont fall it and be suspicious about it. There is no ‚Äúan app opened‚Äù service in android. The way malware does is simple: somehow get running process list and get top process. Put that function in <code>While(true)&#123; &#125;</code> loop. This way you will know when new app opened. The ways of getting process list differs in targeted SDK versions. Anubis need permission to get process list if API version is greater than 23. It uses  <code>PACKAGE_USAGE_STATS</code> permission to use UsageStatsManager and get list of running processes. If API version is &lt; 23 then there are functions to get list of processes without any permission. I‚Äôll focus on this topic on my next post. After getting process&#x2F;package names, malware compare these with banking apps package names. Then opens up corresponding phishing page through webView. This action doesn‚Äôt need any permission. Any app can open itself without user interaction ! (Not in Android 9 YAY !)</p><img src="webView.png"  height="200"><p>Then collected data will be send to command and control server. </p><h2 id="Battery-issues"><a href="#Battery-issues" class="headerlink" title="Battery issues"></a>Battery issues</h2><p>But running in forever loop will cause some battery issues right? Battery optimizing apps will close malware. Malware author was aware of this and here comes another permission <code>REQUEST_IGNORE_BATTERY_OPTIMIZATIONS</code>. With this permission app will not seen in battery optimizations.  </p><h2 id="SMS-Interception-and-Call-forwarding"><a href="#SMS-Interception-and-Call-forwarding" class="headerlink" title="SMS Interception and Call forwarding"></a>SMS Interception and Call forwarding</h2><p>This is scary part. Malware already have SMS_READ permission for reading sms. Why ? For OTP codes. Addition to reading, malware requests for being default SMS app. If user accepts, threat actor behind the command and control server can delete SMS from device. Then sms will be removed and user wont have any clue.</p><p>Call forwarding, oh this is really scary. Lets say bank understood user is victim of malware. Calls him&#x2F;her number. But who opens the phone ? threat actor.</p><p><img src="/Mobile-Malware-Analysis-Tricks-used-in-Anubis/callforward.png" alt="callforward"></p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Two permission for two stages of anubis. <code>REQUEST_INSTALL_PACKAGES</code> and <code>PACKAGE_USAGE_STATS</code> these are releated to core components of the malware to fool user. I hope you learned something new about android malware. If you have any question feel free to ask me <a href="https://twitter.com/0xabc0">@0xabc0</a></p><p>While writing this post, Android announced 9 beta with great security related news ! Now apps can‚Äôt open itself without user interaction, no more overlay tactics for malware !</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://forum.yugiohcardmaker.net/user/731508-gregory-the-gregory/">Anubis Image gregory-the-gregory</a></p><h2 id="Readings"><a href="#Readings" class="headerlink" title="Readings"></a>Readings</h2><p>Anubis Related:<br><a href="https://koodous.com/apks?search=tag:anubis">Koodous for finding anubis sample</a><br><a href="https://twitter.com/LukasStefanko/status/1084728042927341569">LukasStefanko‚Äôs twitter thread</a><br><a href="https://blog.trendmicro.com/trendlabs-security-intelligence/google-play-apps-drop-anubis-banking-malware-use-motion-based-evasion-tactics/">Trend Micro‚Äôs post about Anubis</a><br><a href="https://securityintelligence.com/anubis-strikes-again-mobile-malware-continues-to-plague-users-in-official-app-stores/">IBM X-Force‚Äôs post about Anubis</a><br><a href="https://news.sophos.com/en-us/2018/08/14/anubis-is-back-are-you-prepared/">Sophos Labs‚Äô post about Anubis</a></p><p>If you want to read related posts about android malware heres my other posts:<br><a href="https://pentest.blog/n-ways-to-unpack-mobile-malware/">How to defeat packers in Android ecosystem</a><br><a href="https://eybisi.run/2018/07/31/Mobil-Zararli-Analizi-Bolum-1-Ortami-Kuralim/">How to setup android malware analysis lab (in Turkish)</a></p>]]></content>
      
      
        <tags>
            
            <tag> Malware </tag>
            
            <tag> Mobile </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>STMCTF18-Final Mobil Sorulari</title>
      <link href="/STMCTF18-Final-Mobil-Sorulari/"/>
      <url>/STMCTF18-Final-Mobil-Sorulari/</url>
      <content type="html"><![CDATA[<h2 id="basitmobil"><a href="#basitmobil" class="headerlink" title="basitmobil"></a>basitmobil</h2><p>jadxte a√ßtƒ±ƒüƒ±mda flag zaten kar≈üƒ±mda. </p><p><img src="/STMCTF18-Final-Mobil-Sorulari/basit_mobil.png" alt="basit"></p><p>Flag : <code>STMCTF&#123;yazdan_kalan_s1caklarla_1s1nal1m&#125;</code></p><h2 id="benibul"><a href="#benibul" class="headerlink" title="benibul"></a>benibul</h2><p>Apkyƒ± jeb‚Äôde a√ßƒ±yorum g√∂r√ºyorumki <code>.flag.txt</code> diye bir dosya olu≈üturuyor. ƒ∞√ßine de binary-&gt;octal-&gt;decimal d√∂n√º≈ü√ºm√ºn√º yapƒ±p deƒüeri yazƒ±yor.</p><p><img src="/STMCTF18-Final-Mobil-Sorulari/benibul.png" alt="jeb"></p><p>Dosyaya bakmadan direk datayƒ± alƒ±p binary -&gt; asci deƒüerini de bakabilirsiniz. Dosyaya adb shell ile emulatore baƒülanƒ±p bakalƒ±m. (v24 istiyor ona g√∂re vm a√ßmak lazƒ±m)</p><p><img src="/STMCTF18-Final-Mobil-Sorulari/sahte.png" alt="sahte"></p><p>Bu binary deƒüerleri sahteymi≈ü demekki apknƒ±n ba≈üka bir yerinde ba≈üka binary deƒüerleri var. </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp benibul.apk benibul.zip</span><br><span class="line">unzip benibul.zip</span><br><span class="line">cd lib/x86</span><br></pre></td></tr></table></figure><p>Komutlarƒ± ile apknƒ±n native librarysine gidiyorum. Tahminimce yine 0101 gibi deƒüer olduƒüu i√ßin grepliyorum.<br>Bulduƒüum deƒüerleri asciye √ßevirdiƒüimde flag √ßƒ±kƒ±yor</p><p><img src="/STMCTF18-Final-Mobil-Sorulari/gercek.png" alt="gercek"></p><p>Flag: <code>STMCTF&#123;?_evet_taraf1nd4n_!&#125;</code></p><h2 id="terslebeni"><a href="#terslebeni" class="headerlink" title="terslebeni"></a>terslebeni</h2><p>jadxte apkyƒ± a√ßƒ±yorum. G√∂r√ºyorumki bir kar≈üƒ±la≈ütƒ±rma var. Uygulama bu kar≈üƒ±la≈ütƒ±rmaya g√∂re apkdeki bir componente setText ile text basƒ±yor.</p><p><img src="/STMCTF18-Final-Mobil-Sorulari/ters.png" alt="ters"></p><p>R.string deƒüerlerinin ne olduƒüunu Resources&#x2F;resoueces.arsc&#x2F;values&#x2F;strings.xml dosyasƒ±ndan g√∂rebiliriz.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R.string.a UmxUbYYSllDKA1n+ZMR/sZXJ5ZglWOSfYGzfuVauT+o=</span><br><span class="line">R.string.b R09IT01FIQ==</span><br><span class="line">R.string.d Tebrikler, doƒüru bayraƒüƒ± buldun</span><br><span class="line">R.string.e Denemeye devam</span><br></pre></td></tr></table></figure><p>Kar≈üƒ±latƒ±rmanƒ±n yapƒ±ldƒ±ƒüƒ± kod par√ßasƒ± ≈üu ≈üekilde </p><p><code>Base64.encodeToString( Util.a( obj,Util.a( new String( Base64.decode( MainActivity.this.getString(R.string.b),0)))), 0).trim().equals( MainActivity.this.getString(R.string.a)) != null</code></p><p>Kodu kƒ±saltƒ±rsak</p><p>Util.a(new String(Base64.decode(MainActivity.this.getString(R.string.b), 0)))<br>first &#x3D; Util.a(base64decode(R.string.b))<br>second &#x3D; Util.a(obj,first)</p><p>Yani if‚Äôi i√ßinde  ≈üu kar≈üƒ±latƒ±rma yapƒ±lƒ±yor.<br>base64encode(second) &#x3D;&#x3D; R.string.a</p><p>R.string.a deƒüerini biliyoruz : UmxUbYYSllDKA1n+ZMR&#x2F;sZXJ5ZglWOSfYGzfuVauT+o&#x3D;</p><p>first ve second i√ßin Util classƒ±na bakalƒ±m</p><p><img src="/STMCTF18-Final-Mobil-Sorulari/util.png" alt="util"></p><p>Birden fazla a fonksiyonu var. first ve second i√ßin hangi a fonksiyonun √ßalƒ±≈üacaƒüƒ±nƒ± parametre sayƒ±sƒ± belirleyecek. First i√ßin tek deƒüerli yani md5li fonksiyon, second i√ßin alttaki aes encryption fonksiyonu √ßalƒ±≈üacak.<br>first‚Äô√ºn gittiƒüi fonksiyon gelen deƒüerin md5ini alƒ±p d√∂nen deƒüerin 16 karaterini alƒ±yor.</p><p>second‚Äôƒ±n gittiƒüi a fonksiyonun ilk parametrisi str, ikinci parametresi key. Bu parametrelerle ECB modunda aes encryption yapƒ±yor. </p><p>yani first deƒüerimiz md5(R.string.b)[:16] , bu deƒüer de aes encryptiona key olarak gidiyor. </p><p>second‚Äôƒ±n gittiƒüi fonksiyonun ilk parametresi apkdan gelen input deƒüeri. Bu deƒüeri alƒ±p constant key ile encrypt edip base64√ºn√º aldƒ±ƒüƒ±mƒ±zda R.string.a deƒüeriyle aynƒ± deƒüeri bulmamƒ±z gerek. Tersten gidersek</p><p>base64decode(R.string.a) yƒ± md5(R.string.b)[:16] ile decrypt edince flage ula≈üabiliriz.</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line">a = <span class="string">&quot;UmxUbYYSllDKA1n+ZMR/sZXJ5ZglWOSfYGzfuVauT+o=&quot;</span></span><br><span class="line">b = <span class="string">&quot;R09IT01FIQ==&quot;</span></span><br><span class="line">ciphertext = base64.b64decode(a)</span><br><span class="line">key = base64.b64decode(b)</span><br><span class="line">m = md5()</span><br><span class="line">m.update(key)</span><br><span class="line">key = m.hexdigest()[:<span class="number">16</span>]</span><br><span class="line">cipher = AES.new(key,AES.MODE_ECB)</span><br><span class="line">cipher.decrypt(ciphertext)</span><br></pre></td></tr></table></figure><p>Flag : <code>STMCTF&#123;!ben_evdey1m_zaten&#125;</code></p><h2 id="muslukcu"><a href="#muslukcu" class="headerlink" title="muslukcu"></a>muslukcu</h2><p>apkyƒ± jadxte a√ßƒ±nca g√∂r√ºn√ºyorki s√ºrekli bir log.d akƒ±≈üƒ± var. <code>STMCTF&#123;</code> stringini arayƒ±nca tek bir yerde ge√ßtiƒüini g√∂r√ºyorum ve koda gidiyorum. </p><p><img src="/STMCTF18-Final-Mobil-Sorulari/muslukcu.png" alt="muslukcu"></p><p>skor deƒüi≈ükenine  baktƒ±ƒüƒ±mda aslƒ±nda constant oldugunu g√∂r√ºyorum. Oyundaki skor <code>score</code> deƒüi≈ükeninde tutuluyor. Geriye touchx deƒüeri kalƒ±yor. Bu deƒüer ekrana tƒ±klandƒ±ƒüƒ±nda deƒüi≈üiyor aslƒ±nda. Ama flagi hesaplarken ilk deƒüeri olan 1000‚Äôi almak gerekiyor.<br>Bu bilgilerden sonra 2 yol kullanabiliriz.</p><ul><li>Elle hesaplama</li><li>Gerekli condition‚Äôƒ± saƒülayƒ±p flagi log.d ye bastƒ±rabiliriz.</li></ul><p>Elle hesaplarsanƒ±z . </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; 48*13*5000*1000*999</span><br><span class="line">3116880000000</span><br></pre></td></tr></table></figure><p>STMCTF{} i√ßine koydugunuzda yarƒ±≈ümadaki flage ula≈üƒ±yorsunuz. </p><p>ANCAK</p><p>Bu deƒüer bir integer deƒüi≈ükeninin tutabilceƒüi deƒüerden yani 0xffffffff ‚Äòden fazla. Yani aslƒ±nda i deƒüeri 5000 olduƒüunda apk‚Äônƒ±n log.d ye basacaƒüƒ± deƒüer farklƒ± bir deƒüer.<br>Bunu frida ile deneyebiliriz.</p><p>Kodum ≈üu ≈üekilde : </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">setImmediate</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="comment">//prevent timeout</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[*] Starting script&quot;</span>);</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">performNow</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title class_">Java</span>.<span class="title function_">choose</span>(<span class="string">&quot;mario.Board&quot;</span>, &#123;</span><br><span class="line">          <span class="attr">onMatch</span>: <span class="keyword">function</span> (<span class="params">instance</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Changed score&quot;</span>)</span><br><span class="line">            instance.<span class="property">i</span>.<span class="property">value</span> = <span class="number">5000</span></span><br><span class="line">             <span class="variable language_">console</span>.<span class="title function_">log</span>(instance.<span class="property">touchx</span>.<span class="property">value</span>)</span><br><span class="line">             <span class="variable language_">console</span>.<span class="title function_">log</span>(instance.<span class="property">skor</span>.<span class="property">value</span>)</span><br><span class="line">             <span class="variable language_">console</span>.<span class="title function_">log</span>(instance.<span class="property">i</span>.<span class="property">value</span>)</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">onComplete</span>: <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>i deƒüerini 5000 yapƒ±yorum. Kodun olduƒüu fonksiyon s√ºrekli √ßaƒüƒ±rƒ±ldƒ±ƒüƒ± i√ßin trigger etmeme gerek  yok. √áaƒüƒ±rƒ±lmasaydƒ±  <code>instance.checkLife()</code> ekleyerek bunu saƒülayabilirdik.<br>Deƒüer deƒüi≈ütikten sonra condition saƒülandƒ±ƒüƒ± i√ßin bana log.d den flagi vermesi lazƒ±m.</p><p><img src="/STMCTF18-Final-Mobil-Sorulari/frida.png" alt="frida"><br>Evet istenen deƒüerler olmasƒ±na raƒümen farklƒ± bir deƒüer √ßƒ±ktƒ±.<br>Bu deƒüere ≈üu ≈üekilde ula≈üƒ±p emin olabiliriz.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; 48*13*5000*1000*999 &amp; 0xffffffff</span><br><span class="line">3028710400</span><br><span class="line">&gt;&gt;&gt; 3028710400-4294967295 -1</span><br><span class="line">-1266256896</span><br></pre></td></tr></table></figure><h2 id="cokzararli"><a href="#cokzararli" class="headerlink" title="cokzararli"></a>cokzararli</h2><p>Bu soruda frida i√ßin bi check beklerdim a√ßƒ±kcasƒ±. √á√ºnk√º kontrol yapƒ±lmazsa ger√ßekten √ßok kolay bir ≈üekilde geliyor soru. (Intented yolda √ßok zor deƒüil tabi)</p><p>Apkda keylogger classƒ±ndaki kod ≈üu ≈üekilde :</p><p><img src="/STMCTF18-Final-Mobil-Sorulari/uret.png" alt="uret"></p><p>Eƒüer istenen conditionlar saƒülanƒ±rsa native k√ºt√ºphaneden x , y  ve z fonksiyonlarƒ± √ßaƒüƒ±rƒ±larak flag √ºretiliyor. E o zaman √ßaƒüƒ±ralƒ±m bu fonksiyonlarƒ± :D</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">setImmediate</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="comment">//prevent timeout</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[*] Starting script&quot;</span>);</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">performNow</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title class_">Java</span>.<span class="title function_">choose</span>(<span class="string">&quot;tr.com.stm.cokzararli.Keylogger&quot;</span>, &#123;</span><br><span class="line">          <span class="attr">onMatch</span>: <span class="keyword">function</span> (<span class="params">instance</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Found instance&quot;</span>)</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(instance.<span class="title function_">x</span>())</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(instance.<span class="title function_">y</span>())</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(instance.<span class="title function_">z</span>())</span><br><span class="line"></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">onComplete</span>: <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="/STMCTF18-Final-Mobil-Sorulari/urett.png" alt="urett"></p>]]></content>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Android </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Flareon5 #6 Challenge : Magic </title>
      <link href="/Flareon5-6-Challenge-Magic/"/>
      <url>/Flareon5-6-Challenge-Magic/</url>
      <content type="html"><![CDATA[<p>In this post I‚Äôll try to explain how I bruteforced challenge 6 with frida.</p><p>First of all lets try to understand what binary does.</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&lt; 6 &gt; ./magic </span><br><span class="line">Welcome to the ever changing magic mushroom!</span><br><span class="line">666 trials lie ahead of you!</span><br><span class="line">Challenge 1/666. Enter key: 123</span><br><span class="line">No soup <span class="keyword">for</span> you!</span><br></pre></td></tr></table></figure><p>Binary will take 666 input. Follow the flow of the program, it goes to sub_402dcf after taking input from user.<br><img src="/Flareon5-6-Challenge-Magic/ida1.png" alt="ida1"></p><p>In sub_402dcf, program iterates 0x21 times.<br><img src="/Flareon5-6-Challenge-Magic/ida2.png" alt="ida2"><br>It checks size of input with 0x40. If its less than 0x40 program goes to sub_402cc7 and exits. I should avoid sub_402cc7. </p><p>Each iteration program goes to 0x605100 + 0x120*i and take somethings. Lets look at structure for first iteration (0x605100)<br><img src="/Flareon5-6-Challenge-Magic/ida3.png" alt="ida3"></p><p>0x400c55,0x147,0x02,0x03,0x25,0x61385a ‚Ä¶</p><p>Firstly it takes 0x400c55 (first region) and 0x61385a (second region) and 0x147(size) . It xors first region with second region. After that it calls first region at 0x402f06 (call rcx).</p><p><img src="/Flareon5-6-Challenge-Magic/gdb.png" alt="gdb"></p><p>If you look at size of ‚ÄúA‚Äùs in rax ,it says 61 times but I entered 63 times and remember 0x2 from first structure. So 0x2 is index of string. Also see 0x3 at rsi register. After analyzing 0x400c55 it turns out 0x3 is our length.</p><p>What I learned so far.</p><ul><li>Key size is 69, (max number at structure 0x42+3)</li><li>Before call rcx, program xors region by getting parameters from structure.</li><li>Call rcx is taking length and index of strings which comes from structure.</li><li>If its correct program goes to next iteration, so probably different function will be executed for checking input.</li></ul><p>I tried to understand each function. I reversed 3 functions but stuck at 4th. (turns out it was base64). Then I looked at structure, and saw each function takes only 1-3 length.<br>So why not bruteforce it ? Since I love frida and never tried instrumentation on linux binaries lets give it a shot. </p><p>First lets learn how functions called with frida. If functions exported you can define NativeFunction with </p><p><code>NativeFunction(Module.findExportByName(null,&#39;printf&#39;), &#39;pointer&#39;, []);</code></p><p>But I will use functions that aren‚Äôt exported. So I will give pointer to NativeFunction such as:</p><p><code>var xor = new NativeFunction( ptr(0x402CDF), &#39;void&#39;, [&#39;pointer&#39;, &#39;pointer&#39;, &#39;pointer&#39;]);</code></p><p>First parameter is pointer to beginning of routine. Second parameter is type of what function will return. Third parameter is types of parameter which function will accept.</p><p>Lets try it </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xor = <span class="keyword">new</span> <span class="title class_">NativeFunction</span>( <span class="title function_">ptr</span>(<span class="number">0x402CDF</span>), <span class="string">&#x27;void&#x27;</span>, [<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>]);</span><br><span class="line"><span class="keyword">var</span> fnc1 = <span class="keyword">new</span> <span class="title class_">NativeFunction</span>( <span class="title function_">ptr</span>(<span class="number">0x400c55</span>), <span class="string">&#x27;int&#x27;</span>, [<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Interceptor</span>.<span class="title function_">replace</span>(<span class="title function_">ptr</span>(<span class="number">0x400c55</span>), <span class="keyword">new</span> <span class="title class_">NativeCallback</span>(<span class="keyword">function</span> (<span class="params">p,p1,p2,p3,p4,p5,p6</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="variable language_">this</span>.<span class="property">context</span>))</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&#125;, <span class="string">&#x27;int&#x27;</span>, [<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>]));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">xor</span>(<span class="title function_">ptr</span>(<span class="number">0x400c55</span>),<span class="title function_">ptr</span>(<span class="number">0x147</span>),<span class="title function_">ptr</span>(<span class="number">0x61385a</span>))</span><br><span class="line"></span><br><span class="line"><span class="title class_">Memory</span>.<span class="title function_">writeS32</span>(<span class="title function_">ptr</span>(<span class="number">0x00605000</span>),<span class="number">0x20676e</span>)</span><br><span class="line">t = <span class="title class_">Memory</span>.<span class="title function_">readUtf8String</span>(<span class="title function_">ptr</span>(<span class="number">0x00605000</span>),<span class="number">3</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Written : &quot;</span> + t)</span><br><span class="line"></span><br><span class="line">q = <span class="title function_">ptr</span>(<span class="number">0x605001</span>)</span><br><span class="line">q1= <span class="title function_">ptr</span>(<span class="number">0x605002</span>)</span><br><span class="line">q2= <span class="title function_">ptr</span>(<span class="number">0x605003</span>)</span><br><span class="line">q3= <span class="title function_">ptr</span>(<span class="number">0x605004</span>)</span><br><span class="line">q4= <span class="title function_">ptr</span>(<span class="number">0x605005</span>)</span><br><span class="line">q5= <span class="title function_">ptr</span>(<span class="number">0x605006</span>)</span><br><span class="line">q6= <span class="title function_">ptr</span>(<span class="number">0x605007</span>)</span><br><span class="line">s = <span class="title function_">fnc1</span>(q,q1,q2,q3,q4,q5,q6)</span><br><span class="line"><span class="keyword">if</span> (s)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Yey&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>I defined 2 functions, first one xor routine other one is where our input checked. Second routine returns int,  After that I set a Interceptor to see registers before getting into function.<br>You can write into memory with Memory.writeS* . First parameter is pointer , second is what you want to write. You read locations as a string with readUtf8String function.<br>I give 7 parameter to fnc1 to see state of registers. Attach to binary with <code>frida magic -l brute.js</code></p><p><img src="/Flareon5-6-Challenge-Magic/gdb2.png" alt="gdb2"></p><p>So order of parameters is : rdi,rsi,rdx,rcx,r8,r9..<br>I used this to understand which register my parameter goes.</p><p>Now I can define functions with pointers, write strings to memory and read memory. So I have everything I need.</p><p>Before bruteforcing lets parse structure, open all functions with xor.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">s=[]</span><br><span class="line"><span class="keyword">for</span>(l =<span class="number">0</span>;l&lt;<span class="number">33</span>;l++)&#123;</span><br><span class="line">base = <span class="number">0x605100</span>+(<span class="number">0x120</span>*l)</span><br><span class="line">s[l*<span class="number">5</span>] =  <span class="title class_">Memory</span>.<span class="title function_">readS32</span>(<span class="title function_">ptr</span>(base+<span class="number">0x8</span>))</span><br><span class="line">s[l*<span class="number">5</span>+<span class="number">1</span>] = <span class="title class_">Memory</span>.<span class="title function_">readS32</span>(<span class="title function_">ptr</span>(base+<span class="number">0xc</span>))</span><br><span class="line">s[l*<span class="number">5</span>+<span class="number">2</span>] = <span class="title class_">Memory</span>.<span class="title function_">readS32</span>(<span class="title function_">ptr</span>(base+<span class="number">0x10</span>))</span><br><span class="line">s[l*<span class="number">5</span>+<span class="number">3</span>] = <span class="title class_">Memory</span>.<span class="title function_">readS32</span>(<span class="title function_">ptr</span>(base))</span><br><span class="line"> s[l*<span class="number">5</span>+<span class="number">4</span>] = <span class="title class_">Memory</span>.<span class="title function_">readS32</span>(<span class="title function_">ptr</span>(base+<span class="number">0x18</span>))</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;s.<span class="property">length</span>/<span class="number">5</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_">xor</span>(<span class="title function_">ptr</span>(s[i*<span class="number">5</span>+<span class="number">3</span>]),<span class="title function_">ptr</span>(s[i*<span class="number">5</span>]),<span class="title function_">ptr</span>(s[i*<span class="number">5</span>+<span class="number">4</span>]))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Define our pools with len 1, 2 and 3 for bruteforcing</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">pool = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\&quot;#$%&amp;\&#x27;()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~ &quot;</span></span><br><span class="line">pool_1 = []</span><br><span class="line">pool_2 = []</span><br><span class="line">pool_3 = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;pool.<span class="property">length</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">pool_1[i] = pool[i]</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j =<span class="number">0</span>;j&lt;pool.<span class="property">length</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">pool_2[i*pool.<span class="property">length</span>+j] = pool[i]+pool[j]</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> k =<span class="number">0</span>;k&lt;pool.<span class="property">length</span>;k++)</span><br><span class="line">&#123;</span><br><span class="line">pool_3[i*pool.<span class="property">length</span>*pool.<span class="property">length</span>+j*pool.<span class="property">length</span>+k] = pool[i]+pool[j]+pool[k]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Get parameters from s and bruteforce functions.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">toHex</span>(<span class="params">str,hex</span>)&#123;</span><br><span class="line">  </span><br><span class="line">  str = str.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  hex = <span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(str))</span><br><span class="line">    .<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">v</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> v.<span class="title function_">charCodeAt</span>(<span class="number">0</span>).<span class="title function_">toString</span>(<span class="number">16</span>)</span><br><span class="line">    &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  stri = <span class="string">&#x27;0x&#x27;</span>+hex</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">parseInt</span>(stri)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sol = <span class="string">&quot;                                                                     &quot;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;s.<span class="property">length</span>/<span class="number">5</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">pool_l = []</span><br><span class="line">len = s[i*<span class="number">5</span>+<span class="number">2</span>]</span><br><span class="line"><span class="keyword">if</span>(len == <span class="number">1</span>) pool_l = pool_1</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(len == <span class="number">2</span>) pool_l = pool_2</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(len == <span class="number">3</span>) pool_l = pool_3</span><br><span class="line"><span class="keyword">else</span> pool_l = pool</span><br><span class="line">found = <span class="literal">false</span></span><br><span class="line"><span class="keyword">var</span> fnc1 = <span class="keyword">new</span> <span class="title class_">NativeFunction</span>(<span class="title function_">ptr</span>(s[i*<span class="number">5</span>+<span class="number">3</span>]), <span class="string">&#x27;int&#x27;</span>, [<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>;j&lt;pool_l.<span class="property">length</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Memory</span>.<span class="title function_">writeS32</span>(<span class="title function_">ptr</span>(<span class="number">0x400000</span>),<span class="title function_">toHex</span>(pool_l[j]))</span><br><span class="line">t = <span class="title class_">Memory</span>.<span class="title function_">readS32</span>(<span class="title function_">ptr</span>(<span class="number">0x400000</span>),len)</span><br><span class="line">b = <span class="number">0x605120</span>+(<span class="number">0x120</span>*i)</span><br><span class="line">fnc_r = <span class="title function_">fnc1</span>(<span class="title function_">ptr</span>(<span class="number">0x400000</span>),<span class="title function_">ptr</span>(len),<span class="title function_">ptr</span>(b))</span><br><span class="line"><span class="keyword">if</span> (fnc_r == <span class="number">1</span>)&#123;</span><br><span class="line">sol = [sol.<span class="title function_">slice</span>(<span class="number">0</span>,s[i*<span class="number">5</span>+<span class="number">1</span>]),pool_l[j],sol.<span class="title function_">slice</span>(s[i*<span class="number">5</span>+<span class="number">1</span>]+len)].<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">sol[i*<span class="number">5</span>+<span class="number">1</span>] = pool_l[j]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sol)</span><br><span class="line">found = <span class="literal">true</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sol)</span><br></pre></td></tr></table></figure><p>I defined fnc1 NativeFunction which checks user input.<br>Lastly wrap all script into </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setTimeout(function () &#123;</span><br><span class="line">  /* your code here */</span><br><span class="line">&#125;, 0);</span><br></pre></td></tr></table></figure><p>because if I dont it will timeout.</p><p>So running this script will give this.</p><p><img src="/Flareon5-6-Challenge-Magic/gdb3.png" alt="gdb3"></p><p>Looks promising. BUT script couldn‚Äôt find 2 string. Even now I dont know why it doesnt find it. Maybe some register values doesnt fit idk. Since I was so close to finding first key, I tried to bypass checks and looked program at gdb.</p><p>Lets put breakpoint at after call rcx (0x402F0a) and  0x403B6C which is after all input is checked. Give string to program and if doesnt correct bypass next check by setting eax 1.</p><p><img src="/Flareon5-6-Challenge-Magic/gdb4.png" alt="gdb4"></p><p>Annd whoa. After hitting 0x403b6c, you can see ‚ÄúAh, there is nothi   like the hot winds of He   blowing in your face.‚Äù . Turns out program shuffled our input to create meaningfull string.</p><p>Googleing sentence and blanks filled with ‚Äúng ‚Äú and ‚Äúll‚Äù. This is good. If my script cant find string with len 2, I can say its ‚Äúll‚Äù , if len is 3 its ‚Äúng ‚Äú. </p><p>After giving correct input to binary, without knowing what program does I attached my frida script again. And whoila again I found string. And pool of letters is same.</p><p>So I know now, each key is shuffled, and shuffled parts are same. And I can lower my pool to this :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pool1 = &#x27;abcdefghilnorstuwy.,AH &#x27;</span><br><span class="line">pool2 = [&#x27;e &#x27;,&#x27; H&#x27;,&#x27;is&#x27;,&#x27;no&#x27;,&#x27;of&#x27;,&#x27; g&#x27;,&#x27;bl&#x27;,&#x27;ow&#x27;,&#x27;ur&#x27;,&#x27; w&#x27;,&#x27;in&#x27;,&#x27;yo&#x27;] </span><br><span class="line">pool3 = [&quot;ds &quot;,&quot;hot&quot;,&quot;the&quot;,&#x27; yo&#x27;,&quot;ace&quot;,&quot;thi&quot;,&#x27;Ah,&#x27;,&#x27; in&#x27;,&#x27; bl&#x27;,&#x27;lik&#x27;]</span><br></pre></td></tr></table></figure><p>My plan is set my frida script such that it will find correct key, send to binary, and again again.. for each key. I will use python helper for that.</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s = [<span class="string">&#x27;inds isng  llg w. e  HthitheoftheAh,urnolik inefe  yo blrhot in owace&#x27;</span>]</span><br><span class="line">r = process(<span class="string">&quot;./magic&quot;</span>)</span><br><span class="line"></span><br><span class="line">r.sendline(s[<span class="number">0</span>])</span><br><span class="line">fr = process([<span class="string">&#x27;python&#x27;</span>,<span class="string">&quot;./fri.py&quot;</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">665</span>):</span><br><span class="line">key =fr.recvline()</span><br><span class="line"><span class="built_in">print</span> i <span class="comment">#</span></span><br><span class="line">r.sendline(key[:-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(i,key)</span><br><span class="line">r.recvuntil(<span class="string">&quot;Congrats!&quot;</span>)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><p>I will start magic and my frida script same time. Get key from frida and send to binary.</p><p>I will wrap my frida script to timeout so it will execute after given time (70ms).</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> frida</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="comment">#inds isng  llg w. e  HthitheoftheAh,urnolik inefe  yo blrhot in owace</span></span><br><span class="line"><span class="comment">#abcdefghijklmnopqrstuvwxyz., ABCDEFGHIJKLMNOPQRSTUVWXYZ</span></span><br><span class="line"><span class="comment">#abcdefghilnorstuwy.,AH   </span></span><br><span class="line">session = frida.attach(<span class="string">&quot;magic&quot;</span>)</span><br><span class="line">script = session.create_script(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">pool2 = [&#x27;e &#x27;,&#x27; H&#x27;,&#x27;is&#x27;,&#x27;no&#x27;,&#x27;of&#x27;,&#x27; g&#x27;,&#x27;bl&#x27;,&#x27;ow&#x27;,&#x27;ur&#x27;,&#x27; w&#x27;,&#x27;in&#x27;,&#x27;yo&#x27;] </span></span><br><span class="line"><span class="string">pool3 = [&quot;ds &quot;,&quot;hot&quot;,&quot;the&quot;,&#x27; yo&#x27;,&quot;ace&quot;,&quot;thi&quot;,&#x27;Ah,&#x27;,&#x27; in&#x27;,&#x27; bl&#x27;,&#x27;lik&#x27;]</span></span><br><span class="line"><span class="string">pool = &#x27;abcdefghilnorstuwy.,AH &#x27;</span></span><br><span class="line"><span class="string">s=[]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var xor = new NativeFunction(ptr(0x402CDF), &#x27;void&#x27;, [&#x27;pointer&#x27;,&#x27;pointer&#x27;,&#x27;pointer&#x27;]);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function toHex(str,hex)&#123;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  str = str.split(&quot;&quot;).reverse().join(&quot;&quot;);</span></span><br><span class="line"><span class="string">  hex = unescape(encodeURIComponent(str))</span></span><br><span class="line"><span class="string">    .split(&#x27;&#x27;).map(function(v)&#123;</span></span><br><span class="line"><span class="string">      return v.charCodeAt(0).toString(16)</span></span><br><span class="line"><span class="string">    &#125;).join(&#x27;&#x27;)</span></span><br><span class="line"><span class="string">  stri = &#x27;0x&#x27;+hex</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  return parseInt(stri)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var remaining = 667;</span></span><br><span class="line"><span class="string">function crackNext() &#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">c = 0</span></span><br><span class="line"><span class="string">sol = &quot;                                                                     &quot;</span></span><br><span class="line"><span class="string">for(l =0;l&lt;33;l++)&#123;</span></span><br><span class="line"><span class="string">base = 0x605100+(0x120*l)</span></span><br><span class="line"><span class="string">s[l*5] =  Memory.readS32(ptr(base+0x8))</span></span><br><span class="line"><span class="string">s[l*5+1] = Memory.readS32(ptr(base+0xc))</span></span><br><span class="line"><span class="string">s[l*5+2] = Memory.readS32(ptr(base+0x10))</span></span><br><span class="line"><span class="string">s[l*5+3] = Memory.readS32(ptr(base))</span></span><br><span class="line"><span class="string"> s[l*5+4] = Memory.readS32(ptr(base+0x18))</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string"> for(var i =0;i&lt;s.length/5;i++)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">xor(ptr(s[i*5+3]),ptr(s[i*5]),ptr(s[i*5+4]))</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">possible = []</span></span><br><span class="line"><span class="string">for(var i=0;i&lt;s.length/5;i++)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">pool_l = []</span></span><br><span class="line"><span class="string">len = s[i*5+2]</span></span><br><span class="line"><span class="string">if(len == 1) pool_l = pool</span></span><br><span class="line"><span class="string">else if(len == 2) pool_l = pool2</span></span><br><span class="line"><span class="string">else if(len == 3) pool_l = pool3</span></span><br><span class="line"><span class="string">else pool_l = pool</span></span><br><span class="line"><span class="string">found = false</span></span><br><span class="line"><span class="string">var fnc1 = new NativeFunction(ptr(s[i*5+3]), &#x27;int&#x27;, [&#x27;pointer&#x27;,&#x27;pointer&#x27;,&#x27;pointer&#x27;]);</span></span><br><span class="line"><span class="string">for(var j = 0;j&lt;pool_l.length;j++)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Memory.writeS32(ptr(0x400000),toHex(pool_l[j]))</span></span><br><span class="line"><span class="string">t = Memory.readS32(ptr(0x400000),len)</span></span><br><span class="line"><span class="string">b = 0x605120+(0x120*i)</span></span><br><span class="line"><span class="string">fnc_r = fnc1(ptr(0x400000),ptr(len),ptr(b))</span></span><br><span class="line"><span class="string">if (fnc_r == 1)&#123;</span></span><br><span class="line"><span class="string">sol = [sol.slice(0,s[i*5+1]),pool_l[j],sol.slice(s[i*5+1]+len)].join(&#x27;&#x27;);</span></span><br><span class="line"><span class="string">sol[i*5+1] = pool_l[j]</span></span><br><span class="line"><span class="string">found = true</span></span><br><span class="line"><span class="string">break</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">if(!found)&#123;</span></span><br><span class="line"><span class="string">if(len==3)&#123;</span></span><br><span class="line"><span class="string">sol = [sol.slice(0,s[i*5+1]),&quot;ng &quot;,sol.slice(s[i*5+1]+len)].join(&#x27;&#x27;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else&#123;</span></span><br><span class="line"><span class="string">sol = [sol.slice(0,s[i*5+1]),&quot;ll&quot;,sol.slice(s[i*5+1]+len)].join(&#x27;&#x27;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">console.log(sol)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for(var i =0;i&lt;s.length/5;i++)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">//console.log(i*5+3)</span></span><br><span class="line"><span class="string">xor(ptr(s[i*5+3]),ptr(s[i*5]),ptr(s[i*5+4]))</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">  if (--remaining &gt; 0) &#123;</span></span><br><span class="line"><span class="string">    setTimeout(crackNext,70);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">setTimeout(crackNext, 0);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_message</span>(<span class="params">message, data</span>):</span><br><span class="line">    <span class="built_in">print</span>(message)</span><br><span class="line">script.on(<span class="string">&#x27;message&#x27;</span>, on_message)</span><br><span class="line">script.load()</span><br><span class="line">sys.stdin.read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Running sol.py</p><p><img src="/Flareon5-6-Challenge-Magic/gdb5.png" alt="gdb5"></p><p>It was fun to use frida. I learned a lot from this challenge. :)</p>]]></content>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> reverse </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>BLE&#39;nin ABCsi : 2 - MITM</title>
      <link href="/BLE-nin-ABCsi-2-MITM/"/>
      <url>/BLE-nin-ABCsi-2-MITM/</url>
      <content type="html"><![CDATA[<p>Serimizin ilk yazƒ±sƒ±nda BLE‚Äônin temellerini √∂ƒürendiƒüimize g√∂re artƒ±k BLE kullanan cihazlara yapƒ±labilecek saldƒ±rƒ± tekniklerinden bahsebiliriz. Bir BLE cihazƒ±mƒ±z olsun. Bu cihazƒ±mƒ±zla genellikle mobil telefonlardaki veya bilgisayara y√ºklediƒüimiz uygulamalar ile konu≈üuruz.</p><ul><li>Android i√ßin telefonun kurduƒüu baƒülantƒ±lardaki bluetooth trafiƒüini loglayabilmek i√ßin <code>Bluetooth HCI g√∂zetleme g√ºnl√ºƒü√º</code> √∂zelliƒüini a√ßabilirsiniz.</li><li>IOS i√ßin bu i≈ülem biraz zor. Ara≈ütƒ±rmama raƒümen cihazdaki bluetooth trafiƒüini dumplayabilceƒüim bi ara√ß bulamadƒ±m. Eƒüer bilen varsa yorum kƒ±smƒ±nƒ± ye≈üillendirebilir. <a href="https://developer.apple.com/documentation/corebluetooth">https://developer.apple.com/documentation/corebluetooth</a> adresinden class isimlerini bulup, bu fonksiyonlarƒ± Frida ile hooklayarak yarƒ±m bir ba≈üarƒ± elde ettim ancak tatmin edici olmadƒ± : <a href="blefrida">frida</a></li></ul><p>Android i√ßin bluetooth ve ble cihazlarla ileti≈üim kurabileceƒüimiz, <a href="https://play.google.com/store/apps/details?id=no.nordicsemi.android.mcp">nRF Connect</a> adƒ±nda uygulama bulunmakta. Kurmanƒ±zƒ± √∂neririm.  </p><p>Bunlarƒ±n dƒ±≈üƒ±nda yapabileceƒüimiz saldƒ±rƒ± tekniklerini kabaca 3‚Äôe ayƒ±rabiliriz:</p><ul><li>Man in the middle (MITM)</li><li>Sniffing</li><li>Firmware dump</li></ul><p>Ne i√ßin kullanacaƒüƒ±mƒ±zƒ± kƒ±saca a√ßƒ±klarsak:</p><ul><li>MITM‚Äôƒ± BLE link layer‚Äôda encryption kullanmayan cihazlara kar≈üƒ± kullanacaƒüƒ±z.</li><li>Sniffing‚Äôi  encryption yapmƒ±≈ü cihazlara kar≈üƒ± kullanacaƒüƒ±z.</li><li>Firmware dump ile hedef cihazƒ±mƒ±zƒ±n kullandƒ±ƒüƒ± t√ºm kodlarƒ± bulacaƒüƒ±z. √ñzellikle gizli, dokumante edilmemi≈ü √∂zel kodlarƒ± :)</li></ul><p>Bu yazƒ±da MITM, gelecek yazƒ±larda da diƒüer teknikleri anlatmaya √ßalƒ±≈üacaƒüƒ±m.<br>Her teknik i√ßin ufak ekipmanlar almamƒ±z gerekecek :)</p><h2 id="MITM"><a href="#MITM" class="headerlink" title="MITM"></a>MITM</h2><p>Gereksinimler:</p><ul><li>ESP32             $12</li><li>Raspberry Pi      $50</li><li>Bluetooth dongle  $10</li></ul><p>Bu teknik i√ßin 2 adet Bluetooth kullanan cihaza ihtiyacƒ±mƒ±z var. Kendi bilgisyarƒ±mƒ±z ve bir adet Raspberry Pi. Bluetooth MAC adresinizi deƒüi≈ütirebiliyorsanƒ±z dongle almanƒ±za gerek yok. RPI lazƒ±m √ß√ºnk√º bir bilgisayarda iki adet bluetooth client‚Äôƒ± √ßalƒ±≈ütƒ±rmak neredeyse imkansƒ±z.<br><img src="man.jpeg" width="350" height="200"></p><p>Temel olarak saldƒ±rƒ± topolojimiz ≈üu ≈üekilde:</p><p><img src="/BLE-nin-ABCsi-2-MITM/topoloji.png" alt="topo"></p><p>Hedef cihazƒ±mƒ±z raspberry pi‚Äôye baƒülandƒ±ƒüƒ± i√ßin advertisement yapmayacak. Biz de bundan faydalanƒ±p  o cihazmƒ±≈üƒ±z gibi advertisement yapƒ±caz. Kullanƒ±cƒ± hedef cihaza baƒülandƒ±ƒüƒ±nƒ± d√º≈ü√ºnerek bizim kurduƒüumuz sahte cihaza baƒülanƒ±cak.</p><p>Kali‚Äôde kurduƒüumuz sahte BLE, hedef cihazdaki t√ºm √∂zelliklerin aynƒ±sƒ±nƒ± ta≈üƒ±yacak, hatta cihazla aynƒ± MAC adresini de. Dƒ±≈üardan bakan biri i√ßin sahte cihazƒ±mƒ±z ve ger√ßek cihaz arasƒ±nda bir fark olmayacak. Kullanƒ±cƒ±nƒ±n yolladƒ±ƒüƒ± t√ºm datayƒ± kali‚Äôden raspberry pi‚Äôye yollayacaƒüƒ±z. Raspberry pi da gelen datayƒ± hedef cihazƒ±mƒ±za yollayacak. Hedef cihazdan d√∂nen data da aynƒ± ≈üekilde kullanƒ±cƒ±ya geri d√∂necek. B√∂ylece kimse farkƒ±na varmadan aradan ge√ßen t√ºm datayƒ± inceleme fƒ±rsatƒ±nƒ± elde etmi≈ü olacaƒüƒ±z.</p><p>T√ºm bu i≈ülemleri yapan halihazƒ±rda geli≈ütirilmi≈ü 2 toolumuz bulunmakta. <a href="https://github.com/securing/gattacker">GATTacker</a> ve <a href="https://github.com/DigitalSecurity/btlejuice">btlejuice</a>. GATTacker komple komut satƒ±rƒ±nda √ßalƒ±≈ümakta. Btlejuice ise web aray√ºz√ºnde √ßalƒ±≈ümakta. GATTacker‚Äôƒ± bir cihaz √ºst√ºnde ba≈üarƒ±yla kullandƒ±m. Ancak BLECTF i√ßin kullandƒ±ƒüƒ±m ESP32‚Äôde i≈üe yaramadƒ±.<br>Btlejuice ise her iki cihazda da √ßalƒ±≈ütƒ±. O y√ºzden bu yazƒ±da btlejuice kullanacaƒüƒ±z.</p><h2 id="Raspberry"><a href="#Raspberry" class="headerlink" title="Raspberry"></a>Raspberry</h2><p> microSD kartƒ±ma raspian imajƒ± atƒ±p raspberry pi‚Äôyi ayaƒüa kaldƒ±rdƒ±m. SSH ile baƒülanabilmek i√ßin imajƒ±n i√ßine bo≈ü bir txt dosyasƒ± koyup adƒ±nƒ± <code>ssh</code> yaptƒ±m. Raspberry pi‚Äôyi ethernet kablosu ile modeme baƒülayƒ±p, ip‚Äôsini bulduktan sonra ssh ile baƒülandƒ±m. Default pi:raspberry credleri ile cihaza girdim. VNC server ba≈ülatƒ±p, servera baƒülandƒ±m. Raspberry pi‚Äôyi proxy olarak kullanacaƒüƒ±z. Bir klasor olu≈üturup <code>sudo npm install -g btlejuice</code> ile btlejuice‚Äôi y√ºkledim. (eƒüer npmde sƒ±kƒ±ntƒ± ya≈üarsanƒ±z npm 8 kurun ≈üu <a href="https://joshtronic.com/2017/12/11/upgrade-to-nodejs-8-on-debian-and-ubuntu/">linkten</a>)</p><p> Proxy‚Äôi <code>node node_modules/btlejuice/bin/cmd_btlejuice_proxy.js</code> ile ba≈ülatƒ±yoruz.<br><img src="/BLE-nin-ABCsi-2-MITM/pi.png" alt="pi"></p><h2 id="Kali"><a href="#Kali" class="headerlink" title="Kali"></a>Kali</h2><p>Kalide de aynƒ± ≈üekilde btlejuice‚Äôi kurup bu sefer <code>sudo node node_modules/btlejuice/bin/cmd_btlejuice.js -u &lt;Raspberry IP address&gt; -w</code> komutunu √ßalƒ±≈ütƒ±rƒ±yoruz.</p><p><img src="/BLE-nin-ABCsi-2-MITM/kali.png" alt="kali"></p><p>Ardƒ±ndan kali‚Äôde browser a√ßƒ±p localhost:8080‚Äôe gidiyoruz. Saƒü √ºstten bluetooth i≈üaretine bastƒ±ƒüƒ±mƒ±zda cihazlarƒ± ≈üekilde listeliyorsa i≈ülem tamam demektir. ƒ∞≈üaretlediƒüim cihaz ayarlayacaƒüƒ±mƒ±z ESP32mizin ismi olacak.</p><p><img src="/BLE-nin-ABCsi-2-MITM/kali_browser.png" alt="browser"></p><h2 id="ESP32"><a href="#ESP32" class="headerlink" title="ESP32"></a>ESP32</h2><p>√ñnceki yazƒ±da kullandƒ±ƒüƒ±m ESP32‚Äôye yeni kod y√ºkleyip, ufak bir sistem kurdum. Bu sefer kod y√ºklemek i√ßin Arduino IDE kullandƒ±m. ESP32‚Äônin c k√ºt√ºphanesini cpp‚Äôye aktarƒ±p Arduinoya ge√ßirmi≈ü abilerimiz. Arduino‚Äôya esp32 k√ºt√ºphanelerini eklemek i√ßin <a href="https://github.com/espressif/arduino-esp32/blob/master/docs/arduino-ide/boards_manager.md">≈üu</a> linki takip edebilirsiniz.</p><p>Kod olarak ≈üunu kullandƒ±m.</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;BLEDevice.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;BLEUtils.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;BLEServer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SERVICE_UUID        <span class="string">&quot;4fafc201-1fb5-459e-8fcc-c5c9c331914b&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CHARACTERISTIC_UUID <span class="string">&quot;beb5483e-36e1-4688-b7f5-ea07361b26a8&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyCallbacks</span>: <span class="keyword">public</span> BLECharacteristicCallbacks &#123;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">onWrite</span><span class="params">(BLECharacteristic *pCharacteristic)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      std::string value = pCharacteristic-&gt;<span class="built_in">getValue</span>();</span><br><span class="line">      <span class="keyword">if</span> (value.<span class="built_in">length</span>() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> ledPin;</span><br><span class="line">        <span class="keyword">if</span>(value == <span class="string">&quot;Secr3tP4ssw0rd&quot;</span>) ledPin = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">else</span> ledPin = <span class="number">5</span>;</span><br><span class="line">        <span class="built_in">digitalWrite</span> (ledPin, HIGH);</span><br><span class="line">        <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">        <span class="built_in">digitalWrite</span> (ledPin, LOW);</span><br><span class="line">      &#125;</span><br><span class="line">      pCharacteristic-&gt;<span class="built_in">setValue</span>(<span class="string">&quot;MITM my value&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9400</span>);</span><br><span class="line">  <span class="built_in">pinMode</span> (<span class="number">5</span>, OUTPUT);</span><br><span class="line">  <span class="built_in">pinMode</span> (<span class="number">4</span>, OUTPUT);</span><br><span class="line">  BLEDevice::<span class="built_in">init</span>(<span class="string">&quot;MITMMe&quot;</span>);</span><br><span class="line">  BLEServer *pServer = BLEDevice::<span class="built_in">createServer</span>();</span><br><span class="line">  BLEService *pService = pServer-&gt;<span class="built_in">createService</span>(SERVICE_UUID);</span><br><span class="line">  BLECharacteristic *pCharacteristic = pService-&gt;<span class="built_in">createCharacteristic</span>(</span><br><span class="line">                                         CHARACTERISTIC_UUID,</span><br><span class="line">                                         BLECharacteristic::PROPERTY_READ |</span><br><span class="line">                                         BLECharacteristic::PROPERTY_WRITE</span><br><span class="line">                                       );</span><br><span class="line">  pCharacteristic-&gt;<span class="built_in">setCallbacks</span>(<span class="keyword">new</span> <span class="built_in">MyCallbacks</span>());</span><br><span class="line">  pCharacteristic-&gt;<span class="built_in">setValue</span>(<span class="string">&quot;MITM my value&quot;</span>);</span><br><span class="line">  pService-&gt;<span class="built_in">start</span>();</span><br><span class="line">  BLEAdvertising *pAdvertising = pServer-&gt;<span class="built_in">getAdvertising</span>();</span><br><span class="line">  pAdvertising-&gt;<span class="built_in">start</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Kodumuz karakteristiƒüimize ≈üifre olarak <code>Secr3tP4ssw0rd</code> g√∂nderdiƒüimizde 4 numaralƒ± pini, farklƒ± bir ≈üifre g√∂nderdiƒüimizde 5 numaralƒ± pini 500 milisaniye boyunca yakmakta. Arduino IDE ile esp32mize kodu y√ºkl√ºyoruz.</p><p>Devre ≈üemamƒ±zda ≈üu ≈üekilde :</p><p><img src="/BLE-nin-ABCsi-2-MITM/arduino.png" alt="arduino"></p><p>Devreyi de kurduktan sonra geriye datayƒ± intercept etmek kalƒ±yor :)</p><h2 id="ATIL-KURT"><a href="#ATIL-KURT" class="headerlink" title="ATIL KURT"></a>ATIL KURT</h2><p>T√ºm setup‚Äôƒ± kurduktan sonra btlejuice aray√ºz√ºnde en saƒüdaki se√ßeneƒüe tƒ±klayƒ±p tikleri kaldƒ±rƒ±n yoksa handlelarƒ±mƒ±zƒ± karƒ±≈ütƒ±rƒ±yor biraz. Ardƒ±ndan bluetooth i≈üaretine tƒ±klayƒ±n. Komut satƒ±rƒ±mƒ±zda ≈üunlarƒ± g√∂rd√ºyseniz tamamdƒ±r.</p><p><img src="/BLE-nin-ABCsi-2-MITM/ble.png" alt="ble"><br>Eƒüer tikleri kaldƒ±rmazsanƒ±z i≈üaretlediƒüim yer yerine bi √ºst infodaki <code>Fixing Bleno handles</code> mesajƒ±nƒ± g√∂r√ºrs√ºn√ºz ve nRF Connect t√ºm handlelarƒ± g√∂remez.<br>Ardƒ±ndan telefonunzdan nrf connect uygulamasƒ±nƒ± a√ßƒ±p <code>MITMME</code> cihazƒ±na baƒülanƒ±nƒ±n.<br><img src="nrf.png" width="350" height="700"></p><p>≈ûimdi handle‚Äôƒ±mƒ±za yanlƒ±≈ü ≈üifre girip kƒ±rmƒ±zƒ± ƒ±≈üƒ±ƒüƒ±n yandƒ±ƒüƒ±nƒ± g√∂r√ºn. Bir de doƒüru ≈üifreyi yollayƒ±p sarƒ± ƒ±≈üƒ±ƒüƒ± yakƒ±n.<br>Son olarakta btljuice aray√ºz√ºne baktƒ±ƒüƒ±nƒ±zda kar≈üƒ±nƒ±zda g√∂nderdiƒüiniz datalarƒ± g√∂r√ºceksiniz :)</p><p><img src="/BLE-nin-ABCsi-2-MITM/mitm.png" alt="mitm"><br>Giden datayƒ± intercept edebiliriz. Doƒüru ≈üifre girildiƒüi halde bunu yanlƒ±≈üa √ßevirebiliriz.</p><p><img src="/BLE-nin-ABCsi-2-MITM/intercept.png" alt="intercept"></p><p>Real life √∂rneklerden biri : <a href="https://blog.attify.com/btlejuice-mitm-attack-smart-bulb/">https://blog.attify.com/btlejuice-mitm-attack-smart-bulb/</a></p><p>Serinin bir sonraki yazƒ±sƒ±nda pairing‚Äôi pin ile yapacaƒüƒ±z. Link layerimizi encrypt edip bu trafiƒüe saldƒ±rmayƒ± deneyeceƒüiz. G√∂r√º≈ümek √ºzere :)</p>]]></content>
      
      
        <tags>
            
            <tag> Bluetooth </tag>
            
            <tag> Hardware </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>BLE&#39;nin ABCsi : 1 - Basics</title>
      <link href="/BLE-nin-ABCsi-1-Basics/"/>
      <url>/BLE-nin-ABCsi-1-Basics/</url>
      <content type="html"><![CDATA[<p>Bu seride Bluetooth Low Energy hakkƒ±nda √∂ƒürendiƒüim ne varsa anlatmaya √ßalƒ±≈üacaƒüƒ±m. ƒ∞lk olarak protokoldeki temel kavramlarƒ± anlatƒ±p ardƒ±ndan bu kavramlarƒ± uygulamalƒ± olarak peki≈ütirebileceƒüimiz <a href="https://github.com/hackgnar/ble_ctf">https://github.com/hackgnar/ble_ctf</a> BLECTF ‚Äòin √ß√∂z√ºmlerinden bahsedeceƒüim. Sonraki yazƒ±mda da BLE cihazlarƒ±n g√ºvenliƒüine ve saldƒ±rƒ± tekniklerine deƒüineceƒüim.</p><h2 id="Temel-Bilgiler"><a href="#Temel-Bilgiler" class="headerlink" title="Temel Bilgiler"></a>Temel Bilgiler</h2><p>Bluetooth Low Energy yani BLE. ƒ∞lk olarak Bluetooth 4.0 ile 2011‚Äôde kar≈üƒ±mƒ±za √ßƒ±ktƒ±. Klasik Bluetooth ile BLE‚Äônin farklarƒ±nƒ± bir tabloya d√∂kecek olursak;</p><p>|√ñzellik    | Bluetooth  | BLE   |<br>| :‚Äî          |     :‚Äî:       |          :‚Äî: |<br>| Network&#x2F;Topology   | Scatternet      | Star Bus      |<br>| Enerji T√ºketimi    | Az (&lt; 30mA)       | √áok az ( &lt;15mA)      |<br>| Hƒ±z | 700 Kbps      | 1 Mbps      |<br>| Menzil     | &lt; 30m        | 50 metre.A√ßƒ±k alanda 150 |<br>| RF Frekansƒ±    | 2400 MHz       | 2400 MHz      |<br>| Frekans kanallarƒ±  | 79 kanal        | 40 kanal(3 advertising)|<br>| Gecikme | 100ms | 3ms|</p><p>Klasik Bluetooth devamlƒ± veri akƒ±≈üƒ± i√ßin tasarlanmƒ±≈ütƒ±. BLE ise uzun aralƒ±klarla ani (burst) veri akƒ±≈üƒ± i√ßin tasarlanmƒ±≈ü. Mesela arabadaki m√ºzik √ßalara Bluetooth ile baƒülanƒ±p m√ºzik aktarƒ±rken s√ºrekli bir veri akƒ±≈üƒ± var ancak bluetoothla √ßalƒ±≈üan bir lamba butonu siz a√ß&#x2F;kapa komutu g√∂nderdiƒüiniz s√ºre boyunca √ßalƒ±≈ümakta.</p><p>BLE sayesinde IOT cihazlardaki enerji t√ºketimi hatrƒ± sayƒ±lƒ±r bir ≈üekilde azaldƒ±. Bu y√ºzden IOT cihazlarda klasik Bluetooth yerine BLE kullanƒ±lmakta. </p><p>T√ºm BLE cihazlar GATT (Generic Attribute Profile) kullanmakta. GATT‚Äôta kar≈üƒ±mƒ±za √ßƒ±kan terimlerden bahsedecek olursak:</p><ul><li><strong>Client</strong> : GATT komutlarƒ±nƒ± ve isteklerini ba≈ülatan, isteklere gelen cevaplarƒ± kabul eden cihaz. Telefon, Bilgisayar gibi</li><li><strong>Server</strong> : GATT komutlarƒ±nƒ± ve isteklerini alan, cevaplarƒ± yollayan cihazlar. Isƒ± sens√∂r√º gibi</li><li><strong>Characteristic</strong> : Client ve Server arasƒ±nda aktarƒ±lan data deƒüeri. Pildeki voltaj miktarƒ± </li><li><strong>Properties</strong> : Her karakteriƒüin √∂zellikleri vardƒ±r. READ, WRITE, NOTIFY gibi gibi  </li><li><strong>Service</strong> : Benzer karakteristiklerin toplu hali. Mesela termometre service‚Äôi, ƒ±sƒ± deƒüerini ve √∂l√ß√ºmler arasƒ±ndaki zamana ait karakteristiƒüi tutabilir.</li><li><strong>Descriptor</strong> : Karakteristik hakkƒ±nda bilgi. Isƒ± deƒüeri olarak <code>Celcius</code> kullanƒ±lacaksa o karakteristikteki descriptora Celcius yazƒ±labilir.</li><li><strong>Identifier</strong> : Services, descriptors, ve karakteristiklerin hepsinin bir UUID‚Äôsi vardƒ±r.  Bu UUID‚Äôlere identifier denir.</li></ul><h2 id="BLECTF"><a href="#BLECTF" class="headerlink" title="BLECTF"></a>BLECTF</h2><p>Bu kadar teori yeter biraz elimizi kirletme vakti geldi. <a href="https://github.com/hackgnar/ble_ctf">https://github.com/hackgnar/ble_ctf</a> adresinde ho≈ümu ho≈ü bir CTF tarzƒ± olayƒ±mƒ±z var. BLE‚Äôye ba≈ülamak i√ßin birebir.</p><p>Bir adet ESP32 ile ile CTF‚Äôe ba≈ülayabiliyoruz. T√ºrkiyede <a href="https://www.google.com/search?q=esp32">biraz</a> pahalƒ±ya denk geliyor. Ben <a href="https://www.direnc.net/esp-32s-modul">≈üu</a> adresteki cihazƒ± satƒ±n aldƒ±m. Birde 20-30 lira arasƒ±nda bir Bluetooth dongle almanƒ±zƒ± √∂neririm. </p><p><img src="/BLE-nin-ABCsi-1-Basics/blectf.png" alt="device"></p><p>CTFte sadece 1 flagi almak i√ßin mac adresini deƒüi≈ütirmemiz gerekiyor. Bilgisayarƒ±nƒ±zda gelen Bluetooth chiplerinin mac adresini genelde deƒüi≈ütiremiyorsunuz. Denemek isterseniz :<br>√ñnce <code>hciconfig</code> yazƒ±p sisteminizdeki bluetoothlarƒ± listeleyin. Benim dongle da takƒ±lƒ± olduƒüu i√ßin 2 cihaz g√∂z√ºk√ºyor.<br><img src="/BLE-nin-ABCsi-1-Basics/hciconfig1.png" alt="hcilist"></p><p>Ardƒ±ndan denemek istediƒüiniz cihazƒ± <code>hciconfig hciX up</code> ile √ßalƒ±≈üƒ±r hale getirin ve<br><code>bdaddr -i hciX 11:22:33:44:55:66</code> ile mac adresini deƒüi≈ütirmeye √ßalƒ±≈üƒ±n. Eƒüer benim gibi hata alƒ±yorsanƒ±z mac adresi deƒüi≈ümiyor demektir :(</p><p><img src="/BLE-nin-ABCsi-1-Basics/hciconfig.png" alt="hci"></p><p>BLE hackingle uƒüra≈üƒ±caksanƒ±z mac adresini deƒüi≈ütirmeniz √ßok i≈üinize yarƒ±yacak, √∂zellikle Man in the Middle Attack yaparken :)</p><p><strong>ROM Flashing</strong></p><p>esp32yi flashlamadan √∂nce bilgisayarƒ±nƒ±za esp toolcahini kurmanƒ±z gerekiyor.<br><a href="http://esp-idf.readthedocs.io/en/latest/get-started/#setup-toolchain">http://esp-idf.readthedocs.io/en/latest/get-started/#setup-toolchain</a> adresinde ortamƒ±nƒ±za g√∂re instructionlara takip ederek toolchaini kurun</p><p>Ardƒ±ndan ctfi hazƒ±rlayan abimizin github‚Äôƒ±nƒ± clonelayƒ±n. <code>git clone https://github.com/hackgnar/ble_ctf/</code> . Klonladƒ±ktan sonra sƒ±rayla:</p><ul><li><code>cd ble_ctf</code></li><li><code>make menuconfig</code></li><li><code>make</code></li><li>Bir sonraki adƒ±mdan √∂nce esp32yi usb ile bilgisayarƒ±nƒ±za baƒülayƒ±n</li><li><code>make flash</code></li></ul><p><strong>Gelsin Flagler</strong></p><p>CLI toollarƒ± olarak hcitool, bleah, bluetoothctl ve gatttool kullanƒ±caz. Kendi linux daƒüƒ±tƒ±mƒ±nƒ±za g√∂re bu toollarƒ± kurmaya √ßalƒ±≈üƒ±n.<br>ESP32mizle ileti≈üim kurabilmemiz i√ßin √∂ncelikle MAC adresini bulmamƒ±z gerekiyor. Bunun i√ßin hcitool scan deƒüil <code>hcitool lescan</code> komutunu kullanƒ±yoruz. √á√ºnk√º esp32miz BLE kullanƒ±yor.</p><p><img src="/BLE-nin-ABCsi-1-Basics/hcitool.png" alt="ble"></p><p>G√∂rd√ºƒü√ºn√ºz √ºzere esp32miz  <code>BLECTF</code> diyerek advertising yapmakta. Mac adresini kopyaladƒ±ktan sonra <code>sudo bleah -b &quot;30:AE:A4:05:4F:E6&quot;-e</code> ile ≈üu ekran g√∂r√ºnt√ºs√ºn√º alabiliyoruz.<br><img src="/BLE-nin-ABCsi-1-Basics/ble.png" alt="ble"></p><p>Bu ekranda yazƒ±nƒ±n ilk kƒ±smƒ±nda bahsettiƒüimiz service, karakteristik ve descriptorlarƒ± g√∂rebilirsiniz. Skorumuz 0x2a handlelƒ± karakteristiƒüimizde tutuluyor. Eƒüer o karakteristiƒüi gatttool ile okumak istiyorsak :<br><code>gatttool -b 30:AE:A4:05:4F:E6 --char-read -a 0x002a|awk -F&#39;:&#39; &#39;&#123;print $2&#125;&#39;|tr -d &#39; &#39;|xxd -r -p;printf &#39;\n&#39;</code> ile okuyabiliyoruz.</p><p><code>gatttool help</code> ile toolumuzun parametreleri hakkƒ±nda bilgi edinebilirsiniz. <code>--char-read</code>‚Äòi okuma , <code>--char-write</code>‚Äòƒ± da yazma i≈üleri i√ßin kullanƒ±caz.<br>Flagleri 0x2c numaralƒ± handle‚Äôa 20 karakter uzunlugunda yolluyoruz.</p><p>Github sayfasƒ±nda ilk flagimiz i√ßin <a href="https://github.com/hackgnar/ble_ctf/blob/master/docs/hints/flag1.md">https://github.com/hackgnar/ble_ctf/blob/master/docs/hints/flag1.md</a> hint bƒ±rakmƒ±≈ü abimiz.</p><p>ƒ∞lk flagimizi girmek i√ßin <code>gatttool -b 30:AE:A4:05:4F:E6 --char-write-req -a 0x002c -n $(echo -n &quot;12345678901234567890&quot;|xxd -ps)</code>  komutunu giriyoruz.</p><p>Tekrar flag sayacƒ±mƒ±zƒ± okudugumuzda : <code>Score:1 /20</code> olduƒüunu g√∂r√ºyoruz YEY</p><p>Girdiƒüimiz komutlarƒ±n √ßoƒüunu tekrar tekrar kullanƒ±caƒüƒ±mƒ±z i√ßin bash scripti yazmamƒ±z √ßok ho≈ü olur.<br>Default handle olarak score‚Äôun handle‚Äôƒ±nƒ± kullanan, parametre verdiƒüimizde ise verdiƒüimiz handle‚Äôƒ± kullanan bir bash scripti yazalƒ±m.</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gatttool -b 30:AE:A4:05:4F:E6 --char-read -a <span class="variable">$&#123;1:-0x2a&#125;</span>|awk -F<span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|<span class="built_in">tr</span> -d <span class="string">&#x27; &#x27;</span>|xxd -r -p;<span class="built_in">printf</span> <span class="string">&#x27;\n&#x27;</span></span><br></pre></td></tr></table></figure><p>read.sh olarak kaydettim.</p><p><img src="/BLE-nin-ABCsi-1-Basics/read.png" alt="read"></p><p>S√ºper. Birde bunu write i√ßin yapalƒ±m. ƒ∞lk parametremiz yazƒ±lacak deƒüeri, ikinci parametre de hangi handle‚Äôa yazƒ±lacaƒüƒ±nƒ± belirlesin. Eƒüer 2. parametreye deƒüer girmezsek flag girdiƒüimiz handle‚Äôa yazsƒ±n.</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gatttool -b 30:AE:A4:05:4F:E6 --char-write-req -a <span class="variable">$&#123;2:-0x2c&#125;</span> -n $(<span class="built_in">echo</span> -n <span class="variable">$1</span> |xxd -ps)</span><br></pre></td></tr></table></figure><p>bunu da write.sh olarak kaydettim.</p><p>0x2e de zaten 20 karakterlik md5 g√∂z√ºkmekte. Hemen onu flag olarak yazƒ±yoruz.</p><p><img src="/BLE-nin-ABCsi-1-Basics/2.png" alt="first"></p><p>3.flagimiz device adƒ±nƒ±n md5i.</p><p><img src="/BLE-nin-ABCsi-1-Basics/3.png" alt="3"></p><p>4.flagimiz, 0x32  handle‚Äôƒ±na bir deƒüer yazdƒ±ƒüƒ±mƒ±zda handle‚Äôa geliyor.</p><p><img src="/BLE-nin-ABCsi-1-Basics/4.png" alt="4"></p><p>5.flag 0x16 handle‚Äôƒ±nda saklƒ±. Ba≈ütan 20 karakteri flag handle‚Äôimiza yolluyoruz.<br><img src="/BLE-nin-ABCsi-1-Basics/hidden.png" alt="5"></p><p>6.flag i√ßin 0x34 handle‚Äôƒ±na ‚Äúyo‚Äù yazƒ±yoruz.<br><img src="/BLE-nin-ABCsi-1-Basics/6.png" alt="6"></p><p>7 biraz tricky. 0x36 handle‚Äôƒ±na 0x7 deƒüerini yazmamƒ±zƒ± istiyor.</p><p><img src="/BLE-nin-ABCsi-1-Basics/7.png" alt="7"></p><p>8 de 7‚Äôye benzer ≈üekilde</p><p><img src="/BLE-nin-ABCsi-1-Basics/8.png" alt="8"></p><p>9da 0x3c handle‚Äôini 0x0 dan 0xff e kadar bruteforcelamamƒ±z isteniyor. </p><p><img src="/BLE-nin-ABCsi-1-Basics/9.png" alt="9"></p><p>256 deneme bitince flagi giriyoruz</p><p><img src="/BLE-nin-ABCsi-1-Basics/9_2.png" alt="9_2"></p><p>0x3e handle‚Äôimiz bize 1000 kere beni oku diyor.</p><p><img src="/BLE-nin-ABCsi-1-Basics/10.png" alt="10"></p><p>1-2 Dakika sonra flagimizi veriyor</p><p><img src="/BLE-nin-ABCsi-1-Basics/10_2.png" alt="10_2"></p><p>Bu sefer farklƒ± bir istek √ßƒ±kƒ±yor kar≈üƒ±mƒ±za <code>listen for single notification</code>. 0x40 handle‚Äôƒ±nda NOTIFY ≈üeklinde bir property var. Bu property cihaza subscribe olan clientlara notification yollamasƒ± demek. GATTtool aracƒ±nda <code>--listen</code> parametresini write komutumuza eklersek bu i≈üi yapmƒ±≈ü oluyoruz.</p><p><img src="/BLE-nin-ABCsi-1-Basics/11.png" alt="11"></p><p>12de farklƒ± bir handle‚Äôin indication‚Äôƒ±nƒ± dinliyoruz. Indication ve notification nerdeyse aynƒ± ≈üey demek, √ßok farklarƒ± yok.</p><p><img src="/BLE-nin-ABCsi-1-Basics/12.png" alt="12"></p><p>13 ve 14‚Äôte multi-indication ve notification i√ßin dinleme yapƒ±yoruz. Flagimizi ilk notificationda deƒüilde ikincide veriyor.</p><p><img src="/BLE-nin-ABCsi-1-Basics/13.png" alt="13"><br><img src="/BLE-nin-ABCsi-1-Basics/14.png" alt="14"></p><p>15 Bluetooth mac adresimizi deƒüi≈ütirmemizi istiyor.<br><img src="/BLE-nin-ABCsi-1-Basics/15.png" alt="15"></p><p>16 Baƒülantƒ±mƒ±zdaki MTU deƒüerimizi deƒüi≈ütirmemizi istiyor. Bunu da gatttool‚Äôun interface‚Äôi i√ßinde yapƒ±yoruz.</p><p><img src="/BLE-nin-ABCsi-1-Basics/16.png" alt="16"></p><p>17.flagimiz i√ßin handle bize <code>write+resp hello</code> diyor. Bunu cli gatttool ile yapamadƒ±m. Kƒ±sa bir python scripti ile halloluyor.<br><img src="/BLE-nin-ABCsi-1-Basics/50.png" alt="50"></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pygatt</span><br><span class="line">adapter = pygatt.GATTToolBackend()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> :</span><br><span class="line">    adapter.start()</span><br><span class="line">    device = adapter.connect(<span class="string">&quot;30:AE:A4:05:4F:E6&quot;</span>)</span><br><span class="line">    value = device.char_read_handle(<span class="string">&quot;0x0050&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(value))</span><br><span class="line">    x = device.char_write(<span class="string">&quot;0000ff14-0000-1000-8000-00805f9b34fb&quot;</span>,<span class="built_in">bytearray</span>([<span class="built_in">ord</span>(<span class="string">&#x27;h&#x27;</span>),<span class="built_in">ord</span>(<span class="string">&#x27;e&#x27;</span>),<span class="built_in">ord</span>(<span class="string">&#x27;l&#x27;</span>),<span class="built_in">ord</span>(<span class="string">&#x27;l&#x27;</span>),<span class="built_in">ord</span>(<span class="string">&#x27;o&#x27;</span>)]),<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    adapter.stop()</span><br></pre></td></tr></table></figure><p><img src="/BLE-nin-ABCsi-1-Basics/17.png" alt="17"></p><ol start="18"><li>Flag ilgin√ß bir≈üey √∂ƒüretiyor bize. Karakteristik bize propertilerini verirken NOTIFY yok bende dese de, aslƒ±nda NOTIFY yapabiliyormu≈ü.</li></ol><p><img src="/BLE-nin-ABCsi-1-Basics/18.png" alt="18"></p><p>0x54 numaralƒ± handle‚Äôƒ±mƒ±zda t√ºm propertieslerimiz var</p><p><img src="/BLE-nin-ABCsi-1-Basics/19_props.png" alt="19_prop"></p><p>Hepsini deneyerek flagimizin par√ßalarƒ±nƒ± toplayƒ±p birle≈ütiriyoruz. 0x54 numaralƒ± handle‚Äôƒ±mƒ±za herhangi bir≈üey yazdƒ±ƒüƒ±mƒ±zda handle‚Äôa atanan yeni deƒüeri ilk par√ßamƒ±z. Notification olarak bize yolladƒ±ƒüƒ± da ikinci par√ßamƒ±z oluyor.</p><p><img src="/BLE-nin-ABCsi-1-Basics/19.png" alt="19"></p><p>Veee son flagimizi de giriyoruz.</p><p><img src="/BLE-nin-ABCsi-1-Basics/20.png" alt="20"></p><p>Buraya kadar okuyarak geldiyseniz BLE‚Äônin az √ßok ne yaptƒ±ƒüƒ±nƒ± anlamƒ±≈üsƒ±nƒ±zdƒ±r diye umuyorum. Serinin sonraki yazƒ±sƒ±nda BLE cihazlara yapƒ±labilcek saldƒ±rƒ±lardan bahsedeceƒüim, g√∂r√º≈ümek √ºzere.  </p>]]></content>
      
      
        <tags>
            
            <tag> Bluetooth </tag>
            
            <tag> Hardware </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mobil Zararlƒ± Analizi - B√∂l√ºm 1: Ortamƒ± Kuralƒ±m</title>
      <link href="/Mobil-Zararli-Analizi-Bolum-1-Ortami-Kuralim/"/>
      <url>/Mobil-Zararli-Analizi-Bolum-1-Ortami-Kuralim/</url>
      <content type="html"><![CDATA[<p>Bu seride mobil zararlƒ± analizine yeni ba≈ülayanlar i√ßin bir rehber olu≈üturmaya √ßalƒ±≈üacaƒüƒ±m. Serinin diƒüer yazƒ±larƒ±nda √∂rnek zararlƒ± analizi yapmayƒ± d√º≈ü√ºnmekteyim. Bu yazƒ±mda analiz i√ßin ortamƒ± kurmayƒ± ve kullanacaƒüƒ±m toollarƒ± anlatmaya √ßalƒ±≈ütƒ±m. Yazƒ±yƒ± 4 b√∂l√ºme ayƒ±rabiliriz. </p><ul><li>Ortam</li><li>Toollar</li><li>VM Hardening</li><li>Zararlƒ± bulma</li></ul><h1 id="Ortam"><a href="#Ortam" class="headerlink" title="Ortam"></a>Ortam</h1><p>Analiz ortamƒ± i√ßin bir android emulator kullanmamƒ±z gerek. Bir√ßok alternatif olmakla birlikte ben genymotion kullanƒ±yorum. Performans olarak Android Studio‚Äônun emulatorunden bir tƒ±k daha iyi ve biricik Fridamƒ± √ßok rahat bir ≈üekilde √ßalƒ±≈ütƒ±rabilmekte.<br>Genymotion kurulumu i√ßin <a href="https://www.genymotion.com/fun-zone/">https://www.genymotion.com/fun-zone/</a> adresine giderek trial‚Äôƒ±nƒ±zƒ± ba≈ülatabilirsiniz. Trial bittikten sonra telefona sms yollama, arama yapma gibi birka√ß √∂zellikler gidiyor. √áokta m√ºhim bir deƒüi≈üiklik deƒüil. </p><p>Y√ºkleyip giri≈ü yaptƒ±ktan sonra ≈üu g√∂r√ºnt√º ile kar≈üƒ±lacaksƒ±nƒ±z.<br><img src="geny.png" width="350" height="350"></p><p>Add butonuna basarak sanal makine ekleyebilirsiniz. Ben <code>Custom Phone-6.0-API 23-768x1280</code>‚Äòƒ± kurdum. ≈ûimdi sƒ±rayla a≈üaƒüƒ±daki dosyalarƒ± emulator√ºm√ºze tutup atƒ±yoruz :</p><ul><li><a href="https://androidfilehost.com/?fid=23252070760974384">1_Genymotion-ARM-Translation_v1.1</a></li><li><a href="https://github.com/opengapps/x86/releases/download/20180731/open_gapps-x86-6.0-pico-20180731.zip">2_open_gapps-x86-6.0-pico-20180731</a></li><li><a href="https://download.chainfire.eu/696/supersu/">3_SuperSU-v2.46</a></li><li><a href="http://dl-xda.xposed.info/framework/sdk23/x86/xposed-v89-sdk23-x86.zip">4_xposed-v89-sdk23-x86</a></li><li><a href="https://forum.xda-developers.com/attachment.php?attachmentid=4393082&d=1516301692">5_XposedInstaller_3.1.5</a></li><li><a href="https://dl-xda.xposed.info/modules/mobi.acpm.inspeckage_v9_4c7fe1.apk">6_mobi.acpm.inspeckage_v9_4c7fe1</a></li></ul><p><a href="https://vimeo.com/156745941">https://vimeo.com/156745941</a> ≈ûu videoda nasƒ±l y√ºklendiƒüini g√∂rebilirsiniz. Videoda dosyalar android 5.0 i√ßin se√ßilmi≈ü, ancak biz 6.0 y√ºkleyeceƒüimiz i√ßin benim size verdiƒüim dosya linkleri farklƒ±. Frida genymotionda 6.0dan √∂nce √ßalƒ±≈ümadƒ±ƒüƒ±ndan √∂t√ºr√º  6.0 versiyonunu kullanƒ±yoruz.</p><p>Bu i≈ülemlerden sonra emulat√∂r√ºm√ºz hazƒ±r oldu sayƒ±lƒ±r.</p><h1 id="Toollar"><a href="#Toollar" class="headerlink" title="Toollar"></a>Toollar</h1><h2 id="Inspeckage"><a href="#Inspeckage" class="headerlink" title="Inspeckage"></a>Inspeckage</h2><p>Yukarƒ±da y√ºklediƒüimiz <a href="https://github.com/ac-pm/Inspeckage">inspeckage</a> dinamik analiz i√ßin kullanƒ±≈ülƒ± bir tool. Belirli fonksiyonlarƒ± hooklayarak analiz edilen uygulamanƒ±n hangi fonksiyonlarƒ± √ßaƒüƒ±rdƒ±ƒüƒ±nƒ± otomatik olarak size bildirmekte. √ñrneƒüin bir AES encryption yapƒ±yorsa size hangi key ile neyi encrypt ettiƒüini web aray√ºz√ºndeki <code>Crypto</code> sekmesinde size g√∂stermekte.</p><h2 id="jadx"><a href="#jadx" class="headerlink" title="jadx"></a>jadx</h2><p><a href="https://github.com/skylot/jadx/releases">Jadx</a> y√ºkleyeceƒüimiz apklarƒ± decompile etmede kullanƒ±lan bir tool. Android uygulamalar java ile yazƒ±ldƒ±ƒüƒ± i√ßin decompile i≈ülemi genelde sƒ±kƒ±ntƒ±sƒ±z bir ≈üekilde yapƒ±labilmekte. <code>jadx-gui sample.apk</code> komutu ile apkyƒ± inceleyebilirsiniz. Bazen jadx decompile i≈üleminde ba≈üarƒ±sƒ±z oluyor. √ñrnek</p><p><img src="/Mobil-Zararli-Analizi-Bolum-1-Ortami-Kuralim/jadx.png" alt="jadx"></p><p>Bu gibi durumlarda apkƒ±mƒ±zƒ±n i√ßindeki dex dosyasƒ±nƒ± jar‚Äôa √ßevirerek koda ula≈üabiliriz. Apklar aslƒ±nda bildiƒüimiz zip dosyasƒ±dƒ±r. Uzantƒ±sƒ±nƒ± zip‚Äôe √ßevirerek i√ßindeki dosyalarƒ± g√∂rebilirsiniz. Zip i√ßindeki classes.dex bizim decompile etmeye √ßalƒ±≈ütƒ±rdƒ±ƒüƒ±mƒ±z kodu barƒ±ndƒ±rƒ±r. <a href="https://github.com/pxb1988/dex2jar">https://github.com/pxb1988/dex2jar</a> tool‚Äôu ile bu dex dosyasƒ±nƒ± jar‚Äôa √ßevirebiliriz.</p><p><code>d2j-dex2jar.sh /path/to/classes.dex</code> komutu ile classes.dex2jar.jar dosyamƒ±zƒ± elde ederiz. Bu dosyayƒ± herhangi bir jar dosyasƒ± okuyan program ile a√ßabilirisiniz. Hatta bu dosyayƒ± tekrar jadx ile de a√ßabilirsiniz. Ama bu ≈üekilde a√ßtƒ±ƒüƒ±nƒ±zda apk‚Äônƒ±n i√ßinde bulunan diƒüer dosyalarƒ± g√∂remezsiniz. AndroidManifest.xml , resource gibi dosyalarƒ±.</p><h2 id="Frida"><a href="#Frida" class="headerlink" title="Frida"></a>Frida</h2><p>Benim kalbimde ayrƒ± bir yeri olan <code>Dynamic instrumentation toolkit</code> <a href="https://frida.re/">https://frida.re</a></p><p>Fridayƒ± √ßalƒ±≈ütƒ±rabilmemiz i√ßin telefonda bir adet frida serverƒ±mƒ±zƒ±n hali hazƒ±rda √ßalƒ±≈üƒ±yor olmasƒ± gerekiyor. Genymotiondaki sanal makineler x86 tabanlƒ± oldugu i√ßin <a href="https://github.com/frida/frida/releases">https://github.com/frida/frida/releases</a> adresinden en g√ºncel fridaserver-android-x86‚Äôyƒ± indiriyoruz. <code>adb push fridaserver /data/local/tmp</code> ile emulatore yolluyoruz. <code>adb shell</code> ile emulatorumuzun i√ßine giriyoruz. <code>cd /data/local/tmp</code> diyerek dosyayƒ± attƒ±ƒüƒ±mƒ±z klasore gidiyoruz. chmod verdikten sonra serverƒ±mƒ±zƒ± √ßalƒ±≈ütƒ±rƒ±yoruz</p><p>Ardƒ±ndan kendi bilgisayarƒ±mƒ±zda <code>pip install frida-tools frida</code> ile fridayƒ± y√ºkl√ºyoruz. Y√ºklendikten sonra <code>frida-ps -U</code> diyerek telefonda √ßalƒ±≈üan uygulamalarƒ±n listesini g√∂rebilirsiniz.<br>Ne yapar frida ? Mesela DKHOS‚Äôta √ß√∂zd√ºƒü√ºm bir mobil sorusundan √∂rnek <a href="https://github.com/eybisi/DKHOS/blob/master/MOBILE400.md">https://github.com/eybisi/DKHOS/blob/master/MOBILE400.md</a> . Frida android‚Äôe √∂zel bir tool da deƒüil. IOS, windows, linux her yerde √ßalƒ±≈üan bir tool. √ñrneƒüin IOSta √ßalƒ±≈üan bir uygulama i√ßin, sistemdeki bluetooth fonksiyonlarƒ±nƒ± hooklayarak, uygulamanƒ±n bluetooth protok√∂l√º ile hangi datayƒ± yollayƒ±p aldƒ±ƒüƒ±nƒ± g√∂rebilirsiniz. </p><p>Serinin ilerleyen yazƒ±larƒ±nda zararlƒ± analizi kƒ±sƒ±mlarƒ±nda bol bol yer vericem frida‚Äôya. </p><h2 id="Burp"><a href="#Burp" class="headerlink" title="Burp"></a>Burp</h2><p>Zararlƒ±larƒ±mƒ±zƒ±n √ßoƒüu komuta kontrol sunucularƒ± ile ileti≈üim kuracaƒüƒ± i√ßin bir network proxy √ßok i≈üimize yarayacak. Emulator√ºm√ºze burp kurmak i√ßin, √∂nce wifi ayarlarƒ±na gidiyoruz.<br><img src="wifi.png" width="200" height="400"></p><p>Ardƒ±ndan <code>Modify network</code> e basarak a≈üaƒüƒ±daki ekrana bilgileri giriyoruz. Genymotiondaki sanal makineler default olarak 192.168.56.1 ip adresini kullanmakta.<br><img src="burp.png" width="200" height="400"></p><p>≈ûimdi burp sertifikamƒ±zƒ± telefona y√ºklememiz gerekiyor. <a href="http://burp/">http://burp</a> adresine gidip sertifikayƒ± indirirken telefonun browserƒ± √ß√∂kt√ºƒü√º i√ßin bu i≈üi manuel yapacaƒüƒ±z. Kendi web browserƒ±nƒ±za proxy ayarƒ± √ßekip, burp sertifikanƒ±zƒ± indirin. Sertifikanƒ±n uzantƒ±sƒ±nƒ± .cer‚Äôe √ßevirin. <code>adb push /path/to/cert.cer /storage/emulated/0/Downloads</code> komutu ile emulatore sertifikayƒ± yollayƒ±n. Ardƒ±ndan telefonun <code>Settings</code> kƒ±smƒ±ndan sƒ±rayla Security-&gt;Install From SD Card diyip sertifikayƒ± y√ºklediƒüiniz klasore gidin.<br><img src="cert.png" width="200" height="400"><br>Kurmak i√ßin pin ayarlamƒ±nƒ±zƒ± isteyecek.</p><p>ƒ∞≈ülemi yaptƒ±ktan sonra burpte proxy ayarlarƒ±na gidip 192.168.56.1 : 8080 i ekleyin</p><p><img src="/Mobil-Zararli-Analizi-Bolum-1-Ortami-Kuralim/burp2.png" alt="burp2"></p><p>Artƒ±k emulatordeki HTTP ve WebSocket isteklerini burpten g√∂rebilirsiniz. </p><h1 id="VM-Hardening"><a href="#VM-Hardening" class="headerlink" title="VM Hardening"></a>VM Hardening</h1><p>Bu kƒ±sƒ±mƒ± emulator ve root detection yapan zararlƒ±lar i√ßin anlatacaƒüƒ±m. √áoƒüu zararlƒ± emulatorde √ßalƒ±≈üƒ±p √ßalƒ±≈ümadƒ±ƒüƒ±nƒ± anlamak i√ßin  build.props dosyasƒ±ndaki keylere bakar. Bizde bu dosyadaki deƒüerleri deƒüi≈ütirerek bu detectiondan kurtulabiliriz. Bunun i√ßin √∂ncelikle &#x2F;system klasorunu writeable yapmamƒ±z lazƒ±m. <code>adb shell</code> ile baƒülandƒ±ktan sonra <code>sudo su</code> diyoruz. Ardƒ±ndan <code>mount -o remount,rw /system</code> diyerek &#x2F;system klasorunu rw yapƒ±yoruz. <code>adb pull /system/build.prop</code> diyerek dosyamƒ±zƒ± √ßekiyoruz. Deƒüi≈üiklikleri yaptƒ±ktan sonra <code>adb push build.prop /system/build.prop</code> ile tekrar dosyamƒ±zƒ± yerine koyuyoruz. √ñrneƒüin benim emulatorumdeki prop dosyam <a href="build.prop">build.prop</a> Bunun dƒ±≈üƒ±nda sistemdeki binary dosyalarƒ± kontrol eden zararlƒ±lar da olabiliyor. Bunlar i√ßin en g√ºzel y√∂ntem frida. Kontrol ettikleri fonksiyonlarƒ± bulmanƒ±z ile scripti yazmanƒ±z 2 dknƒ±zƒ± almaz.</p><h1 id="Zararli-bulma"><a href="#Zararli-bulma" class="headerlink" title="Zararlƒ± bulma"></a>Zararlƒ± bulma</h1><p>Twitterdaki yabancƒ± abilerimiz √∂rnek bulduk√ßa payla≈ümakta. <a href="https://twitter.com/virqdroid">@virqdroid</a>  <a href="https://koodous.com/">https://koodous.com</a> adƒ±nda muhte≈üem bir site var. Kendiniz rule yazarak siteye y√ºklenen apklar i√ßinde zararlƒ± bulabilirsiniz. Yakƒ±n zamanda apklab.io sitesi a√ßƒ±lacak orasƒ± da efsane olucak gibi.</p>]]></content>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Malware </tag>
            
            <tag> Analiz </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CTFZone 2018 Android_ololo_country_checker</title>
      <link href="/CTFZone-2018-android-ololo-country-checker/"/>
      <url>/CTFZone-2018-android-ololo-country-checker/</url>
      <content type="html"><![CDATA[<p>Points : 314 , 8 takƒ±m √ß√∂zd√º</p><p>Sorunun a√ßƒ±klamasƒ± :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">It&#x27;s a foreign android application. Let&#x27;s try to guess the country!</span><br></pre></td></tr></table></figure><p>Ve bir apk verildi. <a href="ololo.s.apk">ololo.apk</a></p><p>Apkdaki dosyalarƒ±mƒ±z :<br><img src="/CTFZone-2018-android-ololo-country-checker/jadx.png" alt="apk"></p><p>APKyƒ± jadx ile a√ßtƒ±ƒüƒ±mda, jadx‚Äôin classlarƒ± d√ºzg√ºn decompile edemediƒüini g√∂rd√ºm. Hazƒ±r a√ßmƒ±≈üken native k√ºt√ºphane var mƒ± diye baktƒ±m ve lib&#x2F;armeabi-v7a altƒ±nda <a href="libnative-lib.so">libnative-lib.so</a> dosyasƒ±nƒ± g√∂rd√ºm. ≈ûimdii normalde android emulatoru olarak genymotion kullanmaktaydƒ±m. Ancak bu native so dosyasƒ±nƒ± apk‚Äônƒ±n √ßalƒ±≈ütƒ±rabilmesi i√ßin arm tabanlƒ± bir imaj kullanmam gerek, genymotionda arm sistem ayaƒüa kaldƒ±rmak malesef m√ºmk√ºn deƒüil. O y√ºzden pa≈üa pa≈üa android studioyu kurup armeabi-v7a lƒ± bir imaj kurmamƒ±z gerekiyor. Ve apkmƒ±zƒ±n MainActivity‚Äôsindeki</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (System.getProperty(&quot;os.arch&quot;).equalsIgnoreCase(&quot;armeabi-v7a&quot;)) &#123;</span><br><span class="line">    System.loadLibrary(&quot;native-lib&quot;);</span><br></pre></td></tr></table></figure><p>≈üu if‚Äôi kaldƒ±rmamƒ±z gerekiyor. Kaldƒ±rmazsak so dosyasƒ±nƒ± y√ºkleyemiyor . Bu i≈ülem i√ßin √∂nce <code>apktool d ololo.apk</code> ile decompile edip ilgili yeri silin (bu sefer size bƒ±rakƒ±yorum) ve <code>apktool b ololo.apk</code> ile build edin. Sign ettikten sonra apkyƒ± telefona y√ºkleyin.Uygulamayƒ± a√ßtƒ±ƒüƒ±mƒ±zda kar≈üƒ±mƒ±za a≈üaƒüƒ±daki ekran geliyor. Check‚Äôe bastƒ±ƒüƒ±nƒ±zda crash almƒ±yorsanƒ±z if kƒ±smƒ±nƒ± doƒüru yapmƒ±≈üsƒ±nƒ±z demektir. Her checke basƒ±ldƒ±ƒüƒ±nda resim ve alttaki stringler deƒüi≈üiyor.</p><p><img src="/CTFZone-2018-android-ololo-country-checker/open.png" alt="open"></p><p>Java classlarƒ±nƒ± decompile edebilmek i√ßin √∂nce apk‚Äôyƒ± zip‚Äôe √ßevirdim ve i√ßinden classes.dex‚Äôi √ßƒ±kardƒ±m. Ardƒ±ndan bu dex dosyasƒ±nƒ± <a href="https://github.com/pxb1988/dex2jar/releases">https://github.com/pxb1988/dex2jar/releases</a> ile jar‚Äôa √ßevirdim. Jar dosyasƒ±nƒ± <a href="http://www.benf.org/other/cfr/">http://www.benf.org/other/cfr/</a> aracƒ± ile java hale getirdim.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -jar cfr_0_132.jar classes-dex2jar.jar &gt; main.java</span><br></pre></td></tr></table></figure><p><a href="main.java">main.java</a> dosyasƒ±nƒ± incelemeye koyuldum. √áok g√ºzel anti-debugging methodlarƒ± bulunmaktaydƒ±. Genel olarak aaa.aie.* classlarƒ±nƒ±n ilk methodu get, ikincisi de gelen parametre ile bu get‚Äôin kar≈üƒ±la≈ütƒ±rƒ±lmasƒ± idi.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> aaa.aie;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.telephony.TelephonyManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ekd</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">egdi</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ((TelephonyManager)context.getSystemService(<span class="string">&quot;phone&quot;</span>)).getDeviceId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">ehkdi</span><span class="params">(Context object, String[] arrstring)</span> &#123;</span><br><span class="line">        object = ekd.egdi(object);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> arrstring.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!arrstring[i].equalsIgnoreCase((String)object)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>aaa.aie.eka.ega -&gt; getSDKVersion   </li><li>aaa.aie.eka.egn -&gt; getPackageName  &#x2F;&#x2F; uygulamanƒ±n adƒ±</li><li>aaa.aie.ekd.egdi -&gt; getDeviceId</li><li>aaa.aie.eki.egsi -&gt; getSubscriberId</li><li>aaa.aie.ekl.egsci -&gt; getSimCountryIso</li><li>aaa.aie.ekpn.egln -&gt; getLine1Number</li></ul><p>ololo.ololo.ololo.MainActivity.getSoBody methodu res&#x2F;raw altƒ±ndaki resimleri alƒ±p i≈üleme tabi tutmaktaydƒ±. Daha fazla i≈ülem g√∂remeyince asƒ±l i≈üin so dosyasƒ±nda yapƒ±ldƒ±ƒüƒ±nƒ± d√º≈ü√ºn√ºp native dosyamƒ±za dalmaya karar verdim.</p><p>libnative-lib.so dosyamƒ±zƒ± IDAPro‚Äôda a√ßtƒ±m. 2 fonksiyonumuz dƒ±≈üƒ±nda hi√ßbir fonksiyonun ismi ho≈ü g√∂z√ºkm√ºyordu.</p><p><img src="/CTFZone-2018-android-ololo-country-checker/ida.png" alt="ida"></p><p>O iki fonksiyonun isminin √∂yle olmasƒ±nƒ±n nedeni apkƒ±mƒ±zƒ±n MainActivity sinde √ßaƒüƒ±rƒ±lmalarƒ±. Bu fonksiyonlarƒ± incelemeye koyuldum. √ñncelikle sorunun ismiyle alakalƒ± olduƒüu i√ßin <code>Java_ololo_ololo_ololo_MainActivity_checkSomethings</code> ile ba≈üladƒ±m. Fonksiyonumuz yakla≈üƒ±k 90 tane variable tanƒ±mladƒ±ktan sonra 4 adet fonksiyon √ßaƒüƒ±rmakta</p><p><img src="/CTFZone-2018-android-ololo-country-checker/variable.png" alt="var"></p><p>Bu 4 fonksiyonun birine gittiƒüimde g√∂z√ºme hemen paket isimleri ili≈üti</p><p><img src="/CTFZone-2018-android-ololo-country-checker/fonk.png" alt="fonk"></p><p>Tam olarak emin olmasamda <code>aaa.aie.ekl.egsci</code> ‚Äòyi √ßaƒüƒ±rƒ±p d√∂nen deƒüeri dword_9ABC‚Äôye atadƒ±ƒüƒ± sonucuna vardƒ±m. Deƒüi≈ükeni ve fonksiyonun adƒ±nƒ± ilgili method ne yapƒ±yorsa ona g√∂re adlandƒ±rdƒ±m. Bu √∂rnek i√ßin fonksiyon ismi -&gt; getSimCountryIso ve dword_9ABC -&gt; strSimCountryIso</p><p>4 fonksiyonda da bu ≈üekilde isimlendirme yaptƒ±m.</p><p><img src="/CTFZone-2018-android-ololo-country-checker/md5.png" alt="md5"></p><p>j_ ile ba≈ülayan fonksiyonlarda √ßok fazla i≈ülem vardƒ±. string deƒüerleri sƒ±rayla bu 3 fonksiyona tabi  tutuluyordu. Belkii md5 ?? .. Bi ihtimal diyip v84‚Äôe md5(strSubscriberId) diyip yoluma devam ettim. A√ßƒ±kcasƒ± burdan sonra biraz tahmin biraz atma tutma oldu diyebilirim. Kafamdaki senaryo cihazdan topladƒ±ƒüƒ± bilgilerin md5ini alƒ±p kar≈üƒ±la≈ütƒ±rƒ±yor eƒüer uyuyorsa bize flagi veriyor.</p><p><img src="/CTFZone-2018-android-ololo-country-checker/md5s.png" alt="md5s"></p><p>Bu byte**** deƒüi≈ükenlerindeki deƒüerlere bakarsak;</p><p><img src="/CTFZone-2018-android-ololo-country-checker/byte.png" alt="byte"></p><p>online ara√ßlarla hepsinin kar≈üƒ±lƒ±ƒüƒ±nƒ± buluyoruz.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phone    = 8203412(03bec67d849e7114f1a828e1628495fe)/7793952(c377ec2ae9bc906448b6c39326e42f04)</span><br><span class="line">deviceID = 89123988(e176e3acf427e59308520009b3e2a793)/01982375(b400b6e082104ce63f18f45e64c2fbfd)</span><br><span class="line">iso_code = KZ(4aceb7d6b4564ec96bc6605cd5af37e7)/KG(56d721ccadb8bbfd8b47390d82a6ea4b)</span><br><span class="line">subscriberID = 31231712(5b529e731eab2fb96185b0e9769fc498)</span><br><span class="line">sdk_ver  = 19(1f0e3dad99908345f7439f8ffabdffc4)</span><br><span class="line">package_name = ololo.ololo.ololo(5b4802bc02112666dabafe0c77ac18d0)</span><br></pre></td></tr></table></figure><p>Evet tahminlerim doƒüru gibi. Daha fazla arm‚Äôda boƒüulmadan bu deƒüerleri d√∂nd√ºrecek bir frida scripti yazƒ±p denemek lazƒ±m. Eƒüer daha √∂nce frida kurmadƒ±ysanƒ±z kƒ±saca √∂zetlersek</p><p><code>pip install frida </code> ile client‚Äôa frida kuruyoruz.</p><p><code>https://github.com/frida/frida/releases</code>dan telefona veya emulatore uygun son surum server‚Äôƒ± indirip <code>adb push frida-dosyaismi /data/local/tmp</code> ile pushluyoruz. <code>chmod +x frida-dosyaismi</code> <code>./frida-dosyaismi</code> ile serverƒ± ba≈ülatƒ±yoruz.<br>Ardƒ±ndan clientta <code>frida-ps -U </code> dersek telefonda √ßalƒ±≈üan uygulamalarƒ± g√∂rebiliriz.<br>Instrumentation yapƒ±caƒüƒ±mƒ±z uygulamayƒ± listeden kopyalayƒ±p <code>frida -U ololo.ololo.ololo -l script.js</code> diyerek scriptimizi load edebiliyoruz.  </p><p>Frida scriptimiz √ßok basit.</p><ul><li>aaa.aie.eka.ega -&gt; getSDKVersion   </li><li>aaa.aie.eka.egn -&gt; getPackageName  &#x2F;&#x2F; uygulamanƒ±n adƒ±</li><li>aaa.aie.ekd.egdi -&gt; getDeviceId</li><li>aaa.aie.eki.egsi -&gt; getSubscriberId</li><li>aaa.aie.ekl.egsci -&gt; getSimCountryIso</li><li>aaa.aie.ekpn.egln -&gt; getLine1Number</li></ul><p>≈üu fonksiyonlara md5‚Äôini bulduƒüumuz deƒüerleri d√∂nd√ºreceƒüiz.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">JavaString</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;java.lang.String&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">EADB</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;aaa.aie.eadb&quot;</span>);</span><br><span class="line">    <span class="variable constant_">EADB</span>.<span class="property">headb</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Called - aaa.aib.aib()&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">EKPN</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;aaa.aie.ekpn&quot;</span>); <span class="comment">// PhoneNumber</span></span><br><span class="line">    <span class="variable constant_">EKPN</span>.<span class="property">egln</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Called - aaa.aie.ekpn.egln()&quot;</span>);</span><br><span class="line">        <span class="comment">// return &quot;7793952&quot;;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;8203412&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">EKD</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;aaa.aie.ekd&quot;</span>); <span class="comment">// DeviceId</span></span><br><span class="line">    <span class="variable constant_">EKD</span>.<span class="property">egdi</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Called - aaa.aie.ekd.egdi()&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;89123988&quot;</span>;</span><br><span class="line">        <span class="comment">// return &quot;01982375&quot;;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">EKL</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;aaa.aie.ekl&quot;</span>); <span class="comment">// SimIsoCountry</span></span><br><span class="line">    <span class="variable constant_">EKL</span>.<span class="property">egsci</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Called - aaa.aie.ekl.egcsi()&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;KZ&quot;</span>;</span><br><span class="line">        <span class="comment">//return &quot;KG&quot;;</span></span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">var</span> <span class="variable constant_">EKA</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;aaa.aie.eka&quot;</span>);</span><br><span class="line">     <span class="variable constant_">EKA</span>.<span class="property">ega</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Called - aaa.aie.eka.ega()&quot;</span>);</span><br><span class="line">       <span class="keyword">return</span> <span class="title class_">JavaString</span>.$new(<span class="string">&quot;19&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable constant_">EKA</span>.<span class="property">egn</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Called - aaa.aie.eka.egn()&quot;</span>);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;ololo.ololo.ololo&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">EKI</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;aaa.aie.eki&quot;</span>);</span><br><span class="line">    <span class="variable constant_">EKI</span>.<span class="property">egsi</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Called - aaa.aie.eki.egsi()&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;31231712&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">choose</span>(<span class="string">&quot;ololo.ololo.ololo.MainActivity&quot;</span>, &#123;</span><br><span class="line">        onMatch : <span class="keyword">function</span>(<span class="params">instance</span>) &#123;</span><br><span class="line">            instance.<span class="property">e</span>.<span class="property">value</span> = <span class="number">0</span>;</span><br><span class="line">            instance.<span class="property">c</span>.<span class="property">value</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        onComplete : <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Vee FLAG : ctfzone{1t_1s_0l0l0_g00d_4tt6mpt}</p><p><img src="/CTFZone-2018-android-ololo-country-checker/sol.png" alt="sol"></p>]]></content>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Android </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CTFZone 2018 Never Ever Be Fooled to Pay the Ransomware!</title>
      <link href="/CTFZone-2018-Never-ever-be-fooled-to-pay-the-ransomware/"/>
      <url>/CTFZone-2018-Never-ever-be-fooled-to-pay-the-ransomware/</url>
      <content type="html"><![CDATA[<p>Points: 269 , Yakla≈üƒ±k 9 takƒ±m √ß√∂zm√º≈üt√º sanƒ±rƒ±m.</p><p>Sorunun a√ßƒ±klamasƒ± :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Has Your Android Phone Been Infected with Malware? ‚Äî Yes! ‚Äî It‚Äôs awful but we have a cure!</span><br></pre></td></tr></table></figure><p>Soruda bize bir <a href="phonedump.zip">zip dosyasƒ±</a> verildi. ƒ∞√ßinden imageinfo.txt ve adb backup dosyasƒ± √ßƒ±ktƒ±. Adb backup dosyasƒ±nƒ± </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=mybackup.ab bs=<span class="number">24</span> skip=<span class="number">1</span> | openssl zlib -d &gt; mybackup.tar </span><br></pre></td></tr></table></figure><p>komutu ile tar dosyasƒ±na √ßevirdim ve a√ßtƒ±m.<br>Tar i√ßinde 2 klasor vardƒ±. <code>shared</code> dosyasƒ± telefonun sd kartƒ±ndaki dosyalarƒ±n, <code>apps</code> te telefonda y√ºkl√º olan uygulamalarƒ±n klasor√ºyd√º. Soru a√ßƒ±klamasƒ± okunduƒüunda bizden encrypt edilmi≈ü dosyalarƒ± decrypt etmemizi istediƒüi anla≈üƒ±lƒ±yordu. &#x2F;shared&#x2F;0&#x2F;DCIM&#x2F;Camera&#x2F; i√ßinde sƒ±rasƒ±yla</p><ul><li><a href="IMG_20180101_071505.jpg.xxx">IMG_20180101_071505.jpg.xxx</a></li><li><a href="IMG_20180101_071505.jpg.salt">IMG_20180101_071505.jpg.salt</a></li><li><a href="IMG_20180101_071505.jpg.iv">IMG_20180101_071505.jpg.iv</a></li></ul><p>bulunmaktaydƒ±. Flagde b√ºy√ºk olasƒ±lƒ±kla resimde idi.( Uygulamalara sd kart okuma-yazma izni verirken dikkatli olmak lazƒ±m :) )</p><p>≈ûimdi sƒ±ra bu encryption‚Äôƒ± yapan uygulamayƒ± bulmaktaydƒ±. <code>apps</code> klasorunde olan <code>com.dfwgxc.zimcdwpealgy</code> a≈üƒ±rƒ± tanƒ±dƒ±k geldi ve bir heyecan bastƒ±. Yakƒ±n zamanda ortaya ortaya √ßƒ±kan ve T√ºrk kullancƒ±larƒ± hedef alan <code>Anubis</code> zararlƒ±sƒ±nƒ±n random paket isimlerine √ßok benziyordu.<a href="https://mcoskuner.net/2018/07/11/anubis-zararlisi-ve-sahibinden-uygulamasi-kisim-2-indirilen-apk-dosyalarinin-incelenmesi/">≈ûurada</a> analizini g√∂rebilirsiniz <code>/shared/0/Download/</code> i√ßindeki <code>adobe flash player.apk</code> yƒ± jadx‚Äôte a√ßƒ±nca kesin emin oldum. APK‚Äônƒ±n paket adƒ± <code>com.dfwgxc.zimcdwpealgy</code> ile uyu≈üuyordu. Uygulamadan ekran g√∂r√ºnt√ºs√º</p><p><img src="/CTFZone-2018-Never-ever-be-fooled-to-pay-the-ransomware/apk.jpg" alt="APK"></p><p>G√∂rd√ºƒü√ºn√ºz √ºzere uygulama obfuscated ve reflection kullanmakta. Encrypt edilmi≈ü dosyalarƒ±n isimlerinden anla≈üƒ±lan o ki dosyalar AES ile encrypt edilmi≈ü. Benimde aklƒ±ma  ‚ÄòAcaba bu key obfuscated olan apk‚Äônƒ±n i√ßinde mi ?‚Äô sorusu geldi. Uygulamayƒ± √ßalƒ±≈ütƒ±rƒ±p frida ile gerekli AES fonksiyonlarƒ± hooklayarak key‚Äôi √ßƒ±karmayƒ± deneyecektim. Ancak apk √ßalƒ±≈ümadƒ± :(<br>Bu sefer <code>apps/com.dfwgxc.zimcdwpealgy/r/app_files/oat/arm64</code> i√ßindeki <code>muquieljmg.vdex</code> dosyasƒ±nƒ± incelemeye ba≈üladƒ±m.  Vdex nedir derseniz google amcanƒ±n sitesinden :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vdex: contains the uncompressed DEX code of the APK, with some additional metadata to speed up verification.</span><br></pre></td></tr></table></figure><p>Vdex dosyasƒ±nƒ± <code>https://github.com/anestisb/vdexExtractor</code> ile √∂nce dex‚Äôe sonrada dex2jar ile <a href="muquieljmg.apk_classes-dex2jar.jar">jar</a>‚Äòa √ßevirdim. Olu≈üan <code>muquieljmg.apk_classes-dex2jar.jar</code>‚Äòƒ± jd-gui ile a√ßtƒ±m.</p><p><img src="/CTFZone-2018-Never-ever-be-fooled-to-pay-the-ransomware/jar.jpg" alt="jar"></p><p>Sonunda okunur ≈üeyler g√∂rmeye ba≈ülamƒ±≈ütƒ±m. </p><p><img src="/CTFZone-2018-Never-ever-be-fooled-to-pay-the-ransomware/hm.png" alt="hmm"></p><p><code>faweifunhiunfg2uylbh8634gh783ghinegkrjln18hi8123</code> fonksiyonu sd kart i√ßindeki dosyalarƒ± tek tek gezerek, dosyanƒ±n ismi ‚Äúxxx‚Äù,‚Äùiv‚Äù yada ‚Äúsalt‚Äù ile bitiyor mu diye kontrol etmekte. Encryption yaptƒ±ƒüƒ± dosyaya denk gelirse tekrar encryption yapmamak i√ßin bu i≈ülemi yapƒ±yor. <code>faweifunhiunfg2uylbh8734gh778ghinegkrGln18hi8123</code> fonksiyonu deviceID‚Äôsinin md5‚Äôini almak √ºzere id‚Äôyi <code>HIUHuihqfdiuhIUQWHDUIhgfi1278e412y78yDASVBDUYvwq</code> fonksiyonuna yolluyor</p><p><img src="/CTFZone-2018-Never-ever-be-fooled-to-pay-the-ransomware/md5.png" alt="md5"></p><p>Ve dosya ismi ile md5(deviceID)‚Äôi <code>agaierughl8y3g98ersiugohserkihgoas8erg89</code> fonksiyonuna yollanƒ±yor.</p><p><img src="/CTFZone-2018-Never-ever-be-fooled-to-pay-the-ransomware/wow.png" alt="wow"></p><p>Fonksiyona giren paramString1 -&gt; md5(deviceID), paramStrings2 -&gt; dosya ismi. Resimden anla≈üƒ±lacaƒüƒ± √ºzere md5(deviceID)‚Äôyi key olarak kullanƒ±yor ve dosyayƒ± encrypt ediyor. Pekii .. Biz encryption yapƒ±lmƒ±≈ü cihazƒ±n id‚Äôsini nasƒ±l bulucaz ?<br>Soruda verilen zipten bir de </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt; Bizone &gt; cat imageinfo.txt </span><br><span class="line">[Computed Hashes] Image</span><br><span class="line"> MD5 checksum:    E60E8FA8C64C9FE136E1731F388CF7B0</span><br><span class="line"> SHA1 checksum:   687BCAB465DA1631B86A0EC64D92BE45EC7B96EE</span><br><span class="line"></span><br><span class="line">[Device Information]</span><br><span class="line"> Android version:8.1.0</span><br><span class="line"> Android security patch level:July 1, 2018</span><br><span class="line"> Model:Mi A1</span><br><span class="line"> Wi-fi MAC: 04:b1:67:18:47:gg</span><br><span class="line"> Local time: 2018-07-19 15:48:54 UTC</span><br><span class="line"> Android time: 2018-01-01 07:15:37 EST</span><br><span class="line"> Shell permissions: shell</span><br><span class="line"> Serial Number: 4b26a8969905</span><br><span class="line"></span><br><span class="line"> IMEI 1:867562039629283</span><br><span class="line"> IMEI 2:867562039629291</span><br></pre></td></tr></table></figure><p>≈üeklinde bir dosya daha √ßƒ±kmƒ±≈ütƒ±. Device ID‚Äôsini yani IMEI 1 yada IMEI 2‚Äônin md5ini alƒ±p, decrypt i≈ülemini yapƒ±cak bir java programƒ± yazmamƒ±z gerekiyor. Soruyu yapan abimiz bizi d√º≈ü√ºn√ºp decryption i≈ülemini yapan fonksiyonu da oraya eklemi≈ü <code>UIHiuhLIUHIHFiuhIUWEFHi8uh23l78ry78hfguisdh</code>.ƒ∞lgili fonksiyonlarƒ±n olduƒüu <a href="PkdGTfG.java">class</a></p><p>IMEI 1‚Äôin md5‚Äôini alƒ±yoruz</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&lt; ~ &gt; <span class="built_in">echo</span> -n <span class="string">&quot;867562039629283&quot;</span> | <span class="built_in">md5sum</span></span><br><span class="line">55bbc19a737d5f93e5ce09424a1b1b8a</span><br></pre></td></tr></table></figure><p>Parametrelerle biraz oynayarak √ßalƒ±≈ücak hale getiriyoruz</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.security.Key;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKeyFactory;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.IvParameterSpec;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.PBEKeySpec;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.KeySpec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">hm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">paramString1</span> <span class="operator">=</span>  <span class="string">&quot;55bbc19a737d5f93e5ce09424a1b1b8a&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">paramString2</span> <span class="operator">=</span> <span class="string">&quot;IMG_20180101_071505.jpg&quot;</span>;</span><br><span class="line">    <span class="type">Object</span> <span class="variable">localObject1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(paramString2+<span class="string">&quot;.salt&quot;</span>);</span><br><span class="line">    <span class="type">Object</span> <span class="variable">localObject2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">8</span>];</span><br><span class="line">    ((FileInputStream)localObject1).read((<span class="type">byte</span>[])localObject2);</span><br><span class="line">    ((FileInputStream)localObject1).close();</span><br><span class="line">    <span class="type">Object</span> <span class="variable">localObject3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(paramString2 + <span class="string">&quot;.iv&quot;</span>);</span><br><span class="line">    localObject1 = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">16</span>];</span><br><span class="line">    ((FileInputStream)localObject3).read((<span class="type">byte</span>[])localObject1);</span><br><span class="line">    ((FileInputStream)localObject3).close();</span><br><span class="line">    localObject2 = <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(SecretKeyFactory.getInstance(<span class="string">&quot;PBKDF2WithHmacSHA1&quot;</span>).generateSecret(<span class="keyword">new</span> <span class="title class_">PBEKeySpec</span>(paramString1.toCharArray(), (<span class="type">byte</span>[])localObject2, <span class="number">65536</span>, <span class="number">256</span>)).getEncoded(), <span class="string">&quot;AES&quot;</span>);</span><br><span class="line">    <span class="type">Cipher</span> <span class="variable">cipher1</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;AES/CBC/PKCS5Padding&quot;</span>);</span><br><span class="line">    cipher1.init(<span class="number">2</span>, (Key)localObject2, <span class="keyword">new</span> <span class="title class_">IvParameterSpec</span>((<span class="type">byte</span>[])localObject1));</span><br><span class="line">    localObject1 = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(paramString2+<span class="string">&quot;.xxx&quot;</span>);</span><br><span class="line">    <span class="type">FileOutputStream</span> <span class="variable">p4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(paramString2 + <span class="string">&quot;.decrypted&quot;</span>);</span><br><span class="line">    localObject2 = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">64</span>];</span><br><span class="line">    <span class="keyword">for</span> (;;)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> ((FileInputStream)localObject1).read((<span class="type">byte</span>[])localObject2);</span><br><span class="line">      <span class="keyword">if</span> (i == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      localObject3 = cipher1.update((<span class="type">byte</span>[])localObject2, <span class="number">0</span>, i);</span><br><span class="line">      <span class="keyword">if</span> (localObject3 != <span class="literal">null</span>) &#123;</span><br><span class="line">        p4.write((<span class="type">byte</span>[])localObject3);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">byte</span>[] cip = cipher1.doFinal();</span><br><span class="line">    <span class="keyword">if</span> (cip != <span class="literal">null</span>) &#123;</span><br><span class="line">      p4.write(cip);</span><br><span class="line">    &#125;</span><br><span class="line">    p4.close();</span><br><span class="line">    p4.flush();</span><br><span class="line">    p4.close();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ve </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">javac hm.java</span><br><span class="line">java hm</span><br></pre></td></tr></table></figure><p>diyerek √ßalƒ±≈ütƒ±rƒ±yoruz. √áƒ±ktƒ± olarak bize IMG_20180101_071505.jpg.decrypted veriyor. Vee flag kar≈üƒ±mƒ±zda</p><p><img src="/CTFZone-2018-Never-ever-be-fooled-to-pay-the-ransomware/IMG_20180101_071505.jpg.decrypted" alt="final"></p>]]></content>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
